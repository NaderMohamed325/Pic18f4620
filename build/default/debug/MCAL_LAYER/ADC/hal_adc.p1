Version 4.0 HI-TECH Software Intermediate Code
[v F3544 `(v ~T0 @X0 0 tf ]
[v F3545 `(v ~T0 @X0 0 tf ]
[v F3503 `(v ~T0 @X0 0 tf ]
"26 MCAL_LAYER/ADC/hal_adc.c
[; ;MCAL_LAYER/ADC/hal_adc.c: 26: Std_ReturnType ADC_Init(const adc_config_t* adc) {
[c E3482 0 1 2 3 4 5 6 7 .. ]
[n E3482 . ADC_0_TAD ADC_2_TAD ADC_4_TAD ADC_6_TAD ADC_8_TAD ADC_12_TAD ADC_16_TAD ADC_20_TAD  ]
[c E3492 0 1 2 3 4 5 6 .. ]
[n E3492 . ADC_CONVERSION_CLOCK_FOSC_DIV_2 ADC_CONVERSION_CLOCK_FOSC_DIV_8 ADC_CONVERSION_CLOCK_FOSC_DIV_32 ADC_CONVERSION_CLOCK_FOSC_DIV_FRC ADC_CONVERSION_CLOCK_FOSC_DIV_4 ADC_CONVERSION_CLOCK_FOSC_DIV_16 ADC_CONVERSION_CLOCK_FOSC_DIV_64  ]
[c E3466 0 1 2 3 4 5 6 7 8 9 10 11 12 13 .. ]
[n E3466 . ADC_CHANNEL_AN0 ADC_CHANNEL_AN1 ADC_CHANNEL_AN2 ADC_CHANNEL_AN3 ADC_CHANNEL_AN4 ADC_CHANNEL_AN5 ADC_CHANNEL_AN6 ADC_CHANNEL_AN7 ADC_CHANNEL_AN8 ADC_CHANNEL_AN9 ADC_CHANNEL_AN10 ADC_CHANNEL_AN11 ADC_CHANNEL_AN12 ADC_CHANNEL_AN13  ]
[c E3462 0 1 .. ]
[n E3462 . INTERRUPT_LOW_PRIORITY INTERRUPT_HIGH_PRIORITY  ]
"110 MCAL_LAYER/ADC/hal_adc.h
[; ;MCAL_LAYER/ADC/hal_adc.h: 110: typedef struct {
[s S274 `*F3503 1 `E3482 1 `E3492 1 `E3466 1 `E3462 1 :1 `uc 1 :1 `uc 1 :6 `uc 1 ]
[n S274 . ADC_Interrupt_Handler adc_acquisition adc_conversion_clock adc_channel priority voltage_ref result_format _reserved_bits ]
"4535 D:/IDE MCU/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\../proc/pic18f4620.h
[s S179 :1 `uc 1 :1 `uc 1 ]
[n S179 . . GO_NOT_DONE ]
"4539
[s S180 :1 `uc 1 :1 `uc 1 :4 `uc 1 ]
[n S180 . ADON GO_nDONE CHS ]
"4544
[s S181 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S181 . . GO CHS0 CHS1 CHS2 CHS3 ]
"4552
[s S182 :1 `uc 1 :1 `uc 1 ]
[n S182 . . DONE ]
"4556
[s S183 :1 `uc 1 :1 `uc 1 ]
[n S183 . . NOT_DONE ]
"4560
[s S184 :1 `uc 1 :1 `uc 1 ]
[n S184 . . nDONE ]
"4564
[s S185 :1 `uc 1 :1 `uc 1 ]
[n S185 . . GO_DONE ]
"4568
[s S186 :1 `uc 1 :1 `uc 1 ]
[n S186 . . GODONE ]
"4534
[u S178 `S179 1 `S180 1 `S181 1 `S182 1 `S183 1 `S184 1 `S185 1 `S186 1 ]
[n S178 . . . . . . . . . ]
"4573
[v _ADCON0bits `VS178 ~T0 @X0 0 e@4034 ]
"4379
[s S172 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S172 . ADCS ACQT . ADFM ]
"4385
[s S173 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S173 . ADCS0 ADCS1 ADCS2 ACQT0 ACQT1 ACQT2 ]
"4378
[u S171 `S172 1 `S173 1 ]
[n S171 . . . ]
"4394
[v _ADCON2bits `VS171 ~T0 @X0 0 e@4032 ]
[v F3535 `(v ~T0 @X0 1 tf1`E3466 ]
"11 MCAL_LAYER/ADC/hal_adc.c
[; ;MCAL_LAYER/ADC/hal_adc.c: 11: static __attribute__((inline)) void adc_input_channel_port_configure(adc_channel_select_t channel);
[v _adc_input_channel_port_configure `TF3535 ~T0 @X0 0 s ]
[v F3538 `(v ~T0 @X0 1 tf1`*CS274 ]
"12
[; ;MCAL_LAYER/ADC/hal_adc.c: 12: static __attribute__((inline)) void adc_select_result_format(const adc_config_t* adc);
[v _adc_select_result_format `TF3538 ~T0 @X0 0 s ]
[v F3541 `(v ~T0 @X0 1 tf1`*CS274 ]
"13
[; ;MCAL_LAYER/ADC/hal_adc.c: 13: static __attribute__((inline)) void adc_select_voltage_ref(const adc_config_t* adc);
[v _adc_select_voltage_ref `TF3541 ~T0 @X0 0 s ]
"2503 D:/IDE MCU/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\../proc/pic18f4620.h
[s S91 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S91 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE PSPIE ]
"2513
[s S92 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S92 . . TX1IE RC1IE ]
"2502
[u S90 `S91 1 `S92 1 ]
[n S90 . . . ]
"2519
[v _PIE1bits `VS90 ~T0 @X0 0 e@3997 ]
"6380
[s S263 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S263 . RBIF INT0IF TMR0IF RBIE INT0IE TMR0IE PEIE_GIEL GIE_GIEH ]
"6390
[s S264 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S264 . . INT0F T0IF . INT0E T0IE PEIE GIE ]
"6400
[s S265 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S265 . . GIEL GIEH ]
"6379
[u S262 `S263 1 `S264 1 `S265 1 ]
[n S262 . . . . ]
"6406
[v _INTCONbits `VS262 ~T0 @X0 0 e@4082 ]
"2580
[s S94 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S94 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF PSPIF ]
"2590
[s S95 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S95 . . TX1IF RC1IF ]
"2579
[u S93 `S94 1 `S95 1 ]
[n S93 . . . ]
"2596
[v _PIR1bits `VS93 ~T0 @X0 0 e@3998 ]
"4662
[v _ADRESH `Vuc ~T0 @X0 0 e@4036 ]
"4655
[v _ADRESL `Vuc ~T0 @X0 0 e@4035 ]
"1380
[v _TRISA `Vuc ~T0 @X0 0 e@3986 ]
"2268
[v _TRISE `Vuc ~T0 @X0 0 e@3990 ]
"1602
[v _TRISB `Vuc ~T0 @X0 0 e@3987 ]
"4450
[s S175 :4 `uc 1 :2 `uc 1 ]
[n S175 . PCFG VCFG ]
"4454
[s S176 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S176 . PCFG0 PCFG1 PCFG2 PCFG3 VCFG0 VCFG1 ]
"4462
[s S177 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S177 . . CHSN3 VCFG01 VCFG11 ]
"4449
[u S174 `S175 1 `S176 1 `S177 1 ]
[n S174 . . . . ]
"4469
[v _ADCON1bits `VS174 ~T0 @X0 0 e@4033 ]
[v F3591 `(v ~T0 @X0 0 tf ]
"54 D:/IDE MCU/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\../proc/pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"191
[; <" PORTB equ 0F81h ;# ">
"362
[; <" PORTC equ 0F82h ;# ">
"537
[; <" PORTD equ 0F83h ;# ">
"679
[; <" PORTE equ 0F84h ;# ">
"882
[; <" LATA equ 0F89h ;# ">
"994
[; <" LATB equ 0F8Ah ;# ">
"1106
[; <" LATC equ 0F8Bh ;# ">
"1218
[; <" LATD equ 0F8Ch ;# ">
"1330
[; <" LATE equ 0F8Dh ;# ">
"1382
[; <" TRISA equ 0F92h ;# ">
"1387
[; <" DDRA equ 0F92h ;# ">
"1604
[; <" TRISB equ 0F93h ;# ">
"1609
[; <" DDRB equ 0F93h ;# ">
"1826
[; <" TRISC equ 0F94h ;# ">
"1831
[; <" DDRC equ 0F94h ;# ">
"2048
[; <" TRISD equ 0F95h ;# ">
"2053
[; <" DDRD equ 0F95h ;# ">
"2270
[; <" TRISE equ 0F96h ;# ">
"2275
[; <" DDRE equ 0F96h ;# ">
"2434
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; <" EEADR equ 0FA9h ;# ">
"3015
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; <" RCSTA equ 0FABh ;# ">
"3027
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; <" TXSTA equ 0FACh ;# ">
"3237
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; <" TXREG equ 0FADh ;# ">
"3493
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; <" RCREG equ 0FAEh ;# ">
"3505
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; <" T3CON equ 0FB1h ;# ">
"3643
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; <" CMCON equ 0FB4h ;# ">
"3754
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; <" ADRES equ 0FC3h ;# ">
"4657
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; <" T2CON equ 0FCAh ;# ">
"5109
[; <" PR2 equ 0FCBh ;# ">
"5114
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; <" T1CON equ 0FCDh ;# ">
"5329
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; <" RCON equ 0FD0h ;# ">
"5483
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; <" T0CON equ 0FD5h ;# ">
"5935
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; <" STATUS equ 0FD8h ;# ">
"6027
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; <" BSR equ 0FE0h ;# ">
"6090
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; <" WREG equ 0FE8h ;# ">
"6158
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; <" INTCON equ 0FF2h ;# ">
"6493
[; <" PROD equ 0FF3h ;# ">
"6500
[; <" PRODL equ 0FF3h ;# ">
"6507
[; <" PRODH equ 0FF4h ;# ">
"6514
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; <" PC equ 0FF9h ;# ">
"6567
[; <" PCL equ 0FF9h ;# ">
"6574
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; <" TOS equ 0FFDh ;# ">
"6701
[; <" TOSL equ 0FFDh ;# ">
"6708
[; <" TOSH equ 0FFEh ;# ">
"6715
[; <" TOSU equ 0FFFh ;# ">
"16 MCAL_LAYER/ADC/hal_adc.c
[; ;MCAL_LAYER/ADC/hal_adc.c: 16: static void (*_ADC_Interrupt_Handler)(void) = ((void*)0);
[v __ADC_Interrupt_Handler `*F3544 ~T0 @X0 1 s ]
[i __ADC_Interrupt_Handler
-> -> -> 0 `i `*v `*F3545
]
"26
[; ;MCAL_LAYER/ADC/hal_adc.c: 26: Std_ReturnType ADC_Init(const adc_config_t* adc) {
[v _ADC_Init `(uc ~T0 @X0 1 ef1`*CS274 ]
{
[e :U _ADC_Init ]
[v _adc `*CS274 ~T0 @X0 1 r1 ]
[f ]
"27
[; ;MCAL_LAYER/ADC/hal_adc.c: 27:     Std_ReturnType ret = (Std_ReturnType)0X01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"30
[; ;MCAL_LAYER/ADC/hal_adc.c: 30:     if (((void*)0) == adc) {
[e $ ! == -> -> -> 0 `i `*v `*CS274 _adc 276  ]
{
"31
[; ;MCAL_LAYER/ADC/hal_adc.c: 31:         ret = (Std_ReturnType)0X00;
[e = _ret -> -> 0 `i `uc ]
"32
[; ;MCAL_LAYER/ADC/hal_adc.c: 32:     } else {
}
[e $U 277  ]
[e :U 276 ]
{
"34
[; ;MCAL_LAYER/ADC/hal_adc.c: 34:         (ADCON0bits.ADON = 0);
[e = . . _ADCON0bits 1 0 -> -> 0 `i `uc ]
"37
[; ;MCAL_LAYER/ADC/hal_adc.c: 37:         ADCON2bits.ACQT = adc->adc_acquisition;
[e = . . _ADCON2bits 0 1 -> . *U _adc 1 `uc ]
"38
[; ;MCAL_LAYER/ADC/hal_adc.c: 38:         ADCON2bits.ADCS = adc->adc_conversion_clock;
[e = . . _ADCON2bits 0 0 -> . *U _adc 2 `uc ]
"41
[; ;MCAL_LAYER/ADC/hal_adc.c: 41:         ADCON0bits.CHS = adc->adc_channel;
[e = . . _ADCON0bits 1 2 -> . *U _adc 3 `uc ]
"42
[; ;MCAL_LAYER/ADC/hal_adc.c: 42:         adc_input_channel_port_configure(adc->adc_channel);
[e ( _adc_input_channel_port_configure (1 . *U _adc 3 ]
"45
[; ;MCAL_LAYER/ADC/hal_adc.c: 45:         adc_select_result_format(adc);
[e ( _adc_select_result_format (1 _adc ]
"46
[; ;MCAL_LAYER/ADC/hal_adc.c: 46:         adc_select_voltage_ref(adc);
[e ( _adc_select_voltage_ref (1 _adc ]
"49
[; ;MCAL_LAYER/ADC/hal_adc.c: 49:         (PIE1bits.ADIE = 1);
[e = . . _PIE1bits 0 6 -> -> 1 `i `uc ]
"51
[; ;MCAL_LAYER/ADC/hal_adc.c: 51:         (INTCONbits.GIEH = 1);
[e = . . _INTCONbits 2 2 -> -> 1 `i `uc ]
"52
[; ;MCAL_LAYER/ADC/hal_adc.c: 52:         (INTCONbits.PEIE = 1);
[e = . . _INTCONbits 1 6 -> -> 1 `i `uc ]
"54
[; ;MCAL_LAYER/ADC/hal_adc.c: 54:         (PIR1bits.ADIF = 0);
[e = . . _PIR1bits 0 6 -> -> 0 `i `uc ]
"63
[; ;MCAL_LAYER/ADC/hal_adc.c: 63:         _ADC_Interrupt_Handler = adc->ADC_Interrupt_Handler;
[e = __ADC_Interrupt_Handler . *U _adc 0 ]
"68
[; ;MCAL_LAYER/ADC/hal_adc.c: 68:         (ADCON0bits.ADON = 1);
[e = . . _ADCON0bits 1 0 -> -> 1 `i `uc ]
"69
[; ;MCAL_LAYER/ADC/hal_adc.c: 69:     }
}
[e :U 277 ]
"71
[; ;MCAL_LAYER/ADC/hal_adc.c: 71:     return ret;
[e ) _ret ]
[e $UE 275  ]
"72
[; ;MCAL_LAYER/ADC/hal_adc.c: 72: }
[e :UE 275 ]
}
"80
[; ;MCAL_LAYER/ADC/hal_adc.c: 80: Std_ReturnType ADC_Deinit(const adc_config_t* adc) {
[v _ADC_Deinit `(uc ~T0 @X0 1 ef1`*CS274 ]
{
[e :U _ADC_Deinit ]
[v _adc `*CS274 ~T0 @X0 1 r1 ]
[f ]
"81
[; ;MCAL_LAYER/ADC/hal_adc.c: 81:     Std_ReturnType ret = (Std_ReturnType)0X01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"84
[; ;MCAL_LAYER/ADC/hal_adc.c: 84:     if (((void*)0) == adc) {
[e $ ! == -> -> -> 0 `i `*v `*CS274 _adc 279  ]
{
"85
[; ;MCAL_LAYER/ADC/hal_adc.c: 85:         ret = (Std_ReturnType)0X00;
[e = _ret -> -> 0 `i `uc ]
"86
[; ;MCAL_LAYER/ADC/hal_adc.c: 86:     } else {
}
[e $U 280  ]
[e :U 279 ]
{
"88
[; ;MCAL_LAYER/ADC/hal_adc.c: 88:         (ADCON0bits.ADON = 0);
[e = . . _ADCON0bits 1 0 -> -> 0 `i `uc ]
"93
[; ;MCAL_LAYER/ADC/hal_adc.c: 93:         (PIE1bits.ADIE = 0);
[e = . . _PIE1bits 0 6 -> -> 0 `i `uc ]
"101
[; ;MCAL_LAYER/ADC/hal_adc.c: 101:     }
}
[e :U 280 ]
"103
[; ;MCAL_LAYER/ADC/hal_adc.c: 103:     return ret;
[e ) _ret ]
[e $UE 278  ]
"104
[; ;MCAL_LAYER/ADC/hal_adc.c: 104: }
[e :UE 278 ]
}
"113
[; ;MCAL_LAYER/ADC/hal_adc.c: 113: Std_ReturnType ADC_Select_Channel(const adc_config_t* adc, adc_channel_select_t channel) {
[v _ADC_Select_Channel `(uc ~T0 @X0 1 ef2`*CS274`E3466 ]
{
[e :U _ADC_Select_Channel ]
[v _adc `*CS274 ~T0 @X0 1 r1 ]
[v _channel `E3466 ~T0 @X0 1 r2 ]
[f ]
"114
[; ;MCAL_LAYER/ADC/hal_adc.c: 114:     Std_ReturnType ret = (Std_ReturnType)0X01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"117
[; ;MCAL_LAYER/ADC/hal_adc.c: 117:     if (((void*)0) == adc) {
[e $ ! == -> -> -> 0 `i `*v `*CS274 _adc 282  ]
{
"118
[; ;MCAL_LAYER/ADC/hal_adc.c: 118:         ret = (Std_ReturnType)0X00;
[e = _ret -> -> 0 `i `uc ]
"119
[; ;MCAL_LAYER/ADC/hal_adc.c: 119:     } else {
}
[e $U 283  ]
[e :U 282 ]
{
"121
[; ;MCAL_LAYER/ADC/hal_adc.c: 121:         ADCON0bits.CHS = channel;
[e = . . _ADCON0bits 1 2 -> _channel `uc ]
"122
[; ;MCAL_LAYER/ADC/hal_adc.c: 122:         adc_input_channel_port_configure(channel);
[e ( _adc_input_channel_port_configure (1 _channel ]
"123
[; ;MCAL_LAYER/ADC/hal_adc.c: 123:     }
}
[e :U 283 ]
"125
[; ;MCAL_LAYER/ADC/hal_adc.c: 125:     return ret;
[e ) _ret ]
[e $UE 281  ]
"126
[; ;MCAL_LAYER/ADC/hal_adc.c: 126: }
[e :UE 281 ]
}
"134
[; ;MCAL_LAYER/ADC/hal_adc.c: 134: Std_ReturnType ADC_Start_Conversion(const adc_config_t* adc) {
[v _ADC_Start_Conversion `(uc ~T0 @X0 1 ef1`*CS274 ]
{
[e :U _ADC_Start_Conversion ]
[v _adc `*CS274 ~T0 @X0 1 r1 ]
[f ]
"135
[; ;MCAL_LAYER/ADC/hal_adc.c: 135:     Std_ReturnType ret = (Std_ReturnType)0X01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"138
[; ;MCAL_LAYER/ADC/hal_adc.c: 138:     if (((void*)0) == adc) {
[e $ ! == -> -> -> 0 `i `*v `*CS274 _adc 285  ]
{
"139
[; ;MCAL_LAYER/ADC/hal_adc.c: 139:         ret = (Std_ReturnType)0X00;
[e = _ret -> -> 0 `i `uc ]
"140
[; ;MCAL_LAYER/ADC/hal_adc.c: 140:     } else {
}
[e $U 286  ]
[e :U 285 ]
{
"142
[; ;MCAL_LAYER/ADC/hal_adc.c: 142:         (ADCON0bits.GO_nDONE=1);
[e = . . _ADCON0bits 1 1 -> -> 1 `i `uc ]
"143
[; ;MCAL_LAYER/ADC/hal_adc.c: 143:     }
}
[e :U 286 ]
"145
[; ;MCAL_LAYER/ADC/hal_adc.c: 145:     return ret;
[e ) _ret ]
[e $UE 284  ]
"146
[; ;MCAL_LAYER/ADC/hal_adc.c: 146: }
[e :UE 284 ]
}
"155
[; ;MCAL_LAYER/ADC/hal_adc.c: 155: Std_ReturnType ADC_Is_Conversion_Done(const adc_config_t* adc, uint8_t* conversion_status) {
[v _ADC_Is_Conversion_Done `(uc ~T0 @X0 1 ef2`*CS274`*uc ]
{
[e :U _ADC_Is_Conversion_Done ]
[v _adc `*CS274 ~T0 @X0 1 r1 ]
[v _conversion_status `*uc ~T0 @X0 1 r2 ]
[f ]
"156
[; ;MCAL_LAYER/ADC/hal_adc.c: 156:     Std_ReturnType ret = (Std_ReturnType)0X01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"159
[; ;MCAL_LAYER/ADC/hal_adc.c: 159:     if (((void*)0) == adc || ((void*)0) == conversion_status) {
[e $ ! || == -> -> -> 0 `i `*v `*CS274 _adc == -> -> -> 0 `i `*v `*uc _conversion_status 288  ]
{
"160
[; ;MCAL_LAYER/ADC/hal_adc.c: 160:         ret = (Std_ReturnType)0X00;
[e = _ret -> -> 0 `i `uc ]
"161
[; ;MCAL_LAYER/ADC/hal_adc.c: 161:     } else {
}
[e $U 289  ]
[e :U 288 ]
{
"163
[; ;MCAL_LAYER/ADC/hal_adc.c: 163:         *conversion_status = !(uint8) (ADCON0bits.GO_nDONE);
[e = *U _conversion_status -> -> ! != -> . . _ADCON0bits 1 1 `i -> 0 `i `i `uc ]
"164
[; ;MCAL_LAYER/ADC/hal_adc.c: 164:     }
}
[e :U 289 ]
"166
[; ;MCAL_LAYER/ADC/hal_adc.c: 166:     return ret;
[e ) _ret ]
[e $UE 287  ]
"167
[; ;MCAL_LAYER/ADC/hal_adc.c: 167: }
[e :UE 287 ]
}
"176
[; ;MCAL_LAYER/ADC/hal_adc.c: 176: Std_ReturnType ADC_Get_Conversion_Result(const adc_config_t* adc, uint16_t* result) {
[v _ADC_Get_Conversion_Result `(uc ~T0 @X0 1 ef2`*CS274`*us ]
{
[e :U _ADC_Get_Conversion_Result ]
[v _adc `*CS274 ~T0 @X0 1 r1 ]
[v _result `*us ~T0 @X0 1 r2 ]
[f ]
"177
[; ;MCAL_LAYER/ADC/hal_adc.c: 177:     Std_ReturnType ret = (Std_ReturnType)0X01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"180
[; ;MCAL_LAYER/ADC/hal_adc.c: 180:     if (((void*)0) == adc || ((void*)0) == result) {
[e $ ! || == -> -> -> 0 `i `*v `*CS274 _adc == -> -> -> 0 `i `*v `*us _result 291  ]
{
"181
[; ;MCAL_LAYER/ADC/hal_adc.c: 181:         ret = (Std_ReturnType)0X00;
[e = _ret -> -> 0 `i `uc ]
"182
[; ;MCAL_LAYER/ADC/hal_adc.c: 182:     } else {
}
[e $U 292  ]
[e :U 291 ]
{
"184
[; ;MCAL_LAYER/ADC/hal_adc.c: 184:         if (0X01U == adc->result_format) {
[e $ ! == -> 1 `ui -> . *U _adc 6 `ui 293  ]
{
"185
[; ;MCAL_LAYER/ADC/hal_adc.c: 185:             *result = (uint16_t) ((ADRESH << 8) + ADRESL);
[e = *U _result -> + << -> _ADRESH `i -> 8 `i -> _ADRESL `i `us ]
"186
[; ;MCAL_LAYER/ADC/hal_adc.c: 186:         } else if (0X00 == adc->result_format) {
}
[e $U 294  ]
[e :U 293 ]
[e $ ! == -> 0 `i -> . *U _adc 6 `i 295  ]
{
"187
[; ;MCAL_LAYER/ADC/hal_adc.c: 187:             *result = (uint16_t) (((ADRESH << 8) + ADRESL) >> 2);
[e = *U _result -> >> + << -> _ADRESH `i -> 8 `i -> _ADRESL `i -> 2 `i `us ]
"188
[; ;MCAL_LAYER/ADC/hal_adc.c: 188:         } else {
}
[e $U 296  ]
[e :U 295 ]
{
"189
[; ;MCAL_LAYER/ADC/hal_adc.c: 189:             *result = (uint16_t) ((ADRESH << 8) + ADRESL);
[e = *U _result -> + << -> _ADRESH `i -> 8 `i -> _ADRESL `i `us ]
"190
[; ;MCAL_LAYER/ADC/hal_adc.c: 190:         }
}
[e :U 296 ]
[e :U 294 ]
"191
[; ;MCAL_LAYER/ADC/hal_adc.c: 191:     }
}
[e :U 292 ]
"193
[; ;MCAL_LAYER/ADC/hal_adc.c: 193:     return ret;
[e ) _ret ]
[e $UE 290  ]
"194
[; ;MCAL_LAYER/ADC/hal_adc.c: 194: }
[e :UE 290 ]
}
"204
[; ;MCAL_LAYER/ADC/hal_adc.c: 204: Std_ReturnType ADC_Get_Conversion_Blocking(const adc_config_t* adc, adc_channel_select_t channel, uint16_t* result) {
[v _ADC_Get_Conversion_Blocking `(uc ~T0 @X0 1 ef3`*CS274`E3466`*us ]
{
[e :U _ADC_Get_Conversion_Blocking ]
[v _adc `*CS274 ~T0 @X0 1 r1 ]
[v _channel `E3466 ~T0 @X0 1 r2 ]
[v _result `*us ~T0 @X0 1 r3 ]
[f ]
"205
[; ;MCAL_LAYER/ADC/hal_adc.c: 205:     Std_ReturnType ret = (Std_ReturnType)0X01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"206
[; ;MCAL_LAYER/ADC/hal_adc.c: 206:     uint8_t conversion_status;
[v _conversion_status `uc ~T0 @X0 1 a ]
"209
[; ;MCAL_LAYER/ADC/hal_adc.c: 209:     if (((void*)0) == adc || ((void*)0) == result) {
[e $ ! || == -> -> -> 0 `i `*v `*CS274 _adc == -> -> -> 0 `i `*v `*us _result 298  ]
{
"210
[; ;MCAL_LAYER/ADC/hal_adc.c: 210:         ret = (Std_ReturnType)0X00;
[e = _ret -> -> 0 `i `uc ]
"211
[; ;MCAL_LAYER/ADC/hal_adc.c: 211:     } else {
}
[e $U 299  ]
[e :U 298 ]
{
"213
[; ;MCAL_LAYER/ADC/hal_adc.c: 213:         ret &= ADC_Select_Channel(adc, channel);
[e =& _ret -> ( _ADC_Select_Channel (2 , _adc _channel `uc ]
"214
[; ;MCAL_LAYER/ADC/hal_adc.c: 214:         ret &= ADC_Start_Conversion(adc);
[e =& _ret -> ( _ADC_Start_Conversion (1 _adc `uc ]
"215
[; ;MCAL_LAYER/ADC/hal_adc.c: 215:         ret &= ADC_Is_Conversion_Done(adc, &conversion_status);
[e =& _ret -> ( _ADC_Is_Conversion_Done (2 , _adc &U _conversion_status `uc ]
"218
[; ;MCAL_LAYER/ADC/hal_adc.c: 218:         while (ADCON0bits.GO_nDONE);
[e $U 300  ]
[e :U 301 ]
[e :U 300 ]
[e $ != -> . . _ADCON0bits 1 1 `i -> 0 `i 301  ]
[e :U 302 ]
"221
[; ;MCAL_LAYER/ADC/hal_adc.c: 221:         ret &= ADC_Get_Conversion_Result(adc, result);
[e =& _ret -> ( _ADC_Get_Conversion_Result (2 , _adc _result `uc ]
"222
[; ;MCAL_LAYER/ADC/hal_adc.c: 222:     }
}
[e :U 299 ]
"224
[; ;MCAL_LAYER/ADC/hal_adc.c: 224:     return ret;
[e ) _ret ]
[e $UE 297  ]
"225
[; ;MCAL_LAYER/ADC/hal_adc.c: 225: }
[e :UE 297 ]
}
"227
[; ;MCAL_LAYER/ADC/hal_adc.c: 227: Std_ReturnType ADC_Get_Conversion_Interrupt(const adc_config_t*adc, adc_channel_select_t channel) {
[v _ADC_Get_Conversion_Interrupt `(uc ~T0 @X0 1 ef2`*CS274`E3466 ]
{
[e :U _ADC_Get_Conversion_Interrupt ]
[v _adc `*CS274 ~T0 @X0 1 r1 ]
[v _channel `E3466 ~T0 @X0 1 r2 ]
[f ]
"229
[; ;MCAL_LAYER/ADC/hal_adc.c: 229:     Std_ReturnType ret = (Std_ReturnType)0X01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"230
[; ;MCAL_LAYER/ADC/hal_adc.c: 230:     uint8_t conversion_status;
[v _conversion_status `uc ~T0 @X0 1 a ]
"233
[; ;MCAL_LAYER/ADC/hal_adc.c: 233:     if (((void*)0) == adc) {
[e $ ! == -> -> -> 0 `i `*v `*CS274 _adc 304  ]
{
"234
[; ;MCAL_LAYER/ADC/hal_adc.c: 234:         ret = (Std_ReturnType)0X00;
[e = _ret -> -> 0 `i `uc ]
"235
[; ;MCAL_LAYER/ADC/hal_adc.c: 235:     } else {
}
[e $U 305  ]
[e :U 304 ]
{
"237
[; ;MCAL_LAYER/ADC/hal_adc.c: 237:         ret &= ADC_Select_Channel(adc, channel);
[e =& _ret -> ( _ADC_Select_Channel (2 , _adc _channel `uc ]
"238
[; ;MCAL_LAYER/ADC/hal_adc.c: 238:         ret &= ADC_Start_Conversion(adc);
[e =& _ret -> ( _ADC_Start_Conversion (1 _adc `uc ]
"240
[; ;MCAL_LAYER/ADC/hal_adc.c: 240:     }
}
[e :U 305 ]
"242
[; ;MCAL_LAYER/ADC/hal_adc.c: 242:     return ret;
[e ) _ret ]
[e $UE 303  ]
"245
[; ;MCAL_LAYER/ADC/hal_adc.c: 245: }
[e :UE 303 ]
}
[v F3582 `(v ~T0 @X0 1 tf1`E3466 ]
"253
[; ;MCAL_LAYER/ADC/hal_adc.c: 253: static __attribute__((inline)) void adc_input_channel_port_configure(adc_channel_select_t channel) {
[v _adc_input_channel_port_configure `TF3582 ~T0 @X0 1 s ]
{
[e :U _adc_input_channel_port_configure ]
[v _channel `E3466 ~T0 @X0 1 r1 ]
[f ]
"254
[; ;MCAL_LAYER/ADC/hal_adc.c: 254:     switch (channel) {
[e $U 308  ]
{
"255
[; ;MCAL_LAYER/ADC/hal_adc.c: 255:         case ADC_CHANNEL_AN0: (TRISA |= ((uint8)1 << 0x0));
[e :U 309 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 0 `i `Vuc ]
"256
[; ;MCAL_LAYER/ADC/hal_adc.c: 256:             break;
[e $U 307  ]
"257
[; ;MCAL_LAYER/ADC/hal_adc.c: 257:         case ADC_CHANNEL_AN1: (TRISA |= ((uint8)1 << 0x1));
[e :U 310 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 1 `i `Vuc ]
"258
[; ;MCAL_LAYER/ADC/hal_adc.c: 258:             break;
[e $U 307  ]
"259
[; ;MCAL_LAYER/ADC/hal_adc.c: 259:         case ADC_CHANNEL_AN2: (TRISA |= ((uint8)1 << 0x2));
[e :U 311 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 2 `i `Vuc ]
"260
[; ;MCAL_LAYER/ADC/hal_adc.c: 260:             break;
[e $U 307  ]
"261
[; ;MCAL_LAYER/ADC/hal_adc.c: 261:         case ADC_CHANNEL_AN3: (TRISA |= ((uint8)1 << 0x3));
[e :U 312 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 3 `i `Vuc ]
"262
[; ;MCAL_LAYER/ADC/hal_adc.c: 262:             break;
[e $U 307  ]
"263
[; ;MCAL_LAYER/ADC/hal_adc.c: 263:         case ADC_CHANNEL_AN4: (TRISA |= ((uint8)1 << 0x5));
[e :U 313 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 5 `i `Vuc ]
"264
[; ;MCAL_LAYER/ADC/hal_adc.c: 264:             break;
[e $U 307  ]
"265
[; ;MCAL_LAYER/ADC/hal_adc.c: 265:         case ADC_CHANNEL_AN5: (TRISE |= ((uint8)1 << 0x0));
[e :U 314 ]
[e =| _TRISE -> << -> -> -> 1 `i `uc `i -> 0 `i `Vuc ]
"266
[; ;MCAL_LAYER/ADC/hal_adc.c: 266:             break;
[e $U 307  ]
"267
[; ;MCAL_LAYER/ADC/hal_adc.c: 267:         case ADC_CHANNEL_AN6: (TRISE |= ((uint8)1 << 0x1));
[e :U 315 ]
[e =| _TRISE -> << -> -> -> 1 `i `uc `i -> 1 `i `Vuc ]
"268
[; ;MCAL_LAYER/ADC/hal_adc.c: 268:             break;
[e $U 307  ]
"269
[; ;MCAL_LAYER/ADC/hal_adc.c: 269:         case ADC_CHANNEL_AN7: (TRISE |= ((uint8)1 << 0x2));
[e :U 316 ]
[e =| _TRISE -> << -> -> -> 1 `i `uc `i -> 2 `i `Vuc ]
"270
[; ;MCAL_LAYER/ADC/hal_adc.c: 270:             break;
[e $U 307  ]
"271
[; ;MCAL_LAYER/ADC/hal_adc.c: 271:         case ADC_CHANNEL_AN8: (TRISB |= ((uint8)1 << 0x2));
[e :U 317 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 2 `i `Vuc ]
"272
[; ;MCAL_LAYER/ADC/hal_adc.c: 272:             break;
[e $U 307  ]
"273
[; ;MCAL_LAYER/ADC/hal_adc.c: 273:         case ADC_CHANNEL_AN9: (TRISB |= ((uint8)1 << 0x3));
[e :U 318 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 3 `i `Vuc ]
"274
[; ;MCAL_LAYER/ADC/hal_adc.c: 274:             break;
[e $U 307  ]
"275
[; ;MCAL_LAYER/ADC/hal_adc.c: 275:         case ADC_CHANNEL_AN10: (TRISB |= ((uint8)1 << 0x1));
[e :U 319 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 1 `i `Vuc ]
"276
[; ;MCAL_LAYER/ADC/hal_adc.c: 276:             break;
[e $U 307  ]
"277
[; ;MCAL_LAYER/ADC/hal_adc.c: 277:         case ADC_CHANNEL_AN11: (TRISB |= ((uint8)1 << 0x4));
[e :U 320 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 4 `i `Vuc ]
"278
[; ;MCAL_LAYER/ADC/hal_adc.c: 278:             break;
[e $U 307  ]
"279
[; ;MCAL_LAYER/ADC/hal_adc.c: 279:         case ADC_CHANNEL_AN12: (TRISB |= ((uint8)1 << 0x0));
[e :U 321 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 0 `i `Vuc ]
"280
[; ;MCAL_LAYER/ADC/hal_adc.c: 280:             break;
[e $U 307  ]
"281
[; ;MCAL_LAYER/ADC/hal_adc.c: 281:         default: ;
[e :U 322 ]
"282
[; ;MCAL_LAYER/ADC/hal_adc.c: 282:     }
}
[e $U 307  ]
[e :U 308 ]
[e [\ -> _channel `ui , $ -> . `E3466 0 `ui 309
 , $ -> . `E3466 1 `ui 310
 , $ -> . `E3466 2 `ui 311
 , $ -> . `E3466 3 `ui 312
 , $ -> . `E3466 4 `ui 313
 , $ -> . `E3466 5 `ui 314
 , $ -> . `E3466 6 `ui 315
 , $ -> . `E3466 7 `ui 316
 , $ -> . `E3466 8 `ui 317
 , $ -> . `E3466 9 `ui 318
 , $ -> . `E3466 10 `ui 319
 , $ -> . `E3466 11 `ui 320
 , $ -> . `E3466 12 `ui 321
 322 ]
[e :U 307 ]
"283
[; ;MCAL_LAYER/ADC/hal_adc.c: 283: }
[e :UE 306 ]
}
[v F3585 `(v ~T0 @X0 1 tf1`*CS274 ]
"291
[; ;MCAL_LAYER/ADC/hal_adc.c: 291: static __attribute__((inline)) void adc_select_result_format(const adc_config_t* adc) {
[v _adc_select_result_format `TF3585 ~T0 @X0 1 s ]
{
[e :U _adc_select_result_format ]
[v _adc `*CS274 ~T0 @X0 1 r1 ]
[f ]
"292
[; ;MCAL_LAYER/ADC/hal_adc.c: 292:     if (adc->result_format) {
[e $ ! != -> . *U _adc 6 `i -> 0 `i 324  ]
{
"293
[; ;MCAL_LAYER/ADC/hal_adc.c: 293:         (ADCON2bits.ADFM=1);
[e = . . _ADCON2bits 0 3 -> -> 1 `i `uc ]
"294
[; ;MCAL_LAYER/ADC/hal_adc.c: 294:     } else {
}
[e $U 325  ]
[e :U 324 ]
{
"295
[; ;MCAL_LAYER/ADC/hal_adc.c: 295:         (ADCON2bits.ADFM=0);
[e = . . _ADCON2bits 0 3 -> -> 0 `i `uc ]
"296
[; ;MCAL_LAYER/ADC/hal_adc.c: 296:     }
}
[e :U 325 ]
"297
[; ;MCAL_LAYER/ADC/hal_adc.c: 297: }
[e :UE 323 ]
}
[v F3588 `(v ~T0 @X0 1 tf1`*CS274 ]
"305
[; ;MCAL_LAYER/ADC/hal_adc.c: 305: static __attribute__((inline)) void adc_select_voltage_ref(const adc_config_t* adc) {
[v _adc_select_voltage_ref `TF3588 ~T0 @X0 1 s ]
{
[e :U _adc_select_voltage_ref ]
[v _adc `*CS274 ~T0 @X0 1 r1 ]
[f ]
"306
[; ;MCAL_LAYER/ADC/hal_adc.c: 306:     if (0X01U == adc->voltage_ref) {
[e $ ! == -> 1 `ui -> . *U _adc 5 `ui 327  ]
{
"307
[; ;MCAL_LAYER/ADC/hal_adc.c: 307:         do{ADCON1bits.VCFG1 = 1; ADCON1bits.VCFG0 = 1; } while(0);
[e :U 330 ]
{
[e = . . _ADCON1bits 1 5 -> -> 1 `i `uc ]
[e = . . _ADCON1bits 1 4 -> -> 1 `i `uc ]
}
[e :U 329 ]
"308
[; ;MCAL_LAYER/ADC/hal_adc.c: 308:     } else if (0X00 == adc->voltage_ref) {
}
[e $U 331  ]
[e :U 327 ]
[e $ ! == -> 0 `i -> . *U _adc 5 `i 332  ]
{
"309
[; ;MCAL_LAYER/ADC/hal_adc.c: 309:         do{ADCON1bits.VCFG1 = 0; ADCON1bits.VCFG0 = 0; } while(0);
[e :U 335 ]
{
[e = . . _ADCON1bits 1 5 -> -> 0 `i `uc ]
[e = . . _ADCON1bits 1 4 -> -> 0 `i `uc ]
}
[e :U 334 ]
"310
[; ;MCAL_LAYER/ADC/hal_adc.c: 310:     } else {
}
[e $U 336  ]
[e :U 332 ]
{
"311
[; ;MCAL_LAYER/ADC/hal_adc.c: 311:         do{ADCON1bits.VCFG1 = 0; ADCON1bits.VCFG0 = 0; } while(0);
[e :U 339 ]
{
[e = . . _ADCON1bits 1 5 -> -> 0 `i `uc ]
[e = . . _ADCON1bits 1 4 -> -> 0 `i `uc ]
}
[e :U 338 ]
"312
[; ;MCAL_LAYER/ADC/hal_adc.c: 312:     }
}
[e :U 336 ]
[e :U 331 ]
"313
[; ;MCAL_LAYER/ADC/hal_adc.c: 313: }
[e :UE 326 ]
}
"315
[; ;MCAL_LAYER/ADC/hal_adc.c: 315: void ADC_ISR(void) {
[v _ADC_ISR `(v ~T0 @X0 1 ef ]
{
[e :U _ADC_ISR ]
[f ]
"316
[; ;MCAL_LAYER/ADC/hal_adc.c: 316:     (PIR1bits.ADIF = 0);
[e = . . _PIR1bits 0 6 -> -> 0 `i `uc ]
"317
[; ;MCAL_LAYER/ADC/hal_adc.c: 317:     if (_ADC_Interrupt_Handler) {
[e $ ! != __ADC_Interrupt_Handler -> -> 0 `i `*F3591 341  ]
{
"318
[; ;MCAL_LAYER/ADC/hal_adc.c: 318:         _ADC_Interrupt_Handler();
[e ( *U __ADC_Interrupt_Handler ..  ]
"319
[; ;MCAL_LAYER/ADC/hal_adc.c: 319:     }
}
[e :U 341 ]
"320
[; ;MCAL_LAYER/ADC/hal_adc.c: 320: }
[e :UE 340 ]
}
