

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Mar 09 15:56:23 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 23/03/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4620 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   00126E                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _port_registers
    71   00126E  80                 	db	128
    72   00126F  0F                 	db	15
    73   001270  81                 	db	129
    74   001271  0F                 	db	15
    75   001272  82                 	db	130
    76   001273  0F                 	db	15
    77   001274  83                 	db	131
    78   001275  0F                 	db	15
    79   001276  84                 	db	132
    80   001277  0F                 	db	15
    81                           
    82                           ;initializer for _lat_registers
    83   001278  89                 	db	137
    84   001279  0F                 	db	15
    85   00127A  8A                 	db	138
    86   00127B  0F                 	db	15
    87   00127C  8B                 	db	139
    88   00127D  0F                 	db	15
    89   00127E  8C                 	db	140
    90   00127F  0F                 	db	15
    91   001280  8D                 	db	141
    92   001281  0F                 	db	15
    93                           
    94                           ;initializer for _tris_registers
    95   001282  92                 	db	146
    96   001283  0F                 	db	15
    97   001284  93                 	db	147
    98   001285  0F                 	db	15
    99   001286  94                 	db	148
   100   001287  0F                 	db	15
   101   001288  95                 	db	149
   102   001289  0F                 	db	15
   103   00128A  96                 	db	150
   104   00128B  0F                 	db	15
   105                           
   106                           ;initializer for _ret
   107   00128C  01                 	db	1
   108                           
   109                           ;initializer for _RB7_f
   110   00128D  01                 	db	1
   111                           
   112                           ;initializer for _RB6_f
   113   00128E  01                 	db	1
   114                           
   115                           ;initializer for _RB5_f
   116   00128F  01                 	db	1
   117                           
   118                           ;initializer for _RB4_f
   119   001290  01                 	db	1
   120                           
   121                           	psect	smallconst
   122   001000                     __psmallconst:
   123                           	callstack 0
   124   001000  00                 	db	0
   125   001001                     _btn_values:
   126                           	callstack 0
   127   001001  37                 	db	55
   128   001002  38                 	db	56
   129   001003  39                 	db	57
   130   001004  2F                 	db	47
   131   001005  34                 	db	52
   132   001006  35                 	db	53
   133   001007  36                 	db	54
   134   001008  2A                 	db	42
   135   001009  31                 	db	49
   136   00100A  32                 	db	50
   137   00100B  33                 	db	51
   138   00100C  2D                 	db	45
   139   00100D  23                 	db	35
   140   00100E  30                 	db	48
   141   00100F  3D                 	db	61
   142   001010  2B                 	db	43
   143   001011                     __end_of_btn_values:
   144                           	callstack 0
   145   000000                     _TMR1L	set	4046
   146   000000                     _TMR1H	set	4047
   147   000000                     _TMR0L	set	4054
   148   000000                     _TMR0H	set	4055
   149   000000                     _INTCON2bits	set	4081
   150   000000                     _EECON2	set	4007
   151   000000                     _ADCON1bits	set	4033
   152   000000                     _ADRESL	set	4035
   153   000000                     _ADRESH	set	4036
   154   000000                     _INTCONbits	set	4082
   155   000000                     _TRISD	set	3989
   156   000000                     _TRISC	set	3988
   157   000000                     _TRISB	set	3987
   158   000000                     _TRISE	set	3990
   159   000000                     _PORTBbits	set	3969
   160   000000                     _PIE1bits	set	3997
   161   000000                     _ADCON2bits	set	4032
   162   000000                     _ADCON0bits	set	4034
   163   000000                     _PORTE	set	3972
   164   000000                     _PORTD	set	3971
   165   000000                     _PORTC	set	3970
   166   000000                     _PORTB	set	3969
   167   000000                     _PORTA	set	3968
   168   000000                     _LATA	set	3977
   169   000000                     _TRISA	set	3986
   170   000000                     _EECON1bits	set	4006
   171   000000                     _EEDATA	set	4008
   172   000000                     _EEADR	set	4009
   173   000000                     _EEADRH	set	4010
   174   000000                     _PIR1bits	set	3998
   175   000000                     _T2CONbits	set	4042
   176   000000                     _T1CONbits	set	4045
   177   000000                     _T0CONbits	set	4053
   178   000000                     _INTCON3bits	set	4080
   179   000000                     _LATE	set	3981
   180   000000                     _LATD	set	3980
   181   000000                     _LATC	set	3979
   182   000000                     _LATB	set	3978
   183   000000                     _TMR2	set	4044
   184   001011                     STR_1:
   185   001011  25                 	db	37
   186   001012  69                 	db	105	;'i'
   187   001013  00                 	db	0
   188   001014  00                 	db	0	; dummy byte at the end
   189   000000                     
   190                           ; #config settings
   191                           
   192                           	psect	cinit
   193   001238                     __pcinit:
   194                           	callstack 0
   195   001238                     start_initialization:
   196                           	callstack 0
   197   001238                     __initialization:
   198                           	callstack 0
   199                           
   200                           ; Initialize objects allocated to COMRAM (35 bytes)
   201                           ; load TBLPTR registers with __pidataCOMRAM
   202   001238  0E6E               	movlw	low __pidataCOMRAM
   203   00123A  6EF6               	movwf	tblptrl,c
   204   00123C  0E12               	movlw	high __pidataCOMRAM
   205   00123E  6EF7               	movwf	tblptrh,c
   206   001240  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   207   001242  6EF8               	movwf	tblptru,c
   208   001244  EE00  F02B         	lfsr	0,__pdataCOMRAM
   209   001248  EE10 F023          	lfsr	1,35
   210   00124C                     copy_data0:
   211   00124C  0009               	tblrd		*+
   212   00124E  CFF5 FFEE          	movff	tablat,postinc0
   213   001252  50E5               	movf	postdec1,w,c
   214   001254  50E1               	movf	fsr1l,w,c
   215   001256  E1FA               	bnz	copy_data0
   216                           
   217                           ; Clear objects allocated to COMRAM (42 bytes)
   218   001258  EE00  F001         	lfsr	0,__pbssCOMRAM
   219   00125C  0E2A               	movlw	42
   220   00125E                     clear_0:
   221   00125E  6AEE               	clrf	postinc0,c
   222   001260  06E8               	decf	wreg,f,c
   223   001262  E1FD               	bnz	clear_0
   224   001264                     end_of_initialization:
   225                           	callstack 0
   226   001264                     __end_of__initialization:
   227                           	callstack 0
   228   001264  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   229   001266  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   230   001268  0100               	movlb	0
   231   00126A  EF7D  F009         	goto	_main	;jump to C main() function
   232                           
   233                           	psect	bssCOMRAM
   234   000001                     __pbssCOMRAM:
   235                           	callstack 0
   236   000001                     _Timer2_Interrupt_Handler:
   237                           	callstack 0
   238   000001                     	ds	2
   239   000003                     _pre_work_out@hal_timer1$F2115:
   240                           	callstack 0
   241   000003                     	ds	2
   242   000005                     _Timer1_Interrupt_Handler:
   243                           	callstack 0
   244   000005                     	ds	2
   245   000007                     _pre_work_out:
   246                           	callstack 0
   247   000007                     	ds	2
   248   000009                     _Timer0_Interrupt_Handler:
   249                           	callstack 0
   250   000009                     	ds	2
   251   00000B                     _RB7_Interrupt_Handler_Low:
   252                           	callstack 0
   253   00000B                     	ds	2
   254   00000D                     _RB7_Interrupt_Handler_High:
   255                           	callstack 0
   256   00000D                     	ds	2
   257   00000F                     _RB6_Interrupt_Handler_Low:
   258                           	callstack 0
   259   00000F                     	ds	2
   260   000011                     _RB6_Interrupt_Handler_High:
   261                           	callstack 0
   262   000011                     	ds	2
   263   000013                     _RB5_Interrupt_Handler_Low:
   264                           	callstack 0
   265   000013                     	ds	2
   266   000015                     _RB5_Interrupt_Handler_High:
   267                           	callstack 0
   268   000015                     	ds	2
   269   000017                     _RB4_Interrupt_Handler_Low:
   270                           	callstack 0
   271   000017                     	ds	2
   272   000019                     _RB4_Interrupt_Handler_High:
   273                           	callstack 0
   274   000019                     	ds	2
   275   00001B                     _INT2_Interrupt_Handler:
   276                           	callstack 0
   277   00001B                     	ds	2
   278   00001D                     _INT1_Interrupt_Handler:
   279                           	callstack 0
   280   00001D                     	ds	2
   281   00001F                     _INT0_Interrupt_Handler:
   282                           	callstack 0
   283   00001F                     	ds	2
   284   000021                     __ADC_Interrupt_Handler:
   285                           	callstack 0
   286   000021                     	ds	2
   287   000023                     _pre:
   288                           	callstack 0
   289   000023                     	ds	1
   290   000024                     Relay_off@F3490:
   291                           	callstack 0
   292   000024                     	ds	1
   293   000025                     Relay_on@F3485:
   294                           	callstack 0
   295   000025                     	ds	1
   296   000026                     Relay_initialize@F3480:
   297                           	callstack 0
   298   000026                     	ds	1
   299   000027                     led_toggle_status@F3497:
   300                           	callstack 0
   301   000027                     	ds	1
   302   000028                     led_turn_off@F3492:
   303                           	callstack 0
   304   000028                     	ds	1
   305   000029                     led_turn_on@F3487:
   306                           	callstack 0
   307   000029                     	ds	1
   308   00002A                     led_intialize@F3482:
   309                           	callstack 0
   310   00002A                     	ds	1
   311                           
   312                           	psect	dataCOMRAM
   313   00002B                     __pdataCOMRAM:
   314                           	callstack 0
   315   00002B                     _port_registers:
   316                           	callstack 0
   317   00002B                     	ds	10
   318   000035                     _lat_registers:
   319                           	callstack 0
   320   000035                     	ds	10
   321   00003F                     _tris_registers:
   322                           	callstack 0
   323   00003F                     	ds	10
   324   000049                     _ret:
   325                           	callstack 0
   326   000049                     	ds	1
   327   00004A                     _RB7_f:
   328                           	callstack 0
   329   00004A                     	ds	1
   330   00004B                     _RB6_f:
   331                           	callstack 0
   332   00004B                     	ds	1
   333   00004C                     _RB5_f:
   334                           	callstack 0
   335   00004C                     	ds	1
   336   00004D                     _RB4_f:
   337                           	callstack 0
   338   00004D                     	ds	1
   339                           
   340                           	psect	cstackCOMRAM
   341   00004E                     __pcstackCOMRAM:
   342                           	callstack 0
   343   00004E                     RB4_ISR@source:
   344                           	callstack 0
   345   00004E                     RB5_ISR@source:
   346                           	callstack 0
   347   00004E                     RB6_ISR@source:
   348                           	callstack 0
   349   00004E                     RB7_ISR@source:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x0
   353   00004E                     	ds	1
   354   00004F                     
   355                           ; 1 bytes @ 0x1
   356 ;;
   357 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   358 ;;
   359 ;; *************** function _main *****************
   360 ;; Defined at:
   361 ;;		line 18 in file "app.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  2  962[None  ] int 
   368 ;; Registers used:
   369 ;;		wreg, status,2, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   379 ;;Total ram usage:        0 bytes
   380 ;; Hardware stack levels required when called: 4
   381 ;; This function calls:
   382 ;;		_Application_initialize
   383 ;; This function is called by:
   384 ;;		Startup code after reset
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           	psect	text0
   389   0012FA                     __ptext0:
   390                           	callstack 0
   391   0012FA                     _main:
   392                           	callstack 27
   393   0012FA                     
   394                           ;app.c: 20:     Application_initialize();
   395   0012FA  EC8F  F009         	call	_Application_initialize	;wreg free
   396   0012FE                     l963:
   397   0012FE  EF7F  F009         	goto	l963
   398   001302  EF07  F000         	goto	start
   399   001306                     __end_of_main:
   400                           	callstack 0
   401                           
   402 ;; *************** function _Application_initialize *****************
   403 ;; Defined at:
   404 ;;		line 29 in file "app.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, status,2, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels used: 1
   424 ;; Hardware stack levels required when called: 3
   425 ;; This function calls:
   426 ;;		_ecu_layer_initialize
   427 ;; This function is called by:
   428 ;;		_main
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text1
   433   00131E                     __ptext1:
   434                           	callstack 0
   435   00131E                     _Application_initialize:
   436                           	callstack 27
   437   00131E                     
   438                           ;app.c: 31:     ecu_layer_initialize();
   439   00131E  EC9A  F009         	call	_ecu_layer_initialize	;wreg free
   440   001322  0012               	return		;funcret
   441   001324                     __end_of_Application_initialize:
   442                           	callstack 0
   443                           
   444 ;; *************** function _ecu_layer_initialize *****************
   445 ;; Defined at:
   446 ;;		line 11 in file "ECU_LAYER/ecu_layer_init.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;  ret             1    0        unsigned char 
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, status,2
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;Total ram usage:        0 bytes
   465 ;; Hardware stack levels used: 1
   466 ;; Hardware stack levels required when called: 2
   467 ;; This function calls:
   468 ;;		Nothing
   469 ;; This function is called by:
   470 ;;		_Application_initialize
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text2
   475   001334                     __ptext2:
   476                           	callstack 0
   477   001334                     _ecu_layer_initialize:
   478                           	callstack 27
   479   001334  0012               	return		;funcret
   480   001336                     __end_of_ecu_layer_initialize:
   481                           	callstack 0
   482                           
   483 ;; *************** function _Interrupt_Manager_High *****************
   484 ;; Defined at:
   485 ;;		line 29 in file "MCAL_LAYER/Interrupt/mcal_interrupt_manager.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; Hardware stack levels required when called: 1
   506 ;; This function calls:
   507 ;;		_ADC_ISR
   508 ;;		_INT0_ISR
   509 ;;		_INT1_ISR
   510 ;;		_INT2_ISR
   511 ;;		_RB4_ISR
   512 ;;		_RB5_ISR
   513 ;;		_RB6_ISR
   514 ;;		_RB7_ISR
   515 ;;		_TIMER0_ISR
   516 ;;		_TIMER1_ISR
   517 ;; This function is called by:
   518 ;;		Interrupt level 2
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	intcode
   523   000008                     __pintcode:
   524                           	callstack 0
   525   000008                     _Interrupt_Manager_High:
   526                           	callstack 27
   527                           
   528                           ;incstack = 0
   529   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   530   00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
   531                           
   532                           	psect	intcode_body
   533   001016                     __pintcode_body:
   534                           	callstack 27
   535   001016                     int_func:
   536                           	callstack 27
   537   001016  0006               	pop		; remove dummy address from shadow register refresh
   538   001018                     
   539                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 31:     if ((INTCONbits.INT0IE == 1) && 
      +                          (INTCONbits.INT0IF == 1)) {
   540   001018  A8F2               	btfss	242,4,c	;volatile
   541   00101A  EF11  F008         	goto	i2u141_41
   542   00101E  EF13  F008         	goto	i2u141_40
   543   001022                     i2u141_41:
   544   001022  EF1C  F008         	goto	i2l3076
   545   001026                     i2u141_40:
   546   001026  A2F2               	btfss	242,1,c	;volatile
   547   001028  EF18  F008         	goto	i2u142_41
   548   00102C  EF1A  F008         	goto	i2u142_40
   549   001030                     i2u142_41:
   550   001030  EF1C  F008         	goto	i2l3076
   551   001034                     i2u142_40:
   552   001034                     
   553                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 32:         INT0_ISR();
   554   001034  EC96  F009         	call	_INT0_ISR	;wreg free
   555   001038                     i2l3076:
   556                           
   557                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 35:     if ((INTCON3bits.INT1IE == 1) &&
      +                           (INTCON3bits.INT1IF == 1)) {
   558   001038  A6F0               	btfss	240,3,c	;volatile
   559   00103A  EF21  F008         	goto	i2u143_41
   560   00103E  EF23  F008         	goto	i2u143_40
   561   001042                     i2u143_41:
   562   001042  EF2C  F008         	goto	i2l3082
   563   001046                     i2u143_40:
   564   001046  A0F0               	btfss	240,0,c	;volatile
   565   001048  EF28  F008         	goto	i2u144_41
   566   00104C  EF2A  F008         	goto	i2u144_40
   567   001050                     i2u144_41:
   568   001050  EF2C  F008         	goto	i2l3082
   569   001054                     i2u144_40:
   570   001054                     
   571                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 36:         INT1_ISR();
   572   001054  EC94  F009         	call	_INT1_ISR	;wreg free
   573   001058                     i2l3082:
   574                           
   575                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 39:     if ((INTCON3bits.INT2IE == 1) &&
      +                           (INTCON3bits.INT2IF == 1)) {
   576   001058  A8F0               	btfss	240,4,c	;volatile
   577   00105A  EF31  F008         	goto	i2u145_41
   578   00105E  EF33  F008         	goto	i2u145_40
   579   001062                     i2u145_41:
   580   001062  EF3C  F008         	goto	i2l3088
   581   001066                     i2u145_40:
   582   001066  A2F0               	btfss	240,1,c	;volatile
   583   001068  EF38  F008         	goto	i2u146_41
   584   00106C  EF3A  F008         	goto	i2u146_40
   585   001070                     i2u146_41:
   586   001070  EF3C  F008         	goto	i2l3088
   587   001074                     i2u146_40:
   588   001074                     
   589                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 40:         INT2_ISR();
   590   001074  EC92  F009         	call	_INT2_ISR	;wreg free
   591   001078                     i2l3088:
   592                           
   593                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 42:     if (1 == PIE1bits.ADIE && 1 == P
      +                          IR1bits.ADIF) {
   594   001078  AC9D               	btfss	157,6,c	;volatile
   595   00107A  EF41  F008         	goto	i2u147_41
   596   00107E  EF43  F008         	goto	i2u147_40
   597   001082                     i2u147_41:
   598   001082  EF4C  F008         	goto	i2l3094
   599   001086                     i2u147_40:
   600   001086  AC9E               	btfss	158,6,c	;volatile
   601   001088  EF48  F008         	goto	i2u148_41
   602   00108C  EF4A  F008         	goto	i2u148_40
   603   001090                     i2u148_41:
   604   001090  EF4C  F008         	goto	i2l3094
   605   001094                     i2u148_40:
   606   001094                     
   607                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 43:         ADC_ISR();
   608   001094  EC98  F009         	call	_ADC_ISR	;wreg free
   609   001098                     i2l3094:
   610                           
   611                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 45:     if (1 == INTCONbits.TMR0IE && 1 
      +                          == INTCONbits.TMR0IF) {
   612   001098  AAF2               	btfss	242,5,c	;volatile
   613   00109A  EF51  F008         	goto	i2u149_41
   614   00109E  EF53  F008         	goto	i2u149_40
   615   0010A2                     i2u149_41:
   616   0010A2  EF5C  F008         	goto	i2l3100
   617   0010A6                     i2u149_40:
   618   0010A6  A4F2               	btfss	242,2,c	;volatile
   619   0010A8  EF58  F008         	goto	i2u150_41
   620   0010AC  EF5A  F008         	goto	i2u150_40
   621   0010B0                     i2u150_41:
   622   0010B0  EF5C  F008         	goto	i2l3100
   623   0010B4                     i2u150_40:
   624   0010B4                     
   625                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 46:         TIMER0_ISR();
   626   0010B4  EC89  F009         	call	_TIMER0_ISR	;wreg free
   627   0010B8                     i2l3100:
   628                           
   629                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 48:     if (1 == PIE1bits.TMR1IE && 1 ==
      +                           PIR1bits.TMR1IF) {
   630   0010B8  A09D               	btfss	157,0,c	;volatile
   631   0010BA  EF61  F008         	goto	i2u151_41
   632   0010BE  EF63  F008         	goto	i2u151_40
   633   0010C2                     i2u151_41:
   634   0010C2  EF6C  F008         	goto	i2l3106
   635   0010C6                     i2u151_40:
   636   0010C6  A09E               	btfss	158,0,c	;volatile
   637   0010C8  EF68  F008         	goto	i2u152_41
   638   0010CC  EF6A  F008         	goto	i2u152_40
   639   0010D0                     i2u152_41:
   640   0010D0  EF6C  F008         	goto	i2l3106
   641   0010D4                     i2u152_40:
   642   0010D4                     
   643                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 49:         TIMER1_ISR();
   644   0010D4  EC83  F009         	call	_TIMER1_ISR	;wreg free
   645   0010D8                     i2l3106:
   646                           
   647                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 52:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1)) {
   648   0010D8  A6F2               	btfss	242,3,c	;volatile
   649   0010DA  EF71  F008         	goto	i2u153_41
   650   0010DE  EF73  F008         	goto	i2u153_40
   651   0010E2                     i2u153_41:
   652   0010E2  EF1A  F009         	goto	i2l836
   653   0010E6                     i2u153_40:
   654   0010E6  A0F2               	btfss	242,0,c	;volatile
   655   0010E8  EF78  F008         	goto	i2u154_41
   656   0010EC  EF7A  F008         	goto	i2u154_40
   657   0010F0                     i2u154_41:
   658   0010F0  EF1A  F009         	goto	i2l836
   659   0010F4                     i2u154_40:
   660   0010F4                     
   661                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 56:         if ((PORTBbits.RB4 == GPIO_H
      +                          IGH) && RB4_f == 1) {
   662   0010F4  A881               	btfss	129,4,c	;volatile
   663   0010F6  EF7F  F008         	goto	i2u155_41
   664   0010FA  EF81  F008         	goto	i2u155_40
   665   0010FE                     i2u155_41:
   666   0010FE  EF8E  F008         	goto	i2l3118
   667   001102                     i2u155_40:
   668   001102  044D               	decf	_RB4_f^0,w,c	;volatile
   669   001104  A4D8               	btfss	status,2,c
   670   001106  EF87  F008         	goto	i2u156_41
   671   00110A  EF89  F008         	goto	i2u156_40
   672   00110E                     i2u156_41:
   673   00110E  EF8E  F008         	goto	i2l3118
   674   001112                     i2u156_40:
   675   001112                     
   676                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 57:             RB4_f = 0;
   677   001112  0E00               	movlw	0
   678   001114  6E4D               	movwf	_RB4_f^0,c	;volatile
   679   001116                     
   680                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 58:             RB4_ISR(0);
   681   001116  0E00               	movlw	0
   682   001118  EC70  F009         	call	_RB4_ISR
   683   00111C                     i2l3118:
   684                           
   685                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 60:         if ((PORTBbits.RB4 == GPIO_L
      +                          OW) && RB4_f == 0) {
   686   00111C  B881               	btfsc	129,4,c	;volatile
   687   00111E  EF93  F008         	goto	i2u157_41
   688   001122  EF95  F008         	goto	i2u157_40
   689   001126                     i2u157_41:
   690   001126  EFA2  F008         	goto	i2l3126
   691   00112A                     i2u157_40:
   692   00112A  504D               	movf	_RB4_f^0,w,c	;volatile
   693   00112C  A4D8               	btfss	status,2,c
   694   00112E  EF9B  F008         	goto	i2u158_41
   695   001132  EF9D  F008         	goto	i2u158_40
   696   001136                     i2u158_41:
   697   001136  EFA2  F008         	goto	i2l3126
   698   00113A                     i2u158_40:
   699   00113A                     
   700                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 61:             RB4_f = 1;
   701   00113A  0E01               	movlw	1
   702   00113C  6E4D               	movwf	_RB4_f^0,c	;volatile
   703   00113E                     
   704                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 62:             RB4_ISR(1);
   705   00113E  0E01               	movlw	1
   706   001140  EC70  F009         	call	_RB4_ISR
   707   001144                     i2l3126:
   708                           
   709                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 65:         if ((PORTBbits.RB5 == GPIO_H
      +                          IGH) && RB5_f == 1) {
   710   001144  AA81               	btfss	129,5,c	;volatile
   711   001146  EFA7  F008         	goto	i2u159_41
   712   00114A  EFA9  F008         	goto	i2u159_40
   713   00114E                     i2u159_41:
   714   00114E  EFB6  F008         	goto	i2l3134
   715   001152                     i2u159_40:
   716   001152  044C               	decf	_RB5_f^0,w,c	;volatile
   717   001154  A4D8               	btfss	status,2,c
   718   001156  EFAF  F008         	goto	i2u160_41
   719   00115A  EFB1  F008         	goto	i2u160_40
   720   00115E                     i2u160_41:
   721   00115E  EFB6  F008         	goto	i2l3134
   722   001162                     i2u160_40:
   723   001162                     
   724                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 66:             RB5_f = 0;
   725   001162  0E00               	movlw	0
   726   001164  6E4C               	movwf	_RB5_f^0,c	;volatile
   727   001166                     
   728                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 67:             RB5_ISR(0);
   729   001166  0E00               	movlw	0
   730   001168  EC63  F009         	call	_RB5_ISR
   731   00116C                     i2l3134:
   732                           
   733                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 69:         if ((PORTBbits.RB5 == GPIO_L
      +                          OW) && RB5_f == 0) {
   734   00116C  BA81               	btfsc	129,5,c	;volatile
   735   00116E  EFBB  F008         	goto	i2u161_41
   736   001172  EFBD  F008         	goto	i2u161_40
   737   001176                     i2u161_41:
   738   001176  EFCA  F008         	goto	i2l3142
   739   00117A                     i2u161_40:
   740   00117A  504C               	movf	_RB5_f^0,w,c	;volatile
   741   00117C  A4D8               	btfss	status,2,c
   742   00117E  EFC3  F008         	goto	i2u162_41
   743   001182  EFC5  F008         	goto	i2u162_40
   744   001186                     i2u162_41:
   745   001186  EFCA  F008         	goto	i2l3142
   746   00118A                     i2u162_40:
   747   00118A                     
   748                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 70:             RB5_f = 1;
   749   00118A  0E01               	movlw	1
   750   00118C  6E4C               	movwf	_RB5_f^0,c	;volatile
   751   00118E                     
   752                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 71:             RB5_ISR(1);
   753   00118E  0E01               	movlw	1
   754   001190  EC63  F009         	call	_RB5_ISR
   755   001194                     i2l3142:
   756                           
   757                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 74:         if ((PORTBbits.RB6 == GPIO_H
      +                          IGH) && RB6_f == 1) {
   758   001194  AC81               	btfss	129,6,c	;volatile
   759   001196  EFCF  F008         	goto	i2u163_41
   760   00119A  EFD1  F008         	goto	i2u163_40
   761   00119E                     i2u163_41:
   762   00119E  EFDE  F008         	goto	i2l3150
   763   0011A2                     i2u163_40:
   764   0011A2  044B               	decf	_RB6_f^0,w,c	;volatile
   765   0011A4  A4D8               	btfss	status,2,c
   766   0011A6  EFD7  F008         	goto	i2u164_41
   767   0011AA  EFD9  F008         	goto	i2u164_40
   768   0011AE                     i2u164_41:
   769   0011AE  EFDE  F008         	goto	i2l3150
   770   0011B2                     i2u164_40:
   771   0011B2                     
   772                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 75:             RB6_f = 0;
   773   0011B2  0E00               	movlw	0
   774   0011B4  6E4B               	movwf	_RB6_f^0,c	;volatile
   775   0011B6                     
   776                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 76:             RB6_ISR(0);
   777   0011B6  0E00               	movlw	0
   778   0011B8  EC56  F009         	call	_RB6_ISR
   779   0011BC                     i2l3150:
   780                           
   781                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 78:         if ((PORTBbits.RB6 == GPIO_L
      +                          OW) && RB6_f == 0) {
   782   0011BC  BC81               	btfsc	129,6,c	;volatile
   783   0011BE  EFE3  F008         	goto	i2u165_41
   784   0011C2  EFE5  F008         	goto	i2u165_40
   785   0011C6                     i2u165_41:
   786   0011C6  EFF2  F008         	goto	i2l3158
   787   0011CA                     i2u165_40:
   788   0011CA  504B               	movf	_RB6_f^0,w,c	;volatile
   789   0011CC  A4D8               	btfss	status,2,c
   790   0011CE  EFEB  F008         	goto	i2u166_41
   791   0011D2  EFED  F008         	goto	i2u166_40
   792   0011D6                     i2u166_41:
   793   0011D6  EFF2  F008         	goto	i2l3158
   794   0011DA                     i2u166_40:
   795   0011DA                     
   796                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 79:             RB6_f = 1;
   797   0011DA  0E01               	movlw	1
   798   0011DC  6E4B               	movwf	_RB6_f^0,c	;volatile
   799   0011DE                     
   800                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 80:             RB6_ISR(1);
   801   0011DE  0E01               	movlw	1
   802   0011E0  EC56  F009         	call	_RB6_ISR
   803   0011E4                     i2l3158:
   804                           
   805                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 83:         if ((PORTBbits.RB7 == GPIO_H
      +                          IGH) && RB7_f == 1) {
   806   0011E4  AE81               	btfss	129,7,c	;volatile
   807   0011E6  EFF7  F008         	goto	i2u167_41
   808   0011EA  EFF9  F008         	goto	i2u167_40
   809   0011EE                     i2u167_41:
   810   0011EE  EF06  F009         	goto	i2l3166
   811   0011F2                     i2u167_40:
   812   0011F2  044A               	decf	_RB7_f^0,w,c	;volatile
   813   0011F4  A4D8               	btfss	status,2,c
   814   0011F6  EFFF  F008         	goto	i2u168_41
   815   0011FA  EF01  F009         	goto	i2u168_40
   816   0011FE                     i2u168_41:
   817   0011FE  EF06  F009         	goto	i2l3166
   818   001202                     i2u168_40:
   819   001202                     
   820                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 84:             RB7_f = 0;
   821   001202  0E00               	movlw	0
   822   001204  6E4A               	movwf	_RB7_f^0,c	;volatile
   823   001206                     
   824                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 85:             RB7_ISR(0);
   825   001206  0E00               	movlw	0
   826   001208  EC49  F009         	call	_RB7_ISR
   827   00120C                     i2l3166:
   828                           
   829                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 87:         if ((PORTBbits.RB7 == GPIO_L
      +                          OW) && RB7_f == 0) {
   830   00120C  BE81               	btfsc	129,7,c	;volatile
   831   00120E  EF0B  F009         	goto	i2u169_41
   832   001212  EF0D  F009         	goto	i2u169_40
   833   001216                     i2u169_41:
   834   001216  EF1A  F009         	goto	i2l836
   835   00121A                     i2u169_40:
   836   00121A  504A               	movf	_RB7_f^0,w,c	;volatile
   837   00121C  A4D8               	btfss	status,2,c
   838   00121E  EF13  F009         	goto	i2u170_41
   839   001222  EF15  F009         	goto	i2u170_40
   840   001226                     i2u170_41:
   841   001226  EF1A  F009         	goto	i2l836
   842   00122A                     i2u170_40:
   843   00122A                     
   844                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 88:             RB7_f = 1;
   845   00122A  0E01               	movlw	1
   846   00122C  6E4A               	movwf	_RB7_f^0,c	;volatile
   847   00122E                     
   848                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 89:             RB7_ISR(1);
   849   00122E  0E01               	movlw	1
   850   001230  EC49  F009         	call	_RB7_ISR
   851   001234                     i2l836:
   852   001234  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   853   001236  0011               	retfie		f
   854   001238                     __end_of_Interrupt_Manager_High:
   855                           	callstack 0
   856                           
   857 ;; *************** function _TIMER1_ISR *****************
   858 ;; Defined at:
   859 ;;		line 144 in file "MCAL_LAYER/Timer/hal_timer1.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_Interrupt_Manager_High
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text4
   887   001306                     __ptext4:
   888                           	callstack 0
   889   001306                     _TIMER1_ISR:
   890                           	callstack 27
   891   001306                     
   892                           ;MCAL_LAYER/Timer/hal_timer1.c: 146:     (PIR1bits.TMR1IF = 0);
   893   001306  909E               	bcf	158,0,c	;volatile
   894   001308                     
   895                           ;MCAL_LAYER/Timer/hal_timer1.c: 147:     TMR1H = (pre_work_out) >> 8;
   896   001308  5004               	movf	(_pre_work_out@hal_timer1$F2115+1)^0,w,c
   897   00130A  6ECF               	movwf	207,c	;volatile
   898   00130C                     
   899                           ;MCAL_LAYER/Timer/hal_timer1.c: 148:     TMR1L = (uint8) (pre_work_out);
   900   00130C  C003  FFCE         	movff	_pre_work_out@hal_timer1$F2115,4046	;volatile
   901   001310  0012               	return		;funcret
   902   001312                     __end_of_TIMER1_ISR:
   903                           	callstack 0
   904                           
   905 ;; *************** function _TIMER0_ISR *****************
   906 ;; Defined at:
   907 ;;		line 137 in file "MCAL_LAYER/Timer/hal_timer0.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;		None
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg, status,2
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;Total ram usage:        0 bytes
   926 ;; Hardware stack levels used: 1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_Interrupt_Manager_High
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text5
   935   001312                     __ptext5:
   936                           	callstack 0
   937   001312                     _TIMER0_ISR:
   938                           	callstack 27
   939   001312                     
   940                           ;MCAL_LAYER/Timer/hal_timer0.c: 139:     (INTCONbits.TMR0IF = 0);
   941   001312  94F2               	bcf	242,2,c	;volatile
   942   001314                     
   943                           ;MCAL_LAYER/Timer/hal_timer0.c: 140:     TMR0H = (pre_work_out) >> 8;
   944   001314  5008               	movf	(_pre_work_out+1)^0,w,c
   945   001316  6ED7               	movwf	215,c	;volatile
   946   001318                     
   947                           ;MCAL_LAYER/Timer/hal_timer0.c: 141:     TMR0L = (uint8) (pre_work_out);
   948   001318  C007  FFD6         	movff	_pre_work_out,4054	;volatile
   949   00131C  0012               	return		;funcret
   950   00131E                     __end_of_TIMER0_ISR:
   951                           	callstack 0
   952                           
   953 ;; *************** function _RB7_ISR *****************
   954 ;; Defined at:
   955 ;;		line 514 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  source          1    wreg     unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  source          1    0[COMRAM] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, status,2, status,0
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;Total ram usage:        1 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; This function calls:
   976 ;;		Nothing
   977 ;; This function is called by:
   978 ;;		_Interrupt_Manager_High
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text6
   983   001292                     __ptext6:
   984                           	callstack 0
   985   001292                     _RB7_ISR:
   986                           	callstack 27
   987                           
   988                           ;incstack = 0
   989                           ;RB7_ISR@source stored from wreg
   990   001292  6E4E               	movwf	RB7_ISR@source^0,c
   991   001294                     
   992                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 515:     (INTCONbits.RBIF = 1);
   993   001294  80F2               	bsf	242,0,c	;volatile
   994   001296                     
   995                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 517:     if (0 == source) {
   996   001296  504E               	movf	RB7_ISR@source^0,w,c
   997   001298  A4D8               	btfss	status,2,c
   998   00129A  EF51  F009         	goto	i2u45_41
   999   00129E  EF53  F009         	goto	i2u45_40
  1000   0012A2                     i2u45_41:
  1001   0012A2  EF55  F009         	goto	i2l2082
  1002   0012A6                     i2u45_40:
  1003   0012A6  EF55  F009         	goto	i2l778
  1004   0012AA                     i2l2082:
  1005   0012AA                     i2l778:
  1006   0012AA  0012               	return		;funcret
  1007   0012AC                     __end_of_RB7_ISR:
  1008                           	callstack 0
  1009                           
  1010 ;; *************** function _RB6_ISR *****************
  1011 ;; Defined at:
  1012 ;;		line 500 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;  source          1    wreg     unsigned char 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  source          1    0[COMRAM] unsigned char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;Total ram usage:        1 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		_Interrupt_Manager_High
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text7
  1040   0012AC                     __ptext7:
  1041                           	callstack 0
  1042   0012AC                     _RB6_ISR:
  1043                           	callstack 27
  1044                           
  1045                           ;incstack = 0
  1046                           ;RB6_ISR@source stored from wreg
  1047   0012AC  6E4E               	movwf	RB6_ISR@source^0,c
  1048   0012AE                     
  1049                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 501:     (INTCONbits.RBIF = 1);
  1050   0012AE  80F2               	bsf	242,0,c	;volatile
  1051   0012B0                     
  1052                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 503:     if (0 == source) {
  1053   0012B0  504E               	movf	RB6_ISR@source^0,w,c
  1054   0012B2  A4D8               	btfss	status,2,c
  1055   0012B4  EF5E  F009         	goto	i2u44_41
  1056   0012B8  EF60  F009         	goto	i2u44_40
  1057   0012BC                     i2u44_41:
  1058   0012BC  EF62  F009         	goto	i2l2072
  1059   0012C0                     i2u44_40:
  1060   0012C0  EF62  F009         	goto	i2l770
  1061   0012C4                     i2l2072:
  1062   0012C4                     i2l770:
  1063   0012C4  0012               	return		;funcret
  1064   0012C6                     __end_of_RB6_ISR:
  1065                           	callstack 0
  1066                           
  1067 ;; *************** function _RB5_ISR *****************
  1068 ;; Defined at:
  1069 ;;		line 486 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  source          1    wreg     unsigned char 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  source          1    0[COMRAM] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1086 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;Total ram usage:        1 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_Interrupt_Manager_High
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text8
  1097   0012C6                     __ptext8:
  1098                           	callstack 0
  1099   0012C6                     _RB5_ISR:
  1100                           	callstack 27
  1101                           
  1102                           ;incstack = 0
  1103                           ;RB5_ISR@source stored from wreg
  1104   0012C6  6E4E               	movwf	RB5_ISR@source^0,c
  1105   0012C8                     
  1106                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 487:     (INTCONbits.RBIF = 1);
  1107   0012C8  80F2               	bsf	242,0,c	;volatile
  1108   0012CA                     
  1109                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 489:     if (0 == source) {
  1110   0012CA  504E               	movf	RB5_ISR@source^0,w,c
  1111   0012CC  A4D8               	btfss	status,2,c
  1112   0012CE  EF6B  F009         	goto	i2u43_41
  1113   0012D2  EF6D  F009         	goto	i2u43_40
  1114   0012D6                     i2u43_41:
  1115   0012D6  EF6F  F009         	goto	i2l2062
  1116   0012DA                     i2u43_40:
  1117   0012DA  EF6F  F009         	goto	i2l762
  1118   0012DE                     i2l2062:
  1119   0012DE                     i2l762:
  1120   0012DE  0012               	return		;funcret
  1121   0012E0                     __end_of_RB5_ISR:
  1122                           	callstack 0
  1123                           
  1124 ;; *************** function _RB4_ISR *****************
  1125 ;; Defined at:
  1126 ;;		line 472 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  source          1    wreg     unsigned char 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  source          1    0[COMRAM] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;Total ram usage:        1 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_Interrupt_Manager_High
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text9
  1154   0012E0                     __ptext9:
  1155                           	callstack 0
  1156   0012E0                     _RB4_ISR:
  1157                           	callstack 27
  1158                           
  1159                           ;incstack = 0
  1160                           ;RB4_ISR@source stored from wreg
  1161   0012E0  6E4E               	movwf	RB4_ISR@source^0,c
  1162   0012E2                     
  1163                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 473:     (INTCONbits.RBIF = 1);
  1164   0012E2  80F2               	bsf	242,0,c	;volatile
  1165   0012E4                     
  1166                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 475:     if (0 == source) {
  1167   0012E4  504E               	movf	RB4_ISR@source^0,w,c
  1168   0012E6  A4D8               	btfss	status,2,c
  1169   0012E8  EF78  F009         	goto	i2u42_41
  1170   0012EC  EF7A  F009         	goto	i2u42_40
  1171   0012F0                     i2u42_41:
  1172   0012F0  EF7C  F009         	goto	i2l2052
  1173   0012F4                     i2u42_40:
  1174   0012F4  EF7C  F009         	goto	i2l754
  1175   0012F8                     i2l2052:
  1176   0012F8                     i2l754:
  1177   0012F8  0012               	return		;funcret
  1178   0012FA                     __end_of_RB4_ISR:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _INT2_ISR *****************
  1182 ;; Defined at:
  1183 ;;		line 466 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		None
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;Total ram usage:        0 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_Interrupt_Manager_High
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text10
  1211   001324                     __ptext10:
  1212                           	callstack 0
  1213   001324                     _INT2_ISR:
  1214                           	callstack 27
  1215   001324                     
  1216                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 467:     (INTCON3bits.INT2IF = 0);
  1217   001324  92F0               	bcf	240,1,c	;volatile
  1218   001326  0012               	return		;funcret
  1219   001328                     __end_of_INT2_ISR:
  1220                           	callstack 0
  1221                           
  1222 ;; *************** function _INT1_ISR *****************
  1223 ;; Defined at:
  1224 ;;		line 460 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		None
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;Total ram usage:        0 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_Interrupt_Manager_High
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text11
  1252   001328                     __ptext11:
  1253                           	callstack 0
  1254   001328                     _INT1_ISR:
  1255                           	callstack 27
  1256   001328                     
  1257                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 461:     (INTCON3bits.INT1IF = 0);
  1258   001328  90F0               	bcf	240,0,c	;volatile
  1259   00132A  0012               	return		;funcret
  1260   00132C                     __end_of_INT1_ISR:
  1261                           	callstack 0
  1262                           
  1263 ;; *************** function _INT0_ISR *****************
  1264 ;; Defined at:
  1265 ;;		line 454 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		None
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;Total ram usage:        0 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		_Interrupt_Manager_High
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text12
  1293   00132C                     __ptext12:
  1294                           	callstack 0
  1295   00132C                     _INT0_ISR:
  1296                           	callstack 27
  1297   00132C                     
  1298                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 455:     (INTCONbits.INT0IF = 0);
  1299   00132C  92F2               	bcf	242,1,c	;volatile
  1300   00132E  0012               	return		;funcret
  1301   001330                     __end_of_INT0_ISR:
  1302                           	callstack 0
  1303                           
  1304 ;; *************** function _ADC_ISR *****************
  1305 ;; Defined at:
  1306 ;;		line 315 in file "MCAL_LAYER/ADC/hal_adc.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		None
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;Total ram usage:        0 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_Interrupt_Manager_High
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text13
  1334   001330                     __ptext13:
  1335                           	callstack 0
  1336   001330                     _ADC_ISR:
  1337                           	callstack 27
  1338   001330                     
  1339                           ;MCAL_LAYER/ADC/hal_adc.c: 316:     (PIR1bits.ADIF = 0);
  1340   001330  9C9E               	bcf	158,6,c	;volatile
  1341   001332  0012               	return		;funcret
  1342   001334                     __end_of_ADC_ISR:
  1343                           	callstack 0
  1344                           
  1345                           	psect	rparam
  1346   000000                     
  1347                           	psect	temp
  1348   00004F                     btemp:
  1349                           	callstack 0
  1350   00004F                     	ds	1
  1351   000000                     int$flags	set	btemp
  1352   000000                     wtemp8	set	btemp+1
  1353   000000                     ttemp5	set	btemp+1
  1354   000000                     ttemp6	set	btemp+4
  1355   000000                     ttemp7	set	btemp+8
  1356                           
  1357                           	psect	config
  1358                           
  1359                           ; Padding undefined space
  1360   300000                     	org	3145728
  1361   300000  FF                 	db	255
  1362                           
  1363                           ;Config register CONFIG1H @ 0x300001
  1364                           ;	Oscillator Selection bits
  1365                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  1366                           ;	Fail-Safe Clock Monitor Enable bit
  1367                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1368                           ;	Internal/External Oscillator Switchover bit
  1369                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1370   300001                     	org	3145729
  1371   300001  07                 	db	7
  1372                           
  1373                           ;Config register CONFIG2L @ 0x300002
  1374                           ;	Power-up Timer Enable bit
  1375                           ;	PWRT = OFF, PWRT disabled
  1376                           ;	Brown-out Reset Enable bits
  1377                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1378                           ;	Brown Out Reset Voltage bits
  1379                           ;	BORV = 3, Minimum setting
  1380   300002                     	org	3145730
  1381   300002  1F                 	db	31
  1382                           
  1383                           ;Config register CONFIG2H @ 0x300003
  1384                           ;	Watchdog Timer Enable bit
  1385                           ;	WDT = ON, WDT enabled
  1386                           ;	Watchdog Timer Postscale Select bits
  1387                           ;	WDTPS = 32768, 1:32768
  1388   300003                     	org	3145731
  1389   300003  1F                 	db	31
  1390                           
  1391                           ; Padding undefined space
  1392   300004                     	org	3145732
  1393   300004  FF                 	db	255
  1394                           
  1395                           ;Config register CONFIG3H @ 0x300005
  1396                           ;	CCP2 MUX bit
  1397                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1398                           ;	PORTB A/D Enable bit
  1399                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1400                           ;	Low-Power Timer1 Oscillator Enable bit
  1401                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1402                           ;	MCLR Pin Enable bit
  1403                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1404   300005                     	org	3145733
  1405   300005  81                 	db	129
  1406                           
  1407                           ;Config register CONFIG4L @ 0x300006
  1408                           ;	Stack Full/Underflow Reset Enable bit
  1409                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1410                           ;	Single-Supply ICSP Enable bit
  1411                           ;	LVP = ON, Single-Supply ICSP enabled
  1412                           ;	Extended Instruction Set Enable bit
  1413                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1414                           ;	Background Debugger Enable bit
  1415                           ;	DEBUG = 0x1, unprogrammed default
  1416   300006                     	org	3145734
  1417   300006  85                 	db	133
  1418                           
  1419                           ; Padding undefined space
  1420   300007                     	org	3145735
  1421   300007  FF                 	db	255
  1422                           
  1423                           ;Config register CONFIG5L @ 0x300008
  1424                           ;	Code Protection bit
  1425                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1426                           ;	Code Protection bit
  1427                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1428                           ;	Code Protection bit
  1429                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1430                           ;	Code Protection bit
  1431                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1432   300008                     	org	3145736
  1433   300008  0F                 	db	15
  1434                           
  1435                           ;Config register CONFIG5H @ 0x300009
  1436                           ;	Boot Block Code Protection bit
  1437                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1438                           ;	Data EEPROM Code Protection bit
  1439                           ;	CPD = OFF, Data EEPROM not code-protected
  1440   300009                     	org	3145737
  1441   300009  C0                 	db	192
  1442                           
  1443                           ;Config register CONFIG6L @ 0x30000A
  1444                           ;	Write Protection bit
  1445                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1446                           ;	Write Protection bit
  1447                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1448                           ;	Write Protection bit
  1449                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1450                           ;	Write Protection bit
  1451                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1452   30000A                     	org	3145738
  1453   30000A  0F                 	db	15
  1454                           
  1455                           ;Config register CONFIG6H @ 0x30000B
  1456                           ;	Configuration Register Write Protection bit
  1457                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1458                           ;	Boot Block Write Protection bit
  1459                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1460                           ;	Data EEPROM Write Protection bit
  1461                           ;	WRTD = OFF, Data EEPROM not write-protected
  1462   30000B                     	org	3145739
  1463   30000B  E0                 	db	224
  1464                           
  1465                           ;Config register CONFIG7L @ 0x30000C
  1466                           ;	Table Read Protection bit
  1467                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1468                           ;	Table Read Protection bit
  1469                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1470                           ;	Table Read Protection bit
  1471                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1472                           ;	Table Read Protection bit
  1473                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1474   30000C                     	org	3145740
  1475   30000C  0F                 	db	15
  1476                           
  1477                           ;Config register CONFIG7H @ 0x30000D
  1478                           ;	Boot Block Table Read Protection bit
  1479                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1480   30000D                     	org	3145741
  1481   30000D  40                 	db	64
  1482                           tosu	equ	0xFFF
  1483                           tosh	equ	0xFFE
  1484                           tosl	equ	0xFFD
  1485                           stkptr	equ	0xFFC
  1486                           pclatu	equ	0xFFB
  1487                           pclath	equ	0xFFA
  1488                           pcl	equ	0xFF9
  1489                           tblptru	equ	0xFF8
  1490                           tblptrh	equ	0xFF7
  1491                           tblptrl	equ	0xFF6
  1492                           tablat	equ	0xFF5
  1493                           prodh	equ	0xFF4
  1494                           prodl	equ	0xFF3
  1495                           indf0	equ	0xFEF
  1496                           postinc0	equ	0xFEE
  1497                           postdec0	equ	0xFED
  1498                           preinc0	equ	0xFEC
  1499                           plusw0	equ	0xFEB
  1500                           fsr0h	equ	0xFEA
  1501                           fsr0l	equ	0xFE9
  1502                           wreg	equ	0xFE8
  1503                           indf1	equ	0xFE7
  1504                           postinc1	equ	0xFE6
  1505                           postdec1	equ	0xFE5
  1506                           preinc1	equ	0xFE4
  1507                           plusw1	equ	0xFE3
  1508                           fsr1h	equ	0xFE2
  1509                           fsr1l	equ	0xFE1
  1510                           bsr	equ	0xFE0
  1511                           indf2	equ	0xFDF
  1512                           postinc2	equ	0xFDE
  1513                           postdec2	equ	0xFDD
  1514                           preinc2	equ	0xFDC
  1515                           plusw2	equ	0xFDB
  1516                           fsr2h	equ	0xFDA
  1517                           fsr2l	equ	0xFD9
  1518                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        35
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      1      78
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Result@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    _ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    adc_select_result_format@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    adc_select_voltage_ref@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@obj$External_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@obj$External_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_Set_Interrupt_Handler@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1278$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    S1311$External_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    S1311$External_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    S1815$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S1985$Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S2206$Timer2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S2768$buffer	PTR unsigned char  size(2) Largest target is 0

    S2768$source	PTR const unsigned char  size(2) Largest target is 0

    S663$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    Timer0_Init@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0_Mode_Config@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Reg_Size_Config@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@timer$Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer1_Mode_Config@timer$Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@timer$Timer2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupt_Manager_High in COMRAM

    _Interrupt_Manager_High->_RB4_ISR
    _Interrupt_Manager_High->_RB5_ISR
    _Interrupt_Manager_High->_RB6_ISR
    _Interrupt_Manager_High->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt_Manager_High in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt_Manager_High in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_Manager_High in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_Manager_High in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_Manager_High in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_Manager_High in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_Manager_High in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_Manager_High in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_Manager_High in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_Manager_High in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_Manager_High in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_Manager_High in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_Manager_High in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_Manager_High in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_Manager_High in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_Manager_High in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
             _Application_initialize
 ---------------------------------------------------------------------------------
 (1) _Application_initialize                               0     0      0       0
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Interrupt_Manager_High                               0     0      0     120
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                         _TIMER0_ISR
                         _TIMER1_ISR
 ---------------------------------------------------------------------------------
 (4) _TIMER1_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TIMER0_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_initialize
     _ecu_layer_initialize

 _Interrupt_Manager_High (ROOT)
   _ADC_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TIMER0_ISR
   _TIMER1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      47        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      1      4E       1       61.9%
BITBIGSFRhlhlhh     18      0       0      38        0.0%
BITBIGSFRllhh       15      0       0      42        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllhll       7      0       0      43        0.0%
BITBIGSFRlllhh       6      0       0      44        0.0%
BITBIGSFRhlhllh      5      0       0      39        0.0%
BITBIGSFRhlhlll      5      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      45        0.0%
BITBIGSFRlllll       4      0       0      46        0.0%
BITBIGSFRhlhlll      1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E      20        0.0%
DATA                 0      0      4E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Mar 09 15:56:23 2024

       ?_Interrupt_Manager_High 004E                             l320 1334                             l963 12FE  
                           l964 12FE                             l969 1322                 __end_of_ADC_ISR 1334  
                           _ret 0049                             _pre 0023                             wreg 0FE8  
               __end_of_RB4_ISR 12FA                 __end_of_RB5_ISR 12E0                 __end_of_RB6_ISR 12C6  
               __end_of_RB7_ISR 12AC                            l2102 131E                            l1800 1334  
                          l3344 12FA                            STR_1 1011                            _LATA 0F89  
                          _LATB 0F8A                            _LATC 0F8B                            _LATD 0F8C  
                          _LATE 0F8D                            _TMR2 0FCC                            _main 12FA  
                          fsr1l 0FE1                            btemp 004F                            start 000E  
__end_of_Interrupt_Manager_High 1238                    ___param_bank 0000                     ?_TIMER0_ISR 004E  
                   ?_TIMER1_ISR 004E                __end_of_INT0_ISR 1330                __end_of_INT1_ISR 132C  
              __end_of_INT2_ISR 1328   _pre_work_out@hal_timer1$F2115 0003                   Relay_on@F3485 0025  
                         ?_main 004E                           _EEADR 0FA9                           _RB4_f 004D  
                         _RB5_f 004C                           i2l444 1332                           _RB6_f 004B  
                         _RB7_f 004A                           i2l742 132A                           i2l738 132E  
                         i2l746 1326                           i2l754 12F8                           i2l762 12DE  
                         i2l770 12C4                           i2l836 1234                           i2l778 12AA  
                         i2l949 1310                           i2l878 131C                           _TMR0H 0FD7  
                         _TMR1H 0FCF                           _TMR0L 0FD6                           _TMR1L 0FCE  
                         _PORTA 0F80                           _PORTB 0F81                           _PORTC 0F82  
                         _PORTD 0F83                           _PORTE 0F84                           _TRISA 0F92  
                         _TRISB 0F93                           _TRISC 0F94                           _TRISD 0F95  
                         _TRISE 0F96                           tablat 0FF5                           ttemp5 0050  
                         ttemp6 0053                           ttemp7 0057                           status 0FD8  
                         wtemp8 0050                 __initialization 1238                    __end_of_main 1306  
                     ??_ADC_ISR 004E                   _lat_registers 0035                          ??_main 004F  
                 __activetblptr 0003                led_turn_on@F3487 0029                       ??_RB4_ISR 004E  
                     ??_RB5_ISR 004E                       ??_RB6_ISR 004E                       ??_RB7_ISR 004E  
                        _ADRESH 0FC4                          _EEADRH 0FAA                          _ADRESL 0FC3  
                        _EEDATA 0FA8                          _EECON2 0FA7        _Timer2_Interrupt_Handler 0001  
                        i2l2034 132C                          i2l2042 1324                          i2l2052 12F8  
                        i2l3100 10B8                          i2l2038 1328                          i2l2046 12E2  
                        i2l2062 12DE                          i2l3110 10F4                          i2l3102 10C6  
                        i2l2048 12E4                          i2l2056 12C8                          i2l2072 12C4  
                        i2l3120 112A                          i2l3112 1102                          i2l3104 10D4  
                        i2l2058 12CA                          i2l2066 12AE                          i2l2082 12AA  
                        i2l2090 1318                          i2l3130 1162                          i2l3122 113A  
                        i2l3114 1112                          i2l3106 10D8                          i2l2068 12B0  
                        i2l2076 1294                          i2l3140 118E                          i2l3132 1166  
                        i2l3124 113E                          i2l3116 1116                          i2l3108 10E6  
                        i2l2078 1296                          i2l2086 1312                          i2l2094 1306  
                        i2l3150 11BC                          i2l3142 1194                          i2l3134 116C  
                        i2l3126 1144                          i2l3118 111C                          i2l3070 1018  
                        i2l2088 1314                          i2l2096 1308                          i2l3160 11F2  
                        i2l3152 11CA                          i2l3144 11A2                          i2l3136 117A  
                        i2l3128 1152                          i2l3080 1054                          i2l3072 1026  
                        i2l2098 130C                          i2l3170 122A                          i2l3162 1202  
                        i2l3154 11DA                          i2l3146 11B2                          i2l3138 118A  
                        i2l3090 1086                          i2l3082 1058                          i2l3074 1034  
                        i2l3172 122E                          i2l3164 1206                          i2l3156 11DE  
                        i2l3148 11B6                          i2l3092 1094                          i2l3084 1066  
                        i2l3076 1038                          i2l3166 120C                          i2l3158 11E4  
                        i2l3094 1098                          i2l3086 1074                          i2l3078 1046  
                        i2l3168 121A                          i2l3096 10A6                          i2l3088 1078  
                        i2l3098 10B4                          i2l1994 1330                  Relay_off@F3490 0024  
       ?_Application_initialize 004E                          clear_0 125E                          isa$std 0001  
                  __pdataCOMRAM 002B                    __mediumconst 0000                          tblptrh 0FF7  
                        tblptrl 0FF6                          tblptru 0FF8                      __accesstop 0080  
       __end_of__initialization 1264                       ?_INT0_ISR 004E                       ?_INT1_ISR 004E  
                     ?_INT2_ISR 004E                   ___rparam_used 0001                  __pcstackCOMRAM 004E  
__end_of_Application_initialize 1324                   RB4_ISR@source 004E      _RB6_Interrupt_Handler_High 0011  
                 RB5_ISR@source 004E       _RB5_Interrupt_Handler_Low 0013                      ??_INT0_ISR 004E  
                    ??_INT1_ISR 004E                      ??_INT2_ISR 004E          _INT2_Interrupt_Handler 001B  
                 RB6_ISR@source 004E               led_turn_off@F3492 0028                    ??_TIMER0_ISR 004E  
                  ??_TIMER1_ISR 004E                         _ADC_ISR 1330                         _RB4_ISR 12E0  
                       _RB5_ISR 12C6                         _RB6_ISR 12AC                         _RB7_ISR 1292  
                       i2u42_40 12F4                         i2u42_41 12F0                         i2u43_40 12DA  
                       i2u43_41 12D6                         i2u44_40 12C0                         i2u44_41 12BC  
                       i2u45_40 12A6                         i2u45_41 12A2                   RB7_ISR@source 004E  
                    _btn_values 1001                  _tris_registers 003F              __end_of_TIMER0_ISR 131E  
            __end_of_TIMER1_ISR 1312                         __Hparam 0000                         __Lparam 0000  
                  __psmallconst 1000                         __pcinit 1238                         __ramtop 1000  
                       __ptext0 12FA                         __ptext1 131E                         __ptext2 1334  
                       __ptext4 1306                         __ptext5 1312                         __ptext6 1292  
                       __ptext7 12AC                         __ptext8 12C6                         __ptext9 12E0  
                     _T0CONbits 0FD5                       _T1CONbits 0FCD                       _T2CONbits 0FCA  
                __pintcode_body 1016            end_of_initialization 1264                         int_func 1016  
                       postdec1 0FE5                         postinc0 0FEE                       _PORTBbits 0F81  
      _Timer0_Interrupt_Handler 0009        ??_Interrupt_Manager_High 004F                   __pidataCOMRAM 126E  
           start_initialization 1238                        ?_ADC_ISR 004E      _RB5_Interrupt_Handler_High 0015  
  __end_of_ecu_layer_initialize 1336                        ?_RB4_ISR 004E                        ?_RB5_ISR 004E  
                      ?_RB6_ISR 004E                        ?_RB7_ISR 004E                     __pbssCOMRAM 0001  
     _RB6_Interrupt_Handler_Low 000F          _INT0_Interrupt_Handler 001F           Relay_initialize@F3480 0026  
        __ADC_Interrupt_Handler 0021                       __pintcode 0008                     __smallconst 1000  
                      _INT0_ISR 132C                        _INT1_ISR 1328                        _INT2_ISR 1324  
      ??_Application_initialize 004F                        _PIE1bits 0F9D                        i2u141_40 1026  
                      i2u141_41 1022                        i2u150_40 10B4                        i2u142_40 1034  
                      i2u150_41 10B0                        i2u142_41 1030                        i2u151_40 10C6  
                      i2u143_40 1046                        i2u151_41 10C2                        i2u143_41 1042  
                      i2u160_40 1162                        i2u152_40 10D4                        i2u144_40 1054  
                      i2u160_41 115E                        i2u152_41 10D0                        i2u144_41 1050  
                      i2u161_40 117A                        i2u153_40 10E6                        i2u145_40 1066  
                      i2u161_41 1176                        i2u153_41 10E2                        i2u145_41 1062  
                      i2u170_40 122A                        i2u162_40 118A                        i2u154_40 10F4  
                      i2u146_40 1074                        i2u170_41 1226                        i2u162_41 1186  
                      i2u154_41 10F0                        i2u146_41 1070                        i2u163_40 11A2  
                      i2u155_40 1102                        i2u147_40 1086                        i2u163_41 119E  
                      i2u155_41 10FE                        i2u147_41 1082                        i2u164_40 11B2  
                      i2u156_40 1112                        i2u148_40 1094                        i2u164_41 11AE  
                      i2u156_41 110E                        i2u148_41 1090                        i2u165_40 11CA  
                      i2u157_40 112A                        i2u149_40 10A6                        i2u165_41 11C6  
                      i2u157_41 1126                        i2u149_41 10A2                        i2u166_40 11DA  
                      i2u158_40 113A                        i2u166_41 11D6                        i2u158_41 1136  
                      i2u167_40 11F2                        i2u159_40 1152                        i2u167_41 11EE  
                      i2u159_41 114E                        i2u168_40 1202                        i2u168_41 11FE  
                      i2u169_40 121A                        i2u169_41 1216                        _PIR1bits 0F9E  
        _Interrupt_Manager_High 0008                      _ADCON0bits 0FC2                      _ADCON1bits 0FC1  
                    _ADCON2bits 0FC0                     _INTCON2bits 0FF1                     _INTCON3bits 0FF0  
                     copy_data0 124C            _ecu_layer_initialize 1334                      _EECON1bits 0FA6  
                      __Hrparam 0000                        __Lrparam 0000              __end_of_btn_values 1011  
            led_intialize@F3482 002A                        __ptext10 1324                        __ptext11 1328  
                      __ptext12 132C                        __ptext13 1330        _Timer1_Interrupt_Handler 0005  
         ?_ecu_layer_initialize 004E                        isa$xinst 0000                        int$flags 004F  
                    _INTCONbits 0FF2                    _pre_work_out 0007                        intlevel2 0000  
        led_toggle_status@F3497 0027                      _TIMER0_ISR 1312                      _TIMER1_ISR 1306  
    _RB4_Interrupt_Handler_High 0019          _Application_initialize 131E      _RB7_Interrupt_Handler_High 000D  
                _port_registers 002B       _RB4_Interrupt_Handler_Low 0017       _RB7_Interrupt_Handler_Low 000B  
        ??_ecu_layer_initialize 004F          _INT1_Interrupt_Handler 001D  
