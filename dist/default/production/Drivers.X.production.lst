

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Feb 11 21:05:02 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Generated 23/03/2023 GMT
    54                           ; 
    55                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F4620 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87   000000                     
    88                           	psect	idataCOMRAM
    89   001DC6                     __pidataCOMRAM:
    90                           	callstack 0
    91                           
    92                           ;initializer for _lat_registers
    93   001DC6  89                 	db	137
    94   001DC7  0F                 	db	15
    95   001DC8  8A                 	db	138
    96   001DC9  0F                 	db	15
    97   001DCA  8B                 	db	139
    98   001DCB  0F                 	db	15
    99   001DCC  8C                 	db	140
   100   001DCD  0F                 	db	15
   101   001DCE  8D                 	db	141
   102   001DCF  0F                 	db	15
   103                           
   104                           ;initializer for _tris_registers
   105   001DD0  92                 	db	146
   106   001DD1  0F                 	db	15
   107   001DD2  93                 	db	147
   108   001DD3  0F                 	db	15
   109   001DD4  94                 	db	148
   110   001DD5  0F                 	db	15
   111   001DD6  95                 	db	149
   112   001DD7  0F                 	db	15
   113   001DD8  96                 	db	150
   114   001DD9  0F                 	db	15
   115                           
   116                           ;initializer for _ret
   117   001DDA  01                 	db	1
   118                           
   119                           ;initializer for _RB7_f
   120   001DDB  01                 	db	1
   121                           
   122                           ;initializer for _RB6_f
   123   001DDC  01                 	db	1
   124                           
   125                           ;initializer for _RB5_f
   126   001DDD  01                 	db	1
   127                           
   128                           ;initializer for _RB4_f
   129   001DDE  01                 	db	1
   130                           
   131                           ;initializer for _clock
   132   001DDF  10                 	db	low _timer_increment
   133   001DE0  1E                 	db	high _timer_increment
   134   001DE1  00                 	db	0
   135   001DE2  00                 	db	0
   136   001DE3  01                 	db	1
   137   001DE4  41                 	db	65
   138                           
   139                           ;initializer for _segment
   140   001DE5  00                 	db	0
   141   001DE6  08                 	db	8
   142   001DE7  10                 	db	16
   143   001DE8  18                 	db	24
   144   001DE9  01                 	db	1
   145                           
   146                           ;initializer for _segment_10
   147   001DEA  02                 	db	2
   148   001DEB  0A                 	db	10
   149   001DEC  12                 	db	18
   150   001DED  1A                 	db	26
   151   001DEE  01                 	db	1
   152                           
   153                           ;initializer for _led
   154   001DEF  22                 	db	34
   155                           
   156                           	psect	idataBANK0
   157   001E48                     __pidataBANK0:
   158                           	callstack 0
   159                           
   160                           ;initializer for _port_registers
   161   001E48  80                 	db	128
   162   001E49  0F                 	db	15
   163   001E4A  81                 	db	129
   164   001E4B  0F                 	db	15
   165   001E4C  82                 	db	130
   166   001E4D  0F                 	db	15
   167   001E4E  83                 	db	131
   168   001E4F  0F                 	db	15
   169   001E50  84                 	db	132
   170   001E51  0F                 	db	15
   171                           
   172                           	psect	smallconst
   173   001000                     __psmallconst:
   174                           	callstack 0
   175   001000  00                 	db	0
   176   001001                     _btn_values:
   177                           	callstack 0
   178   001001  37                 	db	55
   179   001002  38                 	db	56
   180   001003  39                 	db	57
   181   001004  2F                 	db	47
   182   001005  34                 	db	52
   183   001006  35                 	db	53
   184   001007  36                 	db	54
   185   001008  2A                 	db	42
   186   001009  31                 	db	49
   187   00100A  32                 	db	50
   188   00100B  33                 	db	51
   189   00100C  2D                 	db	45
   190   00100D  23                 	db	35
   191   00100E  30                 	db	48
   192   00100F  3D                 	db	61
   193   001010  2B                 	db	43
   194   001011                     __end_of_btn_values:
   195                           	callstack 0
   196   000000                     _EECON2	set	4007
   197   000000                     _PORTE	set	3972
   198   000000                     _PORTD	set	3971
   199   000000                     _PORTC	set	3970
   200   000000                     _PORTB	set	3969
   201   000000                     _PORTA	set	3968
   202   000000                     _LATA	set	3977
   203   000000                     _TRISA	set	3986
   204   000000                     _EECON1bits	set	4006
   205   000000                     _EEDATA	set	4008
   206   000000                     _EEADR	set	4009
   207   000000                     _EEADRH	set	4010
   208   000000                     _RCONbits	set	4048
   209   000000                     _INTCONbits	set	4082
   210   000000                     _TRISE	set	3990
   211   000000                     _TRISD	set	3989
   212   000000                     _TRISC	set	3988
   213   000000                     _TRISB	set	3987
   214   000000                     _LATE	set	3981
   215   000000                     _LATD	set	3980
   216   000000                     _LATC	set	3979
   217   000000                     _LATB	set	3978
   218   000000                     _INTCON3bits	set	4080
   219   000000                     _INTCON2bits	set	4081
   220   001011                     STR_1:
   221   001011  25                 	db	37
   222   001012  69                 	db	105	;'i'
   223   001013  00                 	db	0
   224   001014  00                 	db	0	; dummy byte at the end
   225   000000                     
   226                           ; #config settings
   227                           
   228                           	psect	cinit
   229   001B90                     __pcinit:
   230                           	callstack 0
   231   001B90                     start_initialization:
   232                           	callstack 0
   233   001B90                     __initialization:
   234                           	callstack 0
   235                           
   236                           ; Initialize objects allocated to BANK0 (10 bytes)
   237                           ; load TBLPTR registers with __pidataBANK0
   238   001B90  0E48               	movlw	low __pidataBANK0
   239   001B92  6EF6               	movwf	tblptrl,c
   240   001B94  0E1E               	movlw	high __pidataBANK0
   241   001B96  6EF7               	movwf	tblptrh,c
   242   001B98  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   243   001B9A  6EF8               	movwf	tblptru,c
   244   001B9C  EE00  F08F         	lfsr	0,__pdataBANK0
   245   001BA0  EE10 F00A          	lfsr	1,10
   246   001BA4                     copy_data0:
   247   001BA4  0009               	tblrd		*+
   248   001BA6  CFF5 FFEE          	movff	tablat,postinc0
   249   001BAA  50E5               	movf	postdec1,w,c
   250   001BAC  50E1               	movf	fsr1l,w,c
   251   001BAE  E1FA               	bnz	copy_data0
   252                           
   253                           ; Initialize objects allocated to COMRAM (42 bytes)
   254                           ; load TBLPTR registers with __pidataCOMRAM
   255   001BB0  0EC6               	movlw	low __pidataCOMRAM
   256   001BB2  6EF6               	movwf	tblptrl,c
   257   001BB4  0E1D               	movlw	high __pidataCOMRAM
   258   001BB6  6EF7               	movwf	tblptrh,c
   259   001BB8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   260   001BBA  6EF8               	movwf	tblptru,c
   261   001BBC  EE00  F001         	lfsr	0,__pdataCOMRAM
   262   001BC0  EE10 F02A          	lfsr	1,42
   263   001BC4                     copy_data1:
   264   001BC4  0009               	tblrd		*+
   265   001BC6  CFF5 FFEE          	movff	tablat,postinc0
   266   001BCA  50E5               	movf	postdec1,w,c
   267   001BCC  50E1               	movf	fsr1l,w,c
   268   001BCE  E1FA               	bnz	copy_data1
   269                           
   270                           ; Clear objects allocated to COMRAM (30 bytes)
   271   001BD0  EE00  F04C         	lfsr	0,__pbssCOMRAM
   272   001BD4  0E1E               	movlw	30
   273   001BD6                     clear_0:
   274   001BD6  6AEE               	clrf	postinc0,c
   275   001BD8  06E8               	decf	wreg,f,c
   276   001BDA  E1FD               	bnz	clear_0
   277   001BDC                     end_of_initialization:
   278                           	callstack 0
   279   001BDC                     __end_of__initialization:
   280                           	callstack 0
   281   001BDC  906A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   282   001BDE  926A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   283   001BE0  0100               	movlb	0
   284   001BE2  EFF3  F00D         	goto	_main	;jump to C main() function
   285                           
   286                           	psect	bssCOMRAM
   287   00004C                     __pbssCOMRAM:
   288                           	callstack 0
   289   00004C                     _RB7_Interrupt_Handler_Low:
   290                           	callstack 0
   291   00004C                     	ds	2
   292   00004E                     _RB7_Interrupt_Handler_High:
   293                           	callstack 0
   294   00004E                     	ds	2
   295   000050                     _RB6_Interrupt_Handler_Low:
   296                           	callstack 0
   297   000050                     	ds	2
   298   000052                     _RB6_Interrupt_Handler_High:
   299                           	callstack 0
   300   000052                     	ds	2
   301   000054                     _RB5_Interrupt_Handler_Low:
   302                           	callstack 0
   303   000054                     	ds	2
   304   000056                     _RB5_Interrupt_Handler_High:
   305                           	callstack 0
   306   000056                     	ds	2
   307   000058                     _RB4_Interrupt_Handler_Low:
   308                           	callstack 0
   309   000058                     	ds	2
   310   00005A                     _RB4_Interrupt_Handler_High:
   311                           	callstack 0
   312   00005A                     	ds	2
   313   00005C                     _INT2_Interrupt_Handler:
   314                           	callstack 0
   315   00005C                     	ds	2
   316   00005E                     _INT1_Interrupt_Handler:
   317                           	callstack 0
   318   00005E                     	ds	2
   319   000060                     _INT0_Interrupt_Handler:
   320                           	callstack 0
   321   000060                     	ds	2
   322   000062                     _timer:
   323                           	callstack 0
   324   000062                     	ds	1
   325   000063                     Relay_off@F3490:
   326                           	callstack 0
   327   000063                     	ds	1
   328   000064                     Relay_on@F3485:
   329                           	callstack 0
   330   000064                     	ds	1
   331   000065                     Relay_initialize@F3480:
   332                           	callstack 0
   333   000065                     	ds	1
   334   000066                     led_toggle_status@F3497:
   335                           	callstack 0
   336   000066                     	ds	1
   337   000067                     led_turn_off@F3492:
   338                           	callstack 0
   339   000067                     	ds	1
   340   000068                     led_turn_on@F3487:
   341                           	callstack 0
   342   000068                     	ds	1
   343   000069                     led_intialize@F3482:
   344                           	callstack 0
   345   000069                     	ds	1
   346                           
   347                           	psect	dataCOMRAM
   348   000001                     __pdataCOMRAM:
   349                           	callstack 0
   350   000001                     _lat_registers:
   351                           	callstack 0
   352   000001                     	ds	10
   353   00000B                     _tris_registers:
   354                           	callstack 0
   355   00000B                     	ds	10
   356   000015                     _ret:
   357                           	callstack 0
   358   000015                     	ds	1
   359   000016                     _RB7_f:
   360                           	callstack 0
   361   000016                     	ds	1
   362   000017                     _RB6_f:
   363                           	callstack 0
   364   000017                     	ds	1
   365   000018                     _RB5_f:
   366                           	callstack 0
   367   000018                     	ds	1
   368   000019                     _RB4_f:
   369                           	callstack 0
   370   000019                     	ds	1
   371   00001A                     _clock:
   372                           	callstack 0
   373   00001A                     	ds	6
   374   000020                     _segment:
   375                           	callstack 0
   376   000020                     	ds	5
   377   000025                     _segment_10:
   378                           	callstack 0
   379   000025                     	ds	5
   380   00002A                     _led:
   381                           	callstack 0
   382   00002A                     	ds	1
   383                           
   384                           	psect	dataBANK0
   385   00008F                     __pdataBANK0:
   386                           	callstack 0
   387   00008F                     _port_registers:
   388                           	callstack 0
   389   00008F                     	ds	10
   390                           
   391                           	psect	cstackBANK0
   392   000080                     __pcstackBANK0:
   393                           	callstack 0
   394   000080                     ?___awdiv:
   395                           	callstack 0
   396   000080                     ?___awmod:
   397                           	callstack 0
   398   000080                     gpio_pin_direction_intialize@_pin_config:
   399                           	callstack 0
   400   000080                     gpio_pin_write_logic@_pin_config:
   401                           	callstack 0
   402   000080                     Interrupt_INTx_Enable@obj:
   403                           	callstack 0
   404   000080                     Interrupt_INTx_Disable@obj:
   405                           	callstack 0
   406   000080                     Interrupt_INTx_Priority_Init@obj:
   407                           	callstack 0
   408   000080                     Interrupt_INTx_Edge_Init@obj:
   409                           	callstack 0
   410   000080                     INT0_Set_Interrupt_Handler@Interrupt_Handler:
   411                           	callstack 0
   412   000080                     INT1_Set_Interrupt_Handler@Interrupt_Handler:
   413                           	callstack 0
   414   000080                     INT2_Set_Interrupt_Handler@Interrupt_Handler:
   415                           	callstack 0
   416   000080                     ___awdiv@dividend:
   417                           	callstack 0
   418   000080                     ___awmod@dividend:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x0
   422   000080                     	ds	1
   423   000081                     ??_Interrupt_INTx_Disable:
   424   000081                     ??_Interrupt_INTx_Edge_Init:
   425   000081                     ??_Interrupt_INTx_Priority_Init:
   426   000081                     ??_Interrupt_INTx_Enable:
   427   000081                     ??_gpio_pin_direction_intialize:
   428   000081                     gpio_pin_write_logic@logic_:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x1
   432   000081                     	ds	1
   433   000082                     ??_gpio_pin_write_logic:
   434   000082                     INT0_Set_Interrupt_Handler@ret:
   435                           	callstack 0
   436   000082                     INT1_Set_Interrupt_Handler@ret:
   437                           	callstack 0
   438   000082                     INT2_Set_Interrupt_Handler@ret:
   439                           	callstack 0
   440   000082                     ___awdiv@divisor:
   441                           	callstack 0
   442   000082                     ___awmod@divisor:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x2
   446   000082                     	ds	1
   447   000083                     Interrupt_INTx_Enable@ret:
   448                           	callstack 0
   449   000083                     Interrupt_INTx_Disable@ret:
   450                           	callstack 0
   451   000083                     Interrupt_INTx_Priority_Init@ret:
   452                           	callstack 0
   453   000083                     Interrupt_INTx_Edge_Init@ret:
   454                           	callstack 0
   455   000083                     Interrupt_Set_Interrupt_Handler@obj:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x3
   459   000083                     	ds	1
   460   000084                     ??_Interrupt_Set_Interrupt_Handler:
   461   000084                     ___awdiv@counter:
   462                           	callstack 0
   463   000084                     ___awmod@counter:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x4
   467   000084                     	ds	1
   468   000085                     ___awdiv@sign:
   469                           	callstack 0
   470   000085                     ___awmod@sign:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x5
   474   000085                     	ds	1
   475   000086                     gpio_pin_direction_intialize@ret:
   476                           	callstack 0
   477   000086                     Interrupt_Set_Interrupt_Handler@ret:
   478                           	callstack 0
   479   000086                     ___awdiv@quotient:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x6
   483   000086                     	ds	1
   484   000087                     gpio_pin_write_logic@ret:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x7
   488   000087                     	ds	1
   489   000088                     Seven_Segm_Display_Number@_Seven_Seg:
   490                           	callstack 0
   491   000088                     gpio_pin_initialize@_pin_config:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x8
   495   000088                     	ds	1
   496   000089                     ??_gpio_pin_initialize:
   497   000089                     Seven_Segm_Display_Number@number:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x9
   501   000089                     	ds	1
   502   00008A                     Seven_Segm_Display_Number@ret:
   503                           	callstack 0
   504   00008A                     gpio_pin_initialize@ret:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0xA
   508   00008A                     	ds	1
   509   00008B                     led_intialize@Led:
   510                           	callstack 0
   511   00008B                     Seven_Segm_initailize@_Seven_Seg:
   512                           	callstack 0
   513   00008B                     Interrupt_INTx_Pin_Init@obj:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0xB
   517   00008B                     	ds	1
   518   00008C                     ??_led_intialize:
   519   00008C                     Seven_Segm_initailize@ret:
   520                           	callstack 0
   521   00008C                     Interrupt_INTx_Pin_Init@ret:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0xC
   525   00008C                     	ds	1
   526   00008D                     led_intialize@ret:
   527                           	callstack 0
   528   00008D                     Interrupt_INTx_Init@obj:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0xD
   532   00008D                     	ds	1
   533   00008E                     led_intialize@pin_obj:
   534                           	callstack 0
   535   00008E                     Interrupt_INTx_Init@ret:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0xE
   539   00008E                     	ds	1
   540   00008F                     
   541                           ; 1 bytes @ 0xF
   542                           
   543                           	psect	cstackCOMRAM
   544   00002B                     __pcstackCOMRAM:
   545                           	callstack 0
   546   00002B                     i2gpio_pin_toggle_logic@_pin_config:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x0
   550   00002B                     	ds	1
   551   00002C                     ??i2_gpio_pin_toggle_logic:
   552                           
   553                           ; 1 bytes @ 0x1
   554   00002C                     	ds	4
   555   000030                     i2led_toggle_status@Led:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x5
   559   000030                     	ds	1
   560   000031                     ??i2_led_toggle_status:
   561                           
   562                           ; 1 bytes @ 0x6
   563   000031                     	ds	1
   564   000032                     i2led_toggle_status@ret:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x7
   568   000032                     	ds	1
   569   000033                     i2led_toggle_status@pin_obj:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x8
   573   000033                     	ds	1
   574   000034                     ??_Interrupt_Manager_High:
   575   000034                     
   576                           ; 1 bytes @ 0x9
   577   000034                     	ds	6
   578   00003A                     gpio_pin_toggle_logic@_pin_config:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0xF
   582   00003A                     	ds	1
   583   00003B                     ??_gpio_pin_toggle_logic:
   584                           
   585                           ; 1 bytes @ 0x10
   586   00003B                     	ds	4
   587   00003F                     led_toggle_status@Led:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x14
   591   00003F                     	ds	1
   592   000040                     ??_led_toggle_status:
   593                           
   594                           ; 1 bytes @ 0x15
   595   000040                     	ds	1
   596   000041                     led_toggle_status@ret:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x16
   600   000041                     	ds	1
   601   000042                     led_toggle_status@pin_obj:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x17
   605   000042                     	ds	1
   606   000043                     ??_Interrupt_Manager_Low:
   607                           
   608                           ; 1 bytes @ 0x18
   609   000043                     	ds	9
   610                           
   611 ;;
   612 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   613 ;;
   614 ;; *************** function _main *****************
   615 ;; Defined at:
   616 ;;		line 24 in file "app.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  2  724[None  ] int 
   623 ;; Registers used:
   624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;Total ram usage:        0 bytes
   635 ;; Hardware stack levels required when called: 15
   636 ;; This function calls:
   637 ;;		_Application_initialize
   638 ;;		_Seven_Segm_Display_Number
   639 ;;		___awdiv
   640 ;;		___awmod
   641 ;; This function is called by:
   642 ;;		Startup code after reset
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text0
   647   001BE6                     __ptext0:
   648                           	callstack 0
   649   001BE6                     _main:
   650                           	callstack 16
   651   001BE6                     
   652                           ;app.c: 27:     Application_initialize();
   653   001BE6  EC14  F00F         	call	_Application_initialize	;wreg free
   654   001BEA                     l725:
   655                           
   656                           ;app.c: 29:         ret = Seven_Segm_Display_Number(&segment, timer/10);
   657   001BEA  0E20               	movlw	low _segment
   658   001BEC  0100               	movlb	0	; () banked
   659   001BEE  6F88               	movwf	Seven_Segm_Display_Number@_Seven_Seg& (0+255),b
   660   001BF0  C062  F080         	movff	_timer,___awdiv@dividend
   661   001BF4  6B81               	clrf	(___awdiv@dividend+1)& (0+255),b
   662   001BF6  0E00               	movlw	0
   663   001BF8  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
   664   001BFA  0E0A               	movlw	10
   665   001BFC  6F82               	movwf	___awdiv@divisor& (0+255),b
   666   001BFE  ECBB  F009         	call	___awdiv	;wreg free
   667   001C02  0100               	movlb	0	; () banked
   668   001C04  5180               	movf	?___awdiv& (0+255),w,b
   669   001C06  6F89               	movwf	Seven_Segm_Display_Number@number& (0+255),b
   670   001C08  EC79  F00B         	call	_Seven_Segm_Display_Number	;wreg free
   671   001C0C  6E15               	movwf	_ret^0,c
   672                           
   673                           ;app.c: 30:         ret = Seven_Segm_Display_Number(&segment_10, timer%10);
   674   001C0E  0E25               	movlw	low _segment_10
   675   001C10  0100               	movlb	0	; () banked
   676   001C12  6F88               	movwf	Seven_Segm_Display_Number@_Seven_Seg& (0+255),b
   677   001C14  C062  F080         	movff	_timer,___awmod@dividend
   678   001C18  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
   679   001C1A  0E00               	movlw	0
   680   001C1C  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
   681   001C1E  0E0A               	movlw	10
   682   001C20  6F82               	movwf	___awmod@divisor& (0+255),b
   683   001C22  EC7B  F00A         	call	___awmod	;wreg free
   684   001C26  0100               	movlb	0	; () banked
   685   001C28  5180               	movf	?___awmod& (0+255),w,b
   686   001C2A  6F89               	movwf	Seven_Segm_Display_Number@number& (0+255),b
   687   001C2C  EC79  F00B         	call	_Seven_Segm_Display_Number	;wreg free
   688   001C30  6E15               	movwf	_ret^0,c
   689   001C32  EFF5  F00D         	goto	l725
   690   001C36  EF43  F000         	goto	start
   691   001C3A                     __end_of_main:
   692                           	callstack 0
   693                           
   694 ;; *************** function ___awmod *****************
   695 ;; Defined at:
   696 ;;		line 7 in file "D:\IDE MCU\pic\sources\c99\common\awmod.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  dividend        2    0[BANK0 ] int 
   699 ;;  divisor         2    2[BANK0 ] int 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;  sign            1    5[BANK0 ] unsigned char 
   702 ;;  counter         1    4[BANK0 ] unsigned char 
   703 ;; Return value:  Size  Location     Type
   704 ;;                  2    0[BANK0 ] int 
   705 ;; Registers used:
   706 ;;		wreg, status,2, status,0
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   712 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   716 ;;Total ram usage:        6 bytes
   717 ;; Hardware stack levels used: 1
   718 ;; Hardware stack levels required when called: 10
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		_main
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text1
   727   0014F6                     __ptext1:
   728                           	callstack 0
   729   0014F6                     ___awmod:
   730                           	callstack 20
   731   0014F6  0E00               	movlw	0
   732   0014F8  0100               	movlb	0	; () banked
   733   0014FA  6F85               	movwf	___awmod@sign& (0+255),b
   734   0014FC                     
   735                           ; BSR set to: 0
   736   0014FC  BF81               	btfsc	(___awmod@dividend+1)& (0+255),7,b
   737   0014FE  EF85  F00A         	goto	u3530
   738   001502  EF83  F00A         	goto	u3531
   739   001506                     u3531:
   740   001506  EF8B  F00A         	goto	l4584
   741   00150A                     u3530:
   742   00150A                     
   743                           ; BSR set to: 0
   744   00150A  6D80               	negf	___awmod@dividend& (0+255),b
   745   00150C  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
   746   00150E  B0D8               	btfsc	status,0,c
   747   001510  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
   748   001512                     
   749                           ; BSR set to: 0
   750   001512  0E01               	movlw	1
   751   001514  6F85               	movwf	___awmod@sign& (0+255),b
   752   001516                     l4584:
   753                           
   754                           ; BSR set to: 0
   755   001516  BF83               	btfsc	(___awmod@divisor+1)& (0+255),7,b
   756   001518  EF92  F00A         	goto	u3540
   757   00151C  EF90  F00A         	goto	u3541
   758   001520                     u3541:
   759   001520  EF96  F00A         	goto	l4588
   760   001524                     u3540:
   761   001524                     
   762                           ; BSR set to: 0
   763   001524  6D82               	negf	___awmod@divisor& (0+255),b
   764   001526  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
   765   001528  B0D8               	btfsc	status,0,c
   766   00152A  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
   767   00152C                     l4588:
   768                           
   769                           ; BSR set to: 0
   770   00152C  5182               	movf	___awmod@divisor& (0+255),w,b
   771   00152E  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
   772   001530  B4D8               	btfsc	status,2,c
   773   001532  EF9D  F00A         	goto	u3551
   774   001536  EF9F  F00A         	goto	u3550
   775   00153A                     u3551:
   776   00153A  EFC3  F00A         	goto	l4604
   777   00153E                     u3550:
   778   00153E                     
   779                           ; BSR set to: 0
   780   00153E  0E01               	movlw	1
   781   001540  6F84               	movwf	___awmod@counter& (0+255),b
   782   001542  EFA7  F00A         	goto	l4594
   783   001546                     l4592:
   784                           
   785                           ; BSR set to: 0
   786   001546  90D8               	bcf	status,0,c
   787   001548  3782               	rlcf	___awmod@divisor& (0+255),f,b
   788   00154A  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
   789   00154C  2B84               	incf	___awmod@counter& (0+255),f,b
   790   00154E                     l4594:
   791                           
   792                           ; BSR set to: 0
   793   00154E  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
   794   001550  EFAC  F00A         	goto	u3561
   795   001554  EFAE  F00A         	goto	u3560
   796   001558                     u3561:
   797   001558  EFA3  F00A         	goto	l4592
   798   00155C                     u3560:
   799   00155C                     l4596:
   800                           
   801                           ; BSR set to: 0
   802   00155C  5182               	movf	___awmod@divisor& (0+255),w,b
   803   00155E  5D80               	subwf	___awmod@dividend& (0+255),w,b
   804   001560  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
   805   001562  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
   806   001564  A0D8               	btfss	status,0,c
   807   001566  EFB7  F00A         	goto	u3571
   808   00156A  EFB9  F00A         	goto	u3570
   809   00156E                     u3571:
   810   00156E  EFBD  F00A         	goto	l4600
   811   001572                     u3570:
   812   001572                     
   813                           ; BSR set to: 0
   814   001572  5182               	movf	___awmod@divisor& (0+255),w,b
   815   001574  5F80               	subwf	___awmod@dividend& (0+255),f,b
   816   001576  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
   817   001578  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
   818   00157A                     l4600:
   819                           
   820                           ; BSR set to: 0
   821   00157A  90D8               	bcf	status,0,c
   822   00157C  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
   823   00157E  3382               	rrcf	___awmod@divisor& (0+255),f,b
   824   001580                     
   825                           ; BSR set to: 0
   826   001580  2F84               	decfsz	___awmod@counter& (0+255),f,b
   827   001582  EFAE  F00A         	goto	l4596
   828   001586                     l4604:
   829                           
   830                           ; BSR set to: 0
   831   001586  5185               	movf	___awmod@sign& (0+255),w,b
   832   001588  B4D8               	btfsc	status,2,c
   833   00158A  EFC9  F00A         	goto	u3581
   834   00158E  EFCB  F00A         	goto	u3580
   835   001592                     u3581:
   836   001592  EFCF  F00A         	goto	l4608
   837   001596                     u3580:
   838   001596                     
   839                           ; BSR set to: 0
   840   001596  6D80               	negf	___awmod@dividend& (0+255),b
   841   001598  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
   842   00159A  B0D8               	btfsc	status,0,c
   843   00159C  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
   844   00159E                     l4608:
   845                           
   846                           ; BSR set to: 0
   847   00159E  C080  F080         	movff	___awmod@dividend,?___awmod
   848   0015A2  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
   849   0015A6                     
   850                           ; BSR set to: 0
   851   0015A6  0012               	return		;funcret
   852   0015A8                     __end_of___awmod:
   853                           	callstack 0
   854                           
   855 ;; *************** function ___awdiv *****************
   856 ;; Defined at:
   857 ;;		line 7 in file "D:\IDE MCU\pic\sources\c99\common\awdiv.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  dividend        2    0[BANK0 ] int 
   860 ;;  divisor         2    2[BANK0 ] int 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  quotient        2    6[BANK0 ] int 
   863 ;;  sign            1    5[BANK0 ] unsigned char 
   864 ;;  counter         1    4[BANK0 ] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  2    0[BANK0 ] int 
   867 ;; Registers used:
   868 ;;		wreg, status,2, status,0
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   874 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;Total ram usage:        8 bytes
   879 ;; Hardware stack levels used: 1
   880 ;; Hardware stack levels required when called: 10
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_main
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text2
   889   001376                     __ptext2:
   890                           	callstack 0
   891   001376                     ___awdiv:
   892                           	callstack 20
   893   001376  0E00               	movlw	0
   894   001378  0100               	movlb	0	; () banked
   895   00137A  6F85               	movwf	___awdiv@sign& (0+255),b
   896   00137C                     
   897                           ; BSR set to: 0
   898   00137C  BF83               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
   899   00137E  EFC5  F009         	goto	u3470
   900   001382  EFC3  F009         	goto	u3471
   901   001386                     u3471:
   902   001386  EFCB  F009         	goto	l4540
   903   00138A                     u3470:
   904   00138A                     
   905                           ; BSR set to: 0
   906   00138A  6D82               	negf	___awdiv@divisor& (0+255),b
   907   00138C  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
   908   00138E  B0D8               	btfsc	status,0,c
   909   001390  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
   910   001392                     
   911                           ; BSR set to: 0
   912   001392  0E01               	movlw	1
   913   001394  6F85               	movwf	___awdiv@sign& (0+255),b
   914   001396                     l4540:
   915                           
   916                           ; BSR set to: 0
   917   001396  BF81               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
   918   001398  EFD2  F009         	goto	u3480
   919   00139C  EFD0  F009         	goto	u3481
   920   0013A0                     u3481:
   921   0013A0  EFD8  F009         	goto	l4546
   922   0013A4                     u3480:
   923   0013A4                     
   924                           ; BSR set to: 0
   925   0013A4  6D80               	negf	___awdiv@dividend& (0+255),b
   926   0013A6  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
   927   0013A8  B0D8               	btfsc	status,0,c
   928   0013AA  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
   929   0013AC                     
   930                           ; BSR set to: 0
   931   0013AC  0E01               	movlw	1
   932   0013AE  1B85               	xorwf	___awdiv@sign& (0+255),f,b
   933   0013B0                     l4546:
   934                           
   935                           ; BSR set to: 0
   936   0013B0  0E00               	movlw	0
   937   0013B2  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
   938   0013B4  0E00               	movlw	0
   939   0013B6  6F86               	movwf	___awdiv@quotient& (0+255),b
   940   0013B8                     
   941                           ; BSR set to: 0
   942   0013B8  5182               	movf	___awdiv@divisor& (0+255),w,b
   943   0013BA  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
   944   0013BC  B4D8               	btfsc	status,2,c
   945   0013BE  EFE3  F009         	goto	u3491
   946   0013C2  EFE5  F009         	goto	u3490
   947   0013C6                     u3491:
   948   0013C6  EF0D  F00A         	goto	l4568
   949   0013CA                     u3490:
   950   0013CA                     
   951                           ; BSR set to: 0
   952   0013CA  0E01               	movlw	1
   953   0013CC  6F84               	movwf	___awdiv@counter& (0+255),b
   954   0013CE  EFED  F009         	goto	l4554
   955   0013D2                     l4552:
   956                           
   957                           ; BSR set to: 0
   958   0013D2  90D8               	bcf	status,0,c
   959   0013D4  3782               	rlcf	___awdiv@divisor& (0+255),f,b
   960   0013D6  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
   961   0013D8  2B84               	incf	___awdiv@counter& (0+255),f,b
   962   0013DA                     l4554:
   963                           
   964                           ; BSR set to: 0
   965   0013DA  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
   966   0013DC  EFF2  F009         	goto	u3501
   967   0013E0  EFF4  F009         	goto	u3500
   968   0013E4                     u3501:
   969   0013E4  EFE9  F009         	goto	l4552
   970   0013E8                     u3500:
   971   0013E8                     l4556:
   972                           
   973                           ; BSR set to: 0
   974   0013E8  90D8               	bcf	status,0,c
   975   0013EA  3786               	rlcf	___awdiv@quotient& (0+255),f,b
   976   0013EC  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
   977   0013EE                     
   978                           ; BSR set to: 0
   979   0013EE  5182               	movf	___awdiv@divisor& (0+255),w,b
   980   0013F0  5D80               	subwf	___awdiv@dividend& (0+255),w,b
   981   0013F2  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
   982   0013F4  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
   983   0013F6  A0D8               	btfss	status,0,c
   984   0013F8  EF00  F00A         	goto	u3511
   985   0013FC  EF02  F00A         	goto	u3510
   986   001400                     u3511:
   987   001400  EF07  F00A         	goto	l4564
   988   001404                     u3510:
   989   001404                     
   990                           ; BSR set to: 0
   991   001404  5182               	movf	___awdiv@divisor& (0+255),w,b
   992   001406  5F80               	subwf	___awdiv@dividend& (0+255),f,b
   993   001408  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
   994   00140A  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
   995   00140C                     
   996                           ; BSR set to: 0
   997   00140C  8186               	bsf	___awdiv@quotient& (0+255),0,b
   998   00140E                     l4564:
   999                           
  1000                           ; BSR set to: 0
  1001   00140E  90D8               	bcf	status,0,c
  1002   001410  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1003   001412  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  1004   001414                     
  1005                           ; BSR set to: 0
  1006   001414  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  1007   001416  EFF4  F009         	goto	l4556
  1008   00141A                     l4568:
  1009                           
  1010                           ; BSR set to: 0
  1011   00141A  5185               	movf	___awdiv@sign& (0+255),w,b
  1012   00141C  B4D8               	btfsc	status,2,c
  1013   00141E  EF13  F00A         	goto	u3521
  1014   001422  EF15  F00A         	goto	u3520
  1015   001426                     u3521:
  1016   001426  EF19  F00A         	goto	l4572
  1017   00142A                     u3520:
  1018   00142A                     
  1019                           ; BSR set to: 0
  1020   00142A  6D86               	negf	___awdiv@quotient& (0+255),b
  1021   00142C  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1022   00142E  B0D8               	btfsc	status,0,c
  1023   001430  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1024   001432                     l4572:
  1025                           
  1026                           ; BSR set to: 0
  1027   001432  C086  F080         	movff	___awdiv@quotient,?___awdiv
  1028   001436  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  1029   00143A                     
  1030                           ; BSR set to: 0
  1031   00143A  0012               	return		;funcret
  1032   00143C                     __end_of___awdiv:
  1033                           	callstack 0
  1034                           
  1035 ;; *************** function _Seven_Segm_Display_Number *****************
  1036 ;; Defined at:
  1037 ;;		line 51 in file "ECU_LAYER/Seven_Seg/Seven_Seg.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  _Seven_Seg      1    8[BANK0 ] PTR struct .
  1040 ;;		 -> segment(5), segment_10(5), 
  1041 ;;  number          1    9[BANK0 ] unsigned char 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  ret             1   10[BANK0 ] unsigned char 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      unsigned char 
  1046 ;; Registers used:
  1047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1053 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;Total ram usage:        3 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; Hardware stack levels required when called: 11
  1060 ;; This function calls:
  1061 ;;		_gpio_pin_write_logic
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text3
  1068   0016F2                     __ptext3:
  1069                           	callstack 0
  1070   0016F2                     _Seven_Segm_Display_Number:
  1071                           	callstack 19
  1072   0016F2                     
  1073                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 54:     if (((void*)0) == _Seven_Seg || (number < 0 ||
      +                           number > 9)) {
  1074   0016F2  0100               	movlb	0	; () banked
  1075   0016F4  5188               	movf	Seven_Segm_Display_Number@_Seven_Seg& (0+255),w,b
  1076   0016F6  B4D8               	btfsc	status,2,c
  1077   0016F8  EF80  F00B         	goto	u3451
  1078   0016FC  EF82  F00B         	goto	u3450
  1079   001700                     u3451:
  1080   001700  EF8A  F00B         	goto	l4522
  1081   001704                     u3450:
  1082   001704                     
  1083                           ; BSR set to: 0
  1084   001704  0E09               	movlw	9
  1085   001706  6589               	cpfsgt	Seven_Segm_Display_Number@number& (0+255),b
  1086   001708  EF88  F00B         	goto	u3461
  1087   00170C  EF8A  F00B         	goto	u3460
  1088   001710                     u3461:
  1089   001710  EF8E  F00B         	goto	l4524
  1090   001714                     u3460:
  1091   001714                     l4522:
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 55:         ret = (Std_ReturnType)0X00;
  1095   001714  0E00               	movlw	0
  1096   001716  6F8A               	movwf	Seven_Segm_Display_Number@ret& (0+255),b
  1097                           
  1098                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 56:     } else {
  1099   001718  EFB9  F00B         	goto	l4526
  1100   00171C                     l4524:
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 57:         ret = gpio_pin_write_logic(&_Seven_Seg->se
      +                          gment_pins[SEGMENT_PIN0], (number >> 0) & (uint8)1);
  1104   00171C  C088  F080         	movff	Seven_Segm_Display_Number@_Seven_Seg,gpio_pin_write_logic@_pin_config
  1105   001720  5189               	movf	Seven_Segm_Display_Number@number& (0+255),w,b
  1106   001722  0B01               	andlw	1
  1107   001724  6F81               	movwf	gpio_pin_write_logic@logic_& (0+255),b
  1108   001726  EC30  F009         	call	_gpio_pin_write_logic	;wreg free
  1109   00172A  0100               	movlb	0	; () banked
  1110   00172C  6F8A               	movwf	Seven_Segm_Display_Number@ret& (0+255),b
  1111                           
  1112                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 58:         ret = gpio_pin_write_logic(&_Seven_Seg->se
      +                          gment_pins[SEGMENT_PIN1], (number >> 1) & (uint8)1);
  1113   00172E  2988               	incf	Seven_Segm_Display_Number@_Seven_Seg& (0+255),w,b
  1114   001730  6F80               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  1115   001732  90D8               	bcf	status,0,c
  1116   001734  3189               	rrcf	Seven_Segm_Display_Number@number& (0+255),w,b
  1117   001736  0B01               	andlw	1
  1118   001738  6F81               	movwf	gpio_pin_write_logic@logic_& (0+255),b
  1119   00173A  EC30  F009         	call	_gpio_pin_write_logic	;wreg free
  1120   00173E  0100               	movlb	0	; () banked
  1121   001740  6F8A               	movwf	Seven_Segm_Display_Number@ret& (0+255),b
  1122                           
  1123                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 59:         ret = gpio_pin_write_logic(&_Seven_Seg->se
      +                          gment_pins[SEGMENT_PIN2], (number >> 2) & (uint8)1);
  1124   001742  5188               	movf	Seven_Segm_Display_Number@_Seven_Seg& (0+255),w,b
  1125   001744  0F02               	addlw	2
  1126   001746  6F80               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  1127   001748  4189               	rrncf	Seven_Segm_Display_Number@number& (0+255),w,b
  1128   00174A  42E8               	rrncf	wreg,f,c
  1129   00174C  0B3F               	andlw	63
  1130   00174E  0B01               	andlw	1
  1131   001750  6F81               	movwf	gpio_pin_write_logic@logic_& (0+255),b
  1132   001752  EC30  F009         	call	_gpio_pin_write_logic	;wreg free
  1133   001756  0100               	movlb	0	; () banked
  1134   001758  6F8A               	movwf	Seven_Segm_Display_Number@ret& (0+255),b
  1135                           
  1136                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 60:         ret = gpio_pin_write_logic(&_Seven_Seg->se
      +                          gment_pins[SEGMENT_PIN3], (number >> 3) & (uint8)1);
  1137   00175A  5188               	movf	Seven_Segm_Display_Number@_Seven_Seg& (0+255),w,b
  1138   00175C  0F03               	addlw	3
  1139   00175E  6F80               	movwf	gpio_pin_write_logic@_pin_config& (0+255),b
  1140   001760  3989               	swapf	Seven_Segm_Display_Number@number& (0+255),w,b
  1141   001762  46E8               	rlncf	wreg,f,c
  1142   001764  0B1F               	andlw	31
  1143   001766  0B01               	andlw	1
  1144   001768  6F81               	movwf	gpio_pin_write_logic@logic_& (0+255),b
  1145   00176A  EC30  F009         	call	_gpio_pin_write_logic	;wreg free
  1146   00176E  0100               	movlb	0	; () banked
  1147   001770  6F8A               	movwf	Seven_Segm_Display_Number@ret& (0+255),b
  1148   001772                     l4526:
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 63:     return ret;
  1152   001772  518A               	movf	Seven_Segm_Display_Number@ret& (0+255),w,b
  1153   001774                     
  1154                           ; BSR set to: 0
  1155   001774  0012               	return		;funcret
  1156   001776                     __end_of_Seven_Segm_Display_Number:
  1157                           	callstack 0
  1158                           
  1159 ;; *************** function _Application_initialize *****************
  1160 ;; Defined at:
  1161 ;;		line 37 in file "app.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;Total ram usage:        0 bytes
  1180 ;; Hardware stack levels used: 1
  1181 ;; Hardware stack levels required when called: 14
  1182 ;; This function calls:
  1183 ;;		_Interrupt_INTx_Init
  1184 ;;		_ecu_layer_initailize
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text4
  1191   001E28                     __ptext4:
  1192                           	callstack 0
  1193   001E28                     _Application_initialize:
  1194                           	callstack 16
  1195   001E28                     
  1196                           ;app.c: 38:     ecu_layer_initailize();
  1197   001E28  ECF8  F00E         	call	_ecu_layer_initailize	;wreg free
  1198                           
  1199                           ;app.c: 39:     ret = Interrupt_INTx_Init(&clock);
  1200   001E2C  0E1A               	movlw	low _clock
  1201   001E2E  0100               	movlb	0	; () banked
  1202   001E30  6F8D               	movwf	Interrupt_INTx_Init@obj& (0+255),b
  1203   001E32  EC61  F00D         	call	_Interrupt_INTx_Init	;wreg free
  1204   001E36  6E15               	movwf	_ret^0,c
  1205   001E38  0012               	return		;funcret
  1206   001E3A                     __end_of_Application_initialize:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _ecu_layer_initailize *****************
  1210 ;; Defined at:
  1211 ;;		line 64 in file "ECU_LAYER/ecu_layer_init.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  ret             1    0        unsigned char 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;Total ram usage:        0 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; Hardware stack levels required when called: 13
  1232 ;; This function calls:
  1233 ;;		_Seven_Segm_initailize
  1234 ;;		_led_intialize
  1235 ;; This function is called by:
  1236 ;;		_Application_initialize
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text5
  1241   001DF0                     __ptext5:
  1242                           	callstack 0
  1243   001DF0                     _ecu_layer_initailize:
  1244                           	callstack 16
  1245   001DF0  0E20               	movlw	low _segment
  1246   001DF2  0100               	movlb	0	; () banked
  1247   001DF4  6F8B               	movwf	Seven_Segm_initailize@_Seven_Seg& (0+255),b
  1248   001DF6  EC1D  F00E         	call	_Seven_Segm_initailize	;wreg free
  1249   001DFA  0E25               	movlw	low _segment_10
  1250   001DFC  0100               	movlb	0	; () banked
  1251   001DFE  6F8B               	movwf	Seven_Segm_initailize@_Seven_Seg& (0+255),b
  1252   001E00  EC1D  F00E         	call	_Seven_Segm_initailize	;wreg free
  1253   001E04  0E2A               	movlw	low _led
  1254   001E06  0100               	movlb	0	; () banked
  1255   001E08  6F8B               	movwf	led_intialize@Led& (0+255),b
  1256   001E0A  EC3D  F00C         	call	_led_intialize	;wreg free
  1257   001E0E  0012               	return		;funcret
  1258   001E10                     __end_of_ecu_layer_initailize:
  1259                           	callstack 0
  1260                           
  1261 ;; *************** function _led_intialize *****************
  1262 ;; Defined at:
  1263 ;;		line 12 in file "ECU_LAYER/Led/ecu_led.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  Led             1   11[BANK0 ] PTR const struct .
  1266 ;;		 -> led(1), 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  pin_obj         1   14[BANK0 ] struct .
  1269 ;;  ret             1   13[BANK0 ] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      unsigned char 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1279 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;Total ram usage:        4 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; Hardware stack levels required when called: 12
  1286 ;; This function calls:
  1287 ;;		_gpio_pin_initialize
  1288 ;; This function is called by:
  1289 ;;		_ecu_layer_initailize
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text6
  1294   00187A                     __ptext6:
  1295                           	callstack 0
  1296   00187A                     _led_intialize:
  1297                           	callstack 16
  1298   00187A                     
  1299                           ;ECU_LAYER/Led/ecu_led.c: 13:     Std_ReturnType ret = (Std_ReturnType)0X01;
  1300   00187A  0E01               	movlw	1
  1301   00187C  0100               	movlb	0	; () banked
  1302   00187E  6F8D               	movwf	led_intialize@ret& (0+255),b
  1303                           
  1304                           ;ECU_LAYER/Led/ecu_led.c: 14:     if (((void*)0) == Led) {
  1305   001880  518B               	movf	led_intialize@Led& (0+255),w,b
  1306   001882  A4D8               	btfss	status,2,c
  1307   001884  EF46  F00C         	goto	u3091
  1308   001888  EF48  F00C         	goto	u3090
  1309   00188C                     u3091:
  1310   00188C  EF4C  F00C         	goto	l251
  1311   001890                     u3090:
  1312   001890                     
  1313                           ; BSR set to: 0
  1314                           ;ECU_LAYER/Led/ecu_led.c: 15:         ret = (Std_ReturnType)0X00;
  1315   001890  0E00               	movlw	0
  1316   001892  6F8D               	movwf	led_intialize@ret& (0+255),b
  1317                           
  1318                           ;ECU_LAYER/Led/ecu_led.c: 16:     } else {
  1319   001894  EF77  F00C         	goto	l4156
  1320   001898                     l251:
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;ECU_LAYER/Led/ecu_led.c: 18:         pin_config_t pin_obj = {
  1324   001898  C069  F08E         	movff	led_intialize@F3482,led_intialize@pin_obj
  1325   00189C                     
  1326                           ; BSR set to: 0
  1327   00189C  518B               	movf	led_intialize@Led& (0+255),w,b
  1328   00189E  6ED9               	movwf	fsr2l,c
  1329   0018A0  6ADA               	clrf	fsr2h,c
  1330   0018A2  50DF               	movf	223,w,c
  1331   0018A4  0B07               	andlw	7
  1332   0018A6  6F8C               	movwf	??_led_intialize& (0+255),b
  1333   0018A8  518E               	movf	led_intialize@pin_obj& (0+255),w,b
  1334   0018AA  198C               	xorwf	??_led_intialize& (0+255),w,b
  1335   0018AC  0BF8               	andlw	-8
  1336   0018AE  198C               	xorwf	??_led_intialize& (0+255),w,b
  1337   0018B0  6F8E               	movwf	led_intialize@pin_obj& (0+255),b
  1338   0018B2  518B               	movf	led_intialize@Led& (0+255),w,b
  1339   0018B4  6ED9               	movwf	fsr2l,c
  1340   0018B6  6ADA               	clrf	fsr2h,c
  1341   0018B8  30DF               	rrcf	223,w,c
  1342   0018BA  32E8               	rrcf	wreg,f,c
  1343   0018BC  32E8               	rrcf	wreg,f,c
  1344   0018BE  0B07               	andlw	7
  1345   0018C0  6F8C               	movwf	??_led_intialize& (0+255),b
  1346   0018C2  478C               	rlncf	??_led_intialize& (0+255),f,b
  1347   0018C4  478C               	rlncf	??_led_intialize& (0+255),f,b
  1348   0018C6  478C               	rlncf	??_led_intialize& (0+255),f,b
  1349   0018C8  518E               	movf	led_intialize@pin_obj& (0+255),w,b
  1350   0018CA  198C               	xorwf	??_led_intialize& (0+255),w,b
  1351   0018CC  0BC7               	andlw	-57
  1352   0018CE  198C               	xorwf	??_led_intialize& (0+255),w,b
  1353   0018D0  6F8E               	movwf	led_intialize@pin_obj& (0+255),b
  1354   0018D2                     
  1355                           ; BSR set to: 0
  1356   0018D2  9D8E               	bcf	led_intialize@pin_obj& (0+255),6,b
  1357   0018D4                     
  1358                           ; BSR set to: 0
  1359   0018D4  518B               	movf	led_intialize@Led& (0+255),w,b
  1360   0018D6  6ED9               	movwf	fsr2l,c
  1361   0018D8  6ADA               	clrf	fsr2h,c
  1362   0018DA  ACDF               	btfss	indf2,6,c
  1363   0018DC  D002               	bra	u3105
  1364   0018DE  8F8E               	bsf	led_intialize@pin_obj& (0+255),7,b
  1365   0018E0  D002               	bra	u3107
  1366   0018E2                     u3105:
  1367   0018E2  0100               	movlb	0	; () banked
  1368   0018E4  9F8E               	bcf	led_intialize@pin_obj& (0+255),7,b
  1369   0018E6                     u3107:
  1370   0018E6                     
  1371                           ; BSR set to: 0
  1372                           ;ECU_LAYER/Led/ecu_led.c: 24:         gpio_pin_initialize(&pin_obj);
  1373   0018E6  0E8E               	movlw	low led_intialize@pin_obj
  1374   0018E8  6F88               	movwf	gpio_pin_initialize@_pin_config& (0+255),b
  1375   0018EA  EC96  F00D         	call	_gpio_pin_initialize	;wreg free
  1376   0018EE                     l4156:
  1377                           
  1378                           ;ECU_LAYER/Led/ecu_led.c: 26:     return ret;
  1379   0018EE  0100               	movlb	0	; () banked
  1380   0018F0  518D               	movf	led_intialize@ret& (0+255),w,b
  1381   0018F2                     
  1382                           ; BSR set to: 0
  1383   0018F2  0012               	return		;funcret
  1384   0018F4                     __end_of_led_intialize:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function _Seven_Segm_initailize *****************
  1388 ;; Defined at:
  1389 ;;		line 21 in file "ECU_LAYER/Seven_Seg/Seven_Seg.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  _Seven_Seg      1   11[BANK0 ] PTR struct .
  1392 ;;		 -> segment(5), segment_10(5), 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  ret             1   12[BANK0 ] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      unsigned char 
  1397 ;; Registers used:
  1398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1404 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;Total ram usage:        2 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; Hardware stack levels required when called: 12
  1411 ;; This function calls:
  1412 ;;		_gpio_pin_initialize
  1413 ;; This function is called by:
  1414 ;;		_ecu_layer_initailize
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text7
  1419   001C3A                     __ptext7:
  1420                           	callstack 0
  1421   001C3A                     _Seven_Segm_initailize:
  1422                           	callstack 16
  1423   001C3A                     
  1424                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 24:     if (((void*)0) == _Seven_Seg) {
  1425   001C3A  0100               	movlb	0	; () banked
  1426   001C3C  518B               	movf	Seven_Segm_initailize@_Seven_Seg& (0+255),w,b
  1427   001C3E  A4D8               	btfss	status,2,c
  1428   001C40  EF24  F00E         	goto	u3111
  1429   001C44  EF26  F00E         	goto	u3110
  1430   001C48                     u3111:
  1431   001C48  EF2A  F00E         	goto	l4164
  1432   001C4C                     u3110:
  1433   001C4C                     
  1434                           ; BSR set to: 0
  1435                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 25:         ret = (Std_ReturnType)0X00;
  1436   001C4C  0E00               	movlw	0
  1437   001C4E  6F8C               	movwf	Seven_Segm_initailize@ret& (0+255),b
  1438                           
  1439                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 26:     } else {
  1440   001C50  EF44  F00E         	goto	l4166
  1441   001C54                     l4164:
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 27:         ret = gpio_pin_initialize(&_Seven_Seg->seg
      +                          ment_pins[SEGMENT_PIN0]);
  1445   001C54  C08B  F088         	movff	Seven_Segm_initailize@_Seven_Seg,gpio_pin_initialize@_pin_config
  1446   001C58  EC96  F00D         	call	_gpio_pin_initialize	;wreg free
  1447   001C5C  0100               	movlb	0	; () banked
  1448   001C5E  6F8C               	movwf	Seven_Segm_initailize@ret& (0+255),b
  1449                           
  1450                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 28:         ret = gpio_pin_initialize(&_Seven_Seg->seg
      +                          ment_pins[SEGMENT_PIN1]);
  1451   001C60  298B               	incf	Seven_Segm_initailize@_Seven_Seg& (0+255),w,b
  1452   001C62  6F88               	movwf	gpio_pin_initialize@_pin_config& (0+255),b
  1453   001C64  EC96  F00D         	call	_gpio_pin_initialize	;wreg free
  1454   001C68  0100               	movlb	0	; () banked
  1455   001C6A  6F8C               	movwf	Seven_Segm_initailize@ret& (0+255),b
  1456                           
  1457                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 29:         ret = gpio_pin_initialize(&_Seven_Seg->seg
      +                          ment_pins[SEGMENT_PIN2]);
  1458   001C6C  518B               	movf	Seven_Segm_initailize@_Seven_Seg& (0+255),w,b
  1459   001C6E  0F02               	addlw	2
  1460   001C70  6F88               	movwf	gpio_pin_initialize@_pin_config& (0+255),b
  1461   001C72  EC96  F00D         	call	_gpio_pin_initialize	;wreg free
  1462   001C76  0100               	movlb	0	; () banked
  1463   001C78  6F8C               	movwf	Seven_Segm_initailize@ret& (0+255),b
  1464                           
  1465                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 30:         ret = gpio_pin_initialize(&_Seven_Seg->seg
      +                          ment_pins[SEGMENT_PIN3]);
  1466   001C7A  518B               	movf	Seven_Segm_initailize@_Seven_Seg& (0+255),w,b
  1467   001C7C  0F03               	addlw	3
  1468   001C7E  6F88               	movwf	gpio_pin_initialize@_pin_config& (0+255),b
  1469   001C80  EC96  F00D         	call	_gpio_pin_initialize	;wreg free
  1470   001C84  0100               	movlb	0	; () banked
  1471   001C86  6F8C               	movwf	Seven_Segm_initailize@ret& (0+255),b
  1472   001C88                     l4166:
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;ECU_LAYER/Seven_Seg/Seven_Seg.c: 33:     return ret;
  1476   001C88  518C               	movf	Seven_Segm_initailize@ret& (0+255),w,b
  1477   001C8A                     
  1478                           ; BSR set to: 0
  1479   001C8A  0012               	return		;funcret
  1480   001C8C                     __end_of_Seven_Segm_initailize:
  1481                           	callstack 0
  1482                           
  1483 ;; *************** function _Interrupt_INTx_Init *****************
  1484 ;; Defined at:
  1485 ;;		line 44 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  obj             1   13[BANK0 ] PTR const struct .
  1488 ;;		 -> clock(6), 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  ret             1   14[BANK0 ] unsigned char 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      unsigned char 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1500 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;Total ram usage:        2 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 13
  1507 ;; This function calls:
  1508 ;;		_Interrupt_INTx_Disable
  1509 ;;		_Interrupt_INTx_Edge_Init
  1510 ;;		_Interrupt_INTx_Enable
  1511 ;;		_Interrupt_INTx_Pin_Init
  1512 ;;		_Interrupt_INTx_Priority_Init
  1513 ;;		_Interrupt_Set_Interrupt_Handler
  1514 ;; This function is called by:
  1515 ;;		_Application_initialize
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text8
  1520   001AC2                     __ptext8:
  1521                           	callstack 0
  1522   001AC2                     _Interrupt_INTx_Init:
  1523                           	callstack 16
  1524   001AC2                     
  1525                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 45:     Std_ReturnType ret = (Std_Retur
      +                          nType)0X01;
  1526   001AC2  0E01               	movlw	1
  1527   001AC4  0100               	movlb	0	; () banked
  1528   001AC6  6F8E               	movwf	Interrupt_INTx_Init@ret& (0+255),b
  1529                           
  1530                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 46:     if (((void*)0) == obj) {
  1531   001AC8  518D               	movf	Interrupt_INTx_Init@obj& (0+255),w,b
  1532   001ACA  A4D8               	btfss	status,2,c
  1533   001ACC  EF6A  F00D         	goto	u3341
  1534   001AD0  EF6C  F00D         	goto	u3340
  1535   001AD4                     u3341:
  1536   001AD4  EF70  F00D         	goto	l4412
  1537   001AD8                     u3340:
  1538   001AD8                     
  1539                           ; BSR set to: 0
  1540                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 47:         ret = (Std_ReturnType)0X00;
  1541   001AD8  0E00               	movlw	0
  1542   001ADA  6F8E               	movwf	Interrupt_INTx_Init@ret& (0+255),b
  1543                           
  1544                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 48:     } else {
  1545   001ADC  EF94  F00D         	goto	l4420
  1546   001AE0                     l4412:
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 50:         ret |= Interrupt_INTx_Disab
      +                          le(obj);
  1550   001AE0  C08D  F080         	movff	Interrupt_INTx_Init@obj,Interrupt_INTx_Disable@obj
  1551   001AE4  EC29  F00D         	call	_Interrupt_INTx_Disable	;wreg free
  1552   001AE8  0100               	movlb	0	; () banked
  1553   001AEA  138E               	iorwf	Interrupt_INTx_Init@ret& (0+255),f,b
  1554                           
  1555                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 51:         ret |= Interrupt_INTx_Edge_
      +                          Init(obj);
  1556   001AEC  C08D  F080         	movff	Interrupt_INTx_Init@obj,Interrupt_INTx_Edge_Init@obj
  1557   001AF0  ECA1  F008         	call	_Interrupt_INTx_Edge_Init	;wreg free
  1558   001AF4  0100               	movlb	0	; () banked
  1559   001AF6  138E               	iorwf	Interrupt_INTx_Init@ret& (0+255),f,b
  1560                           
  1561                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 55:         ret |= Interrupt_INTx_Prior
      +                          ity_Init(obj);
  1562   001AF8  C08D  F080         	movff	Interrupt_INTx_Init@obj,Interrupt_INTx_Priority_Init@obj
  1563   001AFC  EC28  F00B         	call	_Interrupt_INTx_Priority_Init	;wreg free
  1564   001B00  0100               	movlb	0	; () banked
  1565   001B02  138E               	iorwf	Interrupt_INTx_Init@ret& (0+255),f,b
  1566   001B04                     
  1567                           ; BSR set to: 0
  1568                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 59:         ret |= Interrupt_INTx_Pin_I
      +                          nit(obj);
  1569   001B04  C08D  F08B         	movff	Interrupt_INTx_Init@obj,Interrupt_INTx_Pin_Init@obj
  1570   001B08  ECCD  F00E         	call	_Interrupt_INTx_Pin_Init	;wreg free
  1571   001B0C  0100               	movlb	0	; () banked
  1572   001B0E  138E               	iorwf	Interrupt_INTx_Init@ret& (0+255),f,b
  1573   001B10                     
  1574                           ; BSR set to: 0
  1575                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 60:         ret |= Interrupt_Set_Interr
      +                          upt_Handler(obj);
  1576   001B10  C08D  F083         	movff	Interrupt_INTx_Init@obj,Interrupt_Set_Interrupt_Handler@obj
  1577   001B14  ECD4  F00A         	call	_Interrupt_Set_Interrupt_Handler	;wreg free
  1578   001B18  0100               	movlb	0	; () banked
  1579   001B1A  138E               	iorwf	Interrupt_INTx_Init@ret& (0+255),f,b
  1580   001B1C                     
  1581                           ; BSR set to: 0
  1582                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 63:         ret |= Interrupt_INTx_Enabl
      +                          e(obj);
  1583   001B1C  C08D  F080         	movff	Interrupt_INTx_Init@obj,Interrupt_INTx_Enable@obj
  1584   001B20  EC1E  F00A         	call	_Interrupt_INTx_Enable	;wreg free
  1585   001B24  0100               	movlb	0	; () banked
  1586   001B26  138E               	iorwf	Interrupt_INTx_Init@ret& (0+255),f,b
  1587   001B28                     l4420:
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 65:     return ret;
  1591   001B28  518E               	movf	Interrupt_INTx_Init@ret& (0+255),w,b
  1592   001B2A                     
  1593                           ; BSR set to: 0
  1594   001B2A  0012               	return		;funcret
  1595   001B2C                     __end_of_Interrupt_INTx_Init:
  1596                           	callstack 0
  1597                           
  1598 ;; *************** function _Interrupt_Set_Interrupt_Handler *****************
  1599 ;; Defined at:
  1600 ;;		line 428 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  obj             1    3[BANK0 ] PTR const struct .
  1603 ;;		 -> clock(6), 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  ret             1    6[BANK0 ] unsigned char 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      unsigned char 
  1608 ;; Registers used:
  1609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1615 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;Total ram usage:        4 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; Hardware stack levels required when called: 11
  1622 ;; This function calls:
  1623 ;;		_INT0_Set_Interrupt_Handler
  1624 ;;		_INT1_Set_Interrupt_Handler
  1625 ;;		_INT2_Set_Interrupt_Handler
  1626 ;; This function is called by:
  1627 ;;		_Interrupt_INTx_Init
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text9
  1632   0015A8                     __ptext9:
  1633                           	callstack 0
  1634   0015A8                     _Interrupt_Set_Interrupt_Handler:
  1635                           	callstack 17
  1636   0015A8                     
  1637                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 430:     if (((void*)0) == obj) {
  1638   0015A8  0100               	movlb	0	; () banked
  1639   0015AA  5183               	movf	Interrupt_Set_Interrupt_Handler@obj& (0+255),w,b
  1640   0015AC  A4D8               	btfss	status,2,c
  1641   0015AE  EFDB  F00A         	goto	u3241
  1642   0015B2  EFDD  F00A         	goto	u3240
  1643   0015B6                     u3241:
  1644   0015B6  EF08  F00B         	goto	l4280
  1645   0015BA                     u3240:
  1646   0015BA                     l4268:
  1647                           
  1648                           ; BSR set to: 0
  1649                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 431:         ret = (Std_ReturnType)0X00
      +                          ;
  1650   0015BA  0E00               	movlw	0
  1651   0015BC  6F86               	movwf	Interrupt_Set_Interrupt_Handler@ret& (0+255),b
  1652                           
  1653                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 432:     } else {
  1654   0015BE  EF26  F00B         	goto	l4282
  1655   0015C2                     l4270:
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 436:                 ret = INT0_Set_Int
      +                          errupt_Handler(obj->External_CallBack);
  1659   0015C2  5183               	movf	Interrupt_Set_Interrupt_Handler@obj& (0+255),w,b
  1660   0015C4  6ED9               	movwf	fsr2l,c
  1661   0015C6  6ADA               	clrf	fsr2h,c
  1662   0015C8  CFDE F080          	movff	postinc2,INT0_Set_Interrupt_Handler@Interrupt_Handler
  1663   0015CC  CFDD F081          	movff	postdec2,INT0_Set_Interrupt_Handler@Interrupt_Handler+1
  1664   0015D0  ECB7  F00E         	call	_INT0_Set_Interrupt_Handler	;wreg free
  1665   0015D4  0100               	movlb	0	; () banked
  1666   0015D6  6F86               	movwf	Interrupt_Set_Interrupt_Handler@ret& (0+255),b
  1667                           
  1668                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 437:                 break;
  1669   0015D8  EF26  F00B         	goto	l4282
  1670   0015DC                     l4272:
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 439:                 ret = INT1_Set_Int
      +                          errupt_Handler(obj->External_CallBack);
  1674   0015DC  5183               	movf	Interrupt_Set_Interrupt_Handler@obj& (0+255),w,b
  1675   0015DE  6ED9               	movwf	fsr2l,c
  1676   0015E0  6ADA               	clrf	fsr2h,c
  1677   0015E2  CFDE F080          	movff	postinc2,INT1_Set_Interrupt_Handler@Interrupt_Handler
  1678   0015E6  CFDD F081          	movff	postdec2,INT1_Set_Interrupt_Handler@Interrupt_Handler+1
  1679   0015EA  ECA1  F00E         	call	_INT1_Set_Interrupt_Handler	;wreg free
  1680   0015EE  0100               	movlb	0	; () banked
  1681   0015F0  6F86               	movwf	Interrupt_Set_Interrupt_Handler@ret& (0+255),b
  1682                           
  1683                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 440:                 break;
  1684   0015F2  EF26  F00B         	goto	l4282
  1685   0015F6                     l4274:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 442:                 ret = INT2_Set_Int
      +                          errupt_Handler(obj->External_CallBack);
  1689   0015F6  5183               	movf	Interrupt_Set_Interrupt_Handler@obj& (0+255),w,b
  1690   0015F8  6ED9               	movwf	fsr2l,c
  1691   0015FA  6ADA               	clrf	fsr2h,c
  1692   0015FC  CFDE F080          	movff	postinc2,INT2_Set_Interrupt_Handler@Interrupt_Handler
  1693   001600  CFDD F081          	movff	postdec2,INT2_Set_Interrupt_Handler@Interrupt_Handler+1
  1694   001604  EC8B  F00E         	call	_INT2_Set_Interrupt_Handler	;wreg free
  1695   001608  0100               	movlb	0	; () banked
  1696   00160A  6F86               	movwf	Interrupt_Set_Interrupt_Handler@ret& (0+255),b
  1697                           
  1698                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 443:                 break;
  1699   00160C  EF26  F00B         	goto	l4282
  1700   001610                     l4280:
  1701                           
  1702                           ; BSR set to: 0
  1703   001610  5183               	movf	Interrupt_Set_Interrupt_Handler@obj& (0+255),w,b
  1704   001612  6ED9               	movwf	fsr2l,c
  1705   001614  6ADA               	clrf	fsr2h,c
  1706   001616  0E03               	movlw	3
  1707   001618  26D9               	addwf	fsr2l,f,c
  1708   00161A  50DF               	movf	indf2,w,c
  1709   00161C  6F84               	movwf	??_Interrupt_Set_Interrupt_Handler& (0+255),b
  1710   00161E  6B85               	clrf	(??_Interrupt_Set_Interrupt_Handler+1)& (0+255),b
  1711                           
  1712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1713                           ; Switch size 1, requested type "simple"
  1714                           ; Number of cases is 1, Range of values is 0 to 0
  1715                           ; switch strategies available:
  1716                           ; Name         Instructions Cycles
  1717                           ; simple_byte            4     3 (average)
  1718                           ;	Chosen strategy is simple_byte
  1719   001620  5185               	movf	(??_Interrupt_Set_Interrupt_Handler+1)& (0+255),w,b
  1720   001622  0A00               	xorlw	0	; case 0
  1721   001624  B4D8               	btfsc	status,2,c
  1722   001626  EF17  F00B         	goto	l5240
  1723   00162A  EFDD  F00A         	goto	l4268
  1724   00162E                     l5240:
  1725                           
  1726                           ; BSR set to: 0
  1727                           ; Switch size 1, requested type "simple"
  1728                           ; Number of cases is 3, Range of values is 0 to 2
  1729                           ; switch strategies available:
  1730                           ; Name         Instructions Cycles
  1731                           ; simple_byte           10     6 (average)
  1732                           ;	Chosen strategy is simple_byte
  1733   00162E  5184               	movf	??_Interrupt_Set_Interrupt_Handler& (0+255),w,b
  1734   001630  0A00               	xorlw	0	; case 0
  1735   001632  B4D8               	btfsc	status,2,c
  1736   001634  EFE1  F00A         	goto	l4270
  1737   001638  0A01               	xorlw	1	; case 1
  1738   00163A  B4D8               	btfsc	status,2,c
  1739   00163C  EFEE  F00A         	goto	l4272
  1740   001640  0A03               	xorlw	3	; case 2
  1741   001642  B4D8               	btfsc	status,2,c
  1742   001644  EFFB  F00A         	goto	l4274
  1743   001648  EFDD  F00A         	goto	l4268
  1744   00164C                     l4282:
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 449:     return ret;
  1748   00164C  5186               	movf	Interrupt_Set_Interrupt_Handler@ret& (0+255),w,b
  1749   00164E                     
  1750                           ; BSR set to: 0
  1751   00164E  0012               	return		;funcret
  1752   001650                     __end_of_Interrupt_Set_Interrupt_Handler:
  1753                           	callstack 0
  1754                           
  1755 ;; *************** function _INT2_Set_Interrupt_Handler *****************
  1756 ;; Defined at:
  1757 ;;		line 411 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  Interrupt_Ha    2    0[BANK0 ] PTR FTN()void 
  1760 ;;		 -> i2_timer_increment(1), timer_increment(1), 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  ret             1    2[BANK0 ] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      unsigned char 
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, status,0
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;Total ram usage:        3 bytes
  1777 ;; Hardware stack levels used: 1
  1778 ;; Hardware stack levels required when called: 10
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_Interrupt_Set_Interrupt_Handler
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text10
  1787   001D16                     __ptext10:
  1788                           	callstack 0
  1789   001D16                     _INT2_Set_Interrupt_Handler:
  1790                           	callstack 17
  1791   001D16                     
  1792                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 412:     Std_ReturnType ret = (Std_Retu
      +                          rnType)0X01;
  1793   001D16  0E01               	movlw	1
  1794   001D18  0100               	movlb	0	; () banked
  1795   001D1A  6F82               	movwf	INT2_Set_Interrupt_Handler@ret& (0+255),b
  1796   001D1C                     
  1797                           ; BSR set to: 0
  1798                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 413:     if (((void*)0) == Interrupt_Ha
      +                          ndler) {
  1799   001D1C  5180               	movf	INT2_Set_Interrupt_Handler@Interrupt_Handler& (0+255),w,b
  1800   001D1E  1181               	iorwf	(INT2_Set_Interrupt_Handler@Interrupt_Handler+1)& (0+255),w,b
  1801   001D20  A4D8               	btfss	status,2,c
  1802   001D22  EF95  F00E         	goto	u3081
  1803   001D26  EF97  F00E         	goto	u3080
  1804   001D2A                     u3081:
  1805   001D2A  EF9B  F00E         	goto	l4138
  1806   001D2E                     u3080:
  1807   001D2E                     
  1808                           ; BSR set to: 0
  1809                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 414:         ret = (Std_ReturnType)0X00
      +                          ;
  1810   001D2E  0E00               	movlw	0
  1811   001D30  6F82               	movwf	INT2_Set_Interrupt_Handler@ret& (0+255),b
  1812                           
  1813                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 415:     } else {
  1814   001D32  EF9F  F00E         	goto	l4140
  1815   001D36                     l4138:
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 417:         INT2_Interrupt_Handler = I
      +                          nterrupt_Handler;
  1819   001D36  C080  F05C         	movff	INT2_Set_Interrupt_Handler@Interrupt_Handler,_INT2_Interrupt_Handler
  1820   001D3A  C081  F05D         	movff	INT2_Set_Interrupt_Handler@Interrupt_Handler+1,_INT2_Interrupt_Handler+1
  1821   001D3E                     l4140:
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 419:     return ret;
  1825   001D3E  5182               	movf	INT2_Set_Interrupt_Handler@ret& (0+255),w,b
  1826   001D40                     
  1827                           ; BSR set to: 0
  1828   001D40  0012               	return		;funcret
  1829   001D42                     __end_of_INT2_Set_Interrupt_Handler:
  1830                           	callstack 0
  1831                           
  1832 ;; *************** function _INT1_Set_Interrupt_Handler *****************
  1833 ;; Defined at:
  1834 ;;		line 394 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  Interrupt_Ha    2    0[BANK0 ] PTR FTN()void 
  1837 ;;		 -> i2_timer_increment(1), timer_increment(1), 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  ret             1    2[BANK0 ] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      unsigned char 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1849 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;Total ram usage:        3 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; Hardware stack levels required when called: 10
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_Interrupt_Set_Interrupt_Handler
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text11
  1864   001D42                     __ptext11:
  1865                           	callstack 0
  1866   001D42                     _INT1_Set_Interrupt_Handler:
  1867                           	callstack 17
  1868   001D42                     
  1869                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 395:     Std_ReturnType ret = (Std_Retu
      +                          rnType)0X01;
  1870   001D42  0E01               	movlw	1
  1871   001D44  0100               	movlb	0	; () banked
  1872   001D46  6F82               	movwf	INT1_Set_Interrupt_Handler@ret& (0+255),b
  1873   001D48                     
  1874                           ; BSR set to: 0
  1875                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 396:     if (((void*)0) == Interrupt_Ha
      +                          ndler) {
  1876   001D48  5180               	movf	INT1_Set_Interrupt_Handler@Interrupt_Handler& (0+255),w,b
  1877   001D4A  1181               	iorwf	(INT1_Set_Interrupt_Handler@Interrupt_Handler+1)& (0+255),w,b
  1878   001D4C  A4D8               	btfss	status,2,c
  1879   001D4E  EFAB  F00E         	goto	u3071
  1880   001D52  EFAD  F00E         	goto	u3070
  1881   001D56                     u3071:
  1882   001D56  EFB1  F00E         	goto	l4126
  1883   001D5A                     u3070:
  1884   001D5A                     
  1885                           ; BSR set to: 0
  1886                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 397:         ret = (Std_ReturnType)0X00
      +                          ;
  1887   001D5A  0E00               	movlw	0
  1888   001D5C  6F82               	movwf	INT1_Set_Interrupt_Handler@ret& (0+255),b
  1889                           
  1890                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 398:     } else {
  1891   001D5E  EFB5  F00E         	goto	l4128
  1892   001D62                     l4126:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 400:         INT1_Interrupt_Handler = I
      +                          nterrupt_Handler;
  1896   001D62  C080  F05E         	movff	INT1_Set_Interrupt_Handler@Interrupt_Handler,_INT1_Interrupt_Handler
  1897   001D66  C081  F05F         	movff	INT1_Set_Interrupt_Handler@Interrupt_Handler+1,_INT1_Interrupt_Handler+1
  1898   001D6A                     l4128:
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 402:     return ret;
  1902   001D6A  5182               	movf	INT1_Set_Interrupt_Handler@ret& (0+255),w,b
  1903   001D6C                     
  1904                           ; BSR set to: 0
  1905   001D6C  0012               	return		;funcret
  1906   001D6E                     __end_of_INT1_Set_Interrupt_Handler:
  1907                           	callstack 0
  1908                           
  1909 ;; *************** function _INT0_Set_Interrupt_Handler *****************
  1910 ;; Defined at:
  1911 ;;		line 377 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  Interrupt_Ha    2    0[BANK0 ] PTR FTN()void 
  1914 ;;		 -> i2_timer_increment(1), timer_increment(1), 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;  ret             1    2[BANK0 ] unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      unsigned char 
  1919 ;; Registers used:
  1920 ;;		wreg, status,2, status,0
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1926 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;Total ram usage:        3 bytes
  1931 ;; Hardware stack levels used: 1
  1932 ;; Hardware stack levels required when called: 10
  1933 ;; This function calls:
  1934 ;;		Nothing
  1935 ;; This function is called by:
  1936 ;;		_Interrupt_Set_Interrupt_Handler
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text12
  1941   001D6E                     __ptext12:
  1942                           	callstack 0
  1943   001D6E                     _INT0_Set_Interrupt_Handler:
  1944                           	callstack 17
  1945   001D6E                     
  1946                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 378:     Std_ReturnType ret = (Std_Retu
      +                          rnType)0X01;
  1947   001D6E  0E01               	movlw	1
  1948   001D70  0100               	movlb	0	; () banked
  1949   001D72  6F82               	movwf	INT0_Set_Interrupt_Handler@ret& (0+255),b
  1950   001D74                     
  1951                           ; BSR set to: 0
  1952                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 379:     if (((void*)0) == Interrupt_Ha
      +                          ndler) {
  1953   001D74  5180               	movf	INT0_Set_Interrupt_Handler@Interrupt_Handler& (0+255),w,b
  1954   001D76  1181               	iorwf	(INT0_Set_Interrupt_Handler@Interrupt_Handler+1)& (0+255),w,b
  1955   001D78  A4D8               	btfss	status,2,c
  1956   001D7A  EFC1  F00E         	goto	u3061
  1957   001D7E  EFC3  F00E         	goto	u3060
  1958   001D82                     u3061:
  1959   001D82  EFC7  F00E         	goto	l4114
  1960   001D86                     u3060:
  1961   001D86                     
  1962                           ; BSR set to: 0
  1963                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 380:         ret = (Std_ReturnType)0X00
      +                          ;
  1964   001D86  0E00               	movlw	0
  1965   001D88  6F82               	movwf	INT0_Set_Interrupt_Handler@ret& (0+255),b
  1966                           
  1967                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 381:     } else {
  1968   001D8A  EFCB  F00E         	goto	l4116
  1969   001D8E                     l4114:
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 383:         INT0_Interrupt_Handler = I
      +                          nterrupt_Handler;
  1973   001D8E  C080  F060         	movff	INT0_Set_Interrupt_Handler@Interrupt_Handler,_INT0_Interrupt_Handler
  1974   001D92  C081  F061         	movff	INT0_Set_Interrupt_Handler@Interrupt_Handler+1,_INT0_Interrupt_Handler+1
  1975   001D96                     l4116:
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 385:     return ret;
  1979   001D96  5182               	movf	INT0_Set_Interrupt_Handler@ret& (0+255),w,b
  1980   001D98                     
  1981                           ; BSR set to: 0
  1982   001D98  0012               	return		;funcret
  1983   001D9A                     __end_of_INT0_Set_Interrupt_Handler:
  1984                           	callstack 0
  1985                           
  1986 ;; *************** function _Interrupt_INTx_Priority_Init *****************
  1987 ;; Defined at:
  1988 ;;		line 251 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  obj             1    0[BANK0 ] PTR const struct .
  1991 ;;		 -> clock(6), 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  ret             1    3[BANK0 ] unsigned char 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      unsigned char 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2003 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;Total ram usage:        4 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 10
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_Interrupt_INTx_Init
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text13
  2018   001650                     __ptext13:
  2019                           	callstack 0
  2020   001650                     _Interrupt_INTx_Priority_Init:
  2021                           	callstack 18
  2022   001650                     
  2023                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 252:     Std_ReturnType ret = (Std_Retu
      +                          rnType)0X01;
  2024   001650  0E01               	movlw	1
  2025   001652  0100               	movlb	0	; () banked
  2026   001654  6F83               	movwf	Interrupt_INTx_Priority_Init@ret& (0+255),b
  2027                           
  2028                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 254:     if (((void*)0) == obj) {
  2029   001656  5180               	movf	Interrupt_INTx_Priority_Init@obj& (0+255),w,b
  2030   001658  A4D8               	btfss	status,2,c
  2031   00165A  EF31  F00B         	goto	u3201
  2032   00165E  EF33  F00B         	goto	u3200
  2033   001662                     u3201:
  2034   001662  EF5D  F00B         	goto	l4246
  2035   001666                     u3200:
  2036   001666                     l4234:
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 255:         ret = (Std_ReturnType)0X00
      +                          ;
  2040   001666  0E00               	movlw	0
  2041   001668  6F83               	movwf	Interrupt_INTx_Priority_Init@ret& (0+255),b
  2042                           
  2043                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 256:     } else {
  2044   00166A  EF77  F00B         	goto	l4248
  2045   00166E                     l4236:
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 261:                 if (obj->Source ==
      +                           INTERRUPT_EXTERNAL_INT1) {
  2049   00166E  5180               	movf	Interrupt_INTx_Priority_Init@obj& (0+255),w,b
  2050   001670  6ED9               	movwf	fsr2l,c
  2051   001672  6ADA               	clrf	fsr2h,c
  2052   001674  0E03               	movlw	3
  2053   001676  26D9               	addwf	fsr2l,f,c
  2054   001678  04DE               	decf	postinc2,w,c
  2055   00167A  A4D8               	btfss	status,2,c
  2056   00167C  EF42  F00B         	goto	u3211
  2057   001680  EF44  F00B         	goto	u3210
  2058   001684                     u3211:
  2059   001684  EF47  F00B         	goto	l552
  2060   001688                     u3210:
  2061   001688                     
  2062                           ; BSR set to: 0
  2063                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 262:                     (INTCON3bits.I
      +                          NT1IP = 1);
  2064   001688  8CF0               	bsf	240,6,c	;volatile
  2065                           
  2066                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 263:                 } else {
  2067   00168A  EF77  F00B         	goto	l4248
  2068   00168E                     l552:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 264:                     (INTCON3bits.I
      +                          NT2IP = 1);
  2072   00168E  8EF0               	bsf	240,7,c	;volatile
  2073   001690  EF77  F00B         	goto	l4248
  2074   001694                     l4240:
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 269:                 if (obj->Source ==
      +                           INTERRUPT_EXTERNAL_INT1) {
  2078   001694  5180               	movf	Interrupt_INTx_Priority_Init@obj& (0+255),w,b
  2079   001696  6ED9               	movwf	fsr2l,c
  2080   001698  6ADA               	clrf	fsr2h,c
  2081   00169A  0E03               	movlw	3
  2082   00169C  26D9               	addwf	fsr2l,f,c
  2083   00169E  04DE               	decf	postinc2,w,c
  2084   0016A0  A4D8               	btfss	status,2,c
  2085   0016A2  EF55  F00B         	goto	u3221
  2086   0016A6  EF57  F00B         	goto	u3220
  2087   0016AA                     u3221:
  2088   0016AA  EF5A  F00B         	goto	l556
  2089   0016AE                     u3220:
  2090   0016AE                     
  2091                           ; BSR set to: 0
  2092                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 270:                     (INTCON3bits.I
      +                          NT1IP = 0);
  2093   0016AE  9CF0               	bcf	240,6,c	;volatile
  2094                           
  2095                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 271:                 } else {
  2096   0016B0  EF77  F00B         	goto	l4248
  2097   0016B4                     l556:
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 272:                     (INTCON3bits.I
      +                          NT2IP = 0);
  2101   0016B4  9EF0               	bcf	240,7,c	;volatile
  2102   0016B6  EF77  F00B         	goto	l4248
  2103   0016BA                     l4246:
  2104                           
  2105                           ; BSR set to: 0
  2106   0016BA  5180               	movf	Interrupt_INTx_Priority_Init@obj& (0+255),w,b
  2107   0016BC  6ED9               	movwf	fsr2l,c
  2108   0016BE  6ADA               	clrf	fsr2h,c
  2109   0016C0  0E04               	movlw	4
  2110   0016C2  26D9               	addwf	fsr2l,f,c
  2111   0016C4  50DF               	movf	indf2,w,c
  2112   0016C6  6F81               	movwf	??_Interrupt_INTx_Priority_Init& (0+255),b
  2113   0016C8  6B82               	clrf	(??_Interrupt_INTx_Priority_Init+1)& (0+255),b
  2114                           
  2115                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2116                           ; Switch size 1, requested type "simple"
  2117                           ; Number of cases is 1, Range of values is 0 to 0
  2118                           ; switch strategies available:
  2119                           ; Name         Instructions Cycles
  2120                           ; simple_byte            4     3 (average)
  2121                           ;	Chosen strategy is simple_byte
  2122   0016CA  5182               	movf	(??_Interrupt_INTx_Priority_Init+1)& (0+255),w,b
  2123   0016CC  0A00               	xorlw	0	; case 0
  2124   0016CE  B4D8               	btfsc	status,2,c
  2125   0016D0  EF6C  F00B         	goto	l5242
  2126   0016D4  EF33  F00B         	goto	l4234
  2127   0016D8                     l5242:
  2128                           
  2129                           ; BSR set to: 0
  2130                           ; Switch size 1, requested type "simple"
  2131                           ; Number of cases is 2, Range of values is 0 to 1
  2132                           ; switch strategies available:
  2133                           ; Name         Instructions Cycles
  2134                           ; simple_byte            7     4 (average)
  2135                           ;	Chosen strategy is simple_byte
  2136   0016D8  5181               	movf	??_Interrupt_INTx_Priority_Init& (0+255),w,b
  2137   0016DA  0A00               	xorlw	0	; case 0
  2138   0016DC  B4D8               	btfsc	status,2,c
  2139   0016DE  EF4A  F00B         	goto	l4240
  2140   0016E2  0A01               	xorlw	1	; case 1
  2141   0016E4  B4D8               	btfsc	status,2,c
  2142   0016E6  EF37  F00B         	goto	l4236
  2143   0016EA  EF33  F00B         	goto	l4234
  2144   0016EE                     l4248:
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 280:     return ret;
  2148   0016EE  5183               	movf	Interrupt_INTx_Priority_Init@ret& (0+255),w,b
  2149   0016F0                     
  2150                           ; BSR set to: 0
  2151   0016F0  0012               	return		;funcret
  2152   0016F2                     __end_of_Interrupt_INTx_Priority_Init:
  2153                           	callstack 0
  2154                           
  2155 ;; *************** function _Interrupt_INTx_Pin_Init *****************
  2156 ;; Defined at:
  2157 ;;		line 331 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  obj             1   11[BANK0 ] PTR const struct .
  2160 ;;		 -> clock(6), 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  ret             1   12[BANK0 ] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      unsigned char 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2172 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;Total ram usage:        2 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 12
  2179 ;; This function calls:
  2180 ;;		_gpio_pin_initialize
  2181 ;; This function is called by:
  2182 ;;		_Interrupt_INTx_Init
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text14
  2187   001D9A                     __ptext14:
  2188                           	callstack 0
  2189   001D9A                     _Interrupt_INTx_Pin_Init:
  2190                           	callstack 16
  2191   001D9A                     
  2192                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 333:     if (((void*)0) == obj) {
  2193   001D9A  0100               	movlb	0	; () banked
  2194   001D9C  518B               	movf	Interrupt_INTx_Pin_Init@obj& (0+255),w,b
  2195   001D9E  A4D8               	btfss	status,2,c
  2196   001DA0  EFD4  F00E         	goto	u3231
  2197   001DA4  EFD6  F00E         	goto	u3230
  2198   001DA8                     u3231:
  2199   001DA8  EFDA  F00E         	goto	l4260
  2200   001DAC                     u3230:
  2201   001DAC                     
  2202                           ; BSR set to: 0
  2203                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 334:         ret = (Std_ReturnType)0X00
      +                          ;
  2204   001DAC  0E00               	movlw	0
  2205   001DAE  6F8C               	movwf	Interrupt_INTx_Pin_Init@ret& (0+255),b
  2206                           
  2207                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 335:     } else {
  2208   001DB0  EFE1  F00E         	goto	l4262
  2209   001DB4                     l4260:
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 337:         ret = gpio_pin_initialize(
      +                          &(obj->mcu_pin));
  2213   001DB4  518B               	movf	Interrupt_INTx_Pin_Init@obj& (0+255),w,b
  2214   001DB6  0F05               	addlw	5
  2215   001DB8  6F88               	movwf	gpio_pin_initialize@_pin_config& (0+255),b
  2216   001DBA  EC96  F00D         	call	_gpio_pin_initialize	;wreg free
  2217   001DBE  0100               	movlb	0	; () banked
  2218   001DC0  6F8C               	movwf	Interrupt_INTx_Pin_Init@ret& (0+255),b
  2219   001DC2                     l4262:
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 339:     return ret;
  2223   001DC2  518C               	movf	Interrupt_INTx_Pin_Init@ret& (0+255),w,b
  2224   001DC4                     
  2225                           ; BSR set to: 0
  2226   001DC4  0012               	return		;funcret
  2227   001DC6                     __end_of_Interrupt_INTx_Pin_Init:
  2228                           	callstack 0
  2229                           
  2230 ;; *************** function _gpio_pin_initialize *****************
  2231 ;; Defined at:
  2232 ;;		line 101 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  _pin_config     1    8[BANK0 ] PTR const struct .
  2235 ;;		 -> clock(6), segment$segment_pins(4), segment(5), segment_10$segment_pins(4), 
  2236 ;;		 -> segment_10(5), Relay_initialize@pin_obj(1), led_intialize@pin_obj(1), 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  ret             1   10[BANK0 ] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      unsigned char 
  2241 ;; Registers used:
  2242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2248 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;Total ram usage:        3 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; Hardware stack levels required when called: 11
  2255 ;; This function calls:
  2256 ;;		_gpio_pin_direction_intialize
  2257 ;;		_gpio_pin_write_logic
  2258 ;; This function is called by:
  2259 ;;		_led_intialize
  2260 ;;		_Seven_Segm_initailize
  2261 ;;		_Interrupt_INTx_Pin_Init
  2262 ;;		_button_intialize
  2263 ;;		_lcd_4bit_initailize
  2264 ;;		_lcd_8bit_initailize
  2265 ;;		_Dc_motor_initialize
  2266 ;;		_keypad_initialize
  2267 ;;		_Relay_initialize
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text15
  2272   001B2C                     __ptext15:
  2273                           	callstack 0
  2274   001B2C                     _gpio_pin_initialize:
  2275                           	callstack 16
  2276   001B2C                     
  2277                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:     Std_ReturnType ret = (Std_ReturnType)0X01;
  2278   001B2C  0E01               	movlw	1
  2279   001B2E  0100               	movlb	0	; () banked
  2280   001B30  6F8A               	movwf	gpio_pin_initialize@ret& (0+255),b
  2281                           
  2282                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:     if (((void*)0) == _pin_config || _pin_config->pin 
      +                          > 8 - 1) {
  2283   001B32  5188               	movf	gpio_pin_initialize@_pin_config& (0+255),w,b
  2284   001B34  B4D8               	btfsc	status,2,c
  2285   001B36  EF9F  F00D         	goto	u3041
  2286   001B3A  EFA1  F00D         	goto	u3040
  2287   001B3E                     u3041:
  2288   001B3E  EFB1  F00D         	goto	l4100
  2289   001B42                     u3040:
  2290   001B42                     
  2291                           ; BSR set to: 0
  2292   001B42  5188               	movf	gpio_pin_initialize@_pin_config& (0+255),w,b
  2293   001B44  6ED9               	movwf	fsr2l,c
  2294   001B46  6ADA               	clrf	fsr2h,c
  2295   001B48  30DF               	rrcf	223,w,c
  2296   001B4A  32E8               	rrcf	wreg,f,c
  2297   001B4C  32E8               	rrcf	wreg,f,c
  2298   001B4E  0B07               	andlw	7
  2299   001B50  6F89               	movwf	??_gpio_pin_initialize& (0+255),b
  2300   001B52  0E07               	movlw	7
  2301   001B54  6589               	cpfsgt	??_gpio_pin_initialize& (0+255),b
  2302   001B56  EFAF  F00D         	goto	u3051
  2303   001B5A  EFB1  F00D         	goto	u3050
  2304   001B5E                     u3051:
  2305   001B5E  EFB5  F00D         	goto	l4102
  2306   001B62                     u3050:
  2307   001B62                     l4100:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;MCAL_Layer/GPIO/hal_gpio.c: 104:         ret = (Std_ReturnType)0X00;
  2311   001B62  0E00               	movlw	0
  2312   001B64  6F8A               	movwf	gpio_pin_initialize@ret& (0+255),b
  2313                           
  2314                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:     } else {
  2315   001B66  EFC5  F00D         	goto	l4104
  2316   001B6A                     l4102:
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:         gpio_pin_direction_intialize(_pin_config);
  2320   001B6A  C088  F080         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  2321   001B6E  EC0B  F008         	call	_gpio_pin_direction_intialize	;wreg free
  2322                           
  2323                           ;MCAL_Layer/GPIO/hal_gpio.c: 107:         gpio_pin_write_logic(_pin_config, _pin_config-
      +                          >logic);
  2324   001B72  C088  F080         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  2325   001B76  0100               	movlb	0	; () banked
  2326   001B78  5188               	movf	gpio_pin_initialize@_pin_config& (0+255),w,b
  2327   001B7A  6ED9               	movwf	fsr2l,c
  2328   001B7C  6ADA               	clrf	fsr2h,c
  2329   001B7E  0E00               	movlw	0
  2330   001B80  BEDF               	btfsc	indf2,7,c
  2331   001B82  0E01               	movlw	1
  2332   001B84  6F81               	movwf	gpio_pin_write_logic@logic_& (0+255),b
  2333   001B86  EC30  F009         	call	_gpio_pin_write_logic	;wreg free
  2334   001B8A                     l4104:
  2335                           
  2336                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:     return ret;
  2337   001B8A  0100               	movlb	0	; () banked
  2338   001B8C  518A               	movf	gpio_pin_initialize@ret& (0+255),w,b
  2339   001B8E                     
  2340                           ; BSR set to: 0
  2341   001B8E  0012               	return		;funcret
  2342   001B90                     __end_of_gpio_pin_initialize:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _gpio_pin_write_logic *****************
  2346 ;; Defined at:
  2347 ;;		line 55 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  _pin_config     1    0[BANK0 ] PTR const struct .
  2350 ;;		 -> clock(6), segment$segment_pins(4), segment(5), segment_10$segment_pins(4), 
  2351 ;;		 -> segment_10(5), Relay_off@pin_obj(1), Relay_on@pin_obj(1), Relay_initialize@pin_obj(1), 
  2352 ;;		 -> led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_intialize@pin_obj(1), 
  2353 ;;  logic_          1    1[BANK0 ] enum E3402
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  ret             1    7[BANK0 ] unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      unsigned char 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2365 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;Total ram usage:        8 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; Hardware stack levels required when called: 10
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		_Seven_Segm_Display_Number
  2376 ;;		_gpio_pin_initialize
  2377 ;;		_lcd_4bit_send_command
  2378 ;;		_lcd_4bit_send_char_data
  2379 ;;		_lcd_8bit_send_command
  2380 ;;		_lcd_8bit_send_char_data
  2381 ;;		_lcd_8bits_send_enable
  2382 ;;		_lcd_4bits_send_enable
  2383 ;;		_lcd_4bits_command
  2384 ;;		_Dc_motor_rotate_right
  2385 ;;		_Dc_motor_rotate_left
  2386 ;;		_Dc_motor_stop
  2387 ;;		_keypad_get_value
  2388 ;;		_led_turn_on
  2389 ;;		_led_turn_off
  2390 ;;		_Relay_on
  2391 ;;		_Relay_off
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text16
  2396   001260                     __ptext16:
  2397                           	callstack 0
  2398   001260                     _gpio_pin_write_logic:
  2399                           	callstack 19
  2400   001260                     
  2401                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:     Std_ReturnType ret = (Std_ReturnType)0X01;
  2402   001260  0E01               	movlw	1
  2403   001262  0100               	movlb	0	; () banked
  2404   001264  6F87               	movwf	gpio_pin_write_logic@ret& (0+255),b
  2405                           
  2406                           ;MCAL_Layer/GPIO/hal_gpio.c: 57:     if (((void*)0) == _pin_config || _pin_config->pin >
      +                           8 - 1) {
  2407   001266  5180               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
  2408   001268  B4D8               	btfsc	status,2,c
  2409   00126A  EF39  F009         	goto	u2941
  2410   00126E  EF3B  F009         	goto	u2940
  2411   001272                     u2941:
  2412   001272  EF4B  F009         	goto	l4054
  2413   001276                     u2940:
  2414   001276                     
  2415                           ; BSR set to: 0
  2416   001276  5180               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
  2417   001278  6ED9               	movwf	fsr2l,c
  2418   00127A  6ADA               	clrf	fsr2h,c
  2419   00127C  30DF               	rrcf	223,w,c
  2420   00127E  32E8               	rrcf	wreg,f,c
  2421   001280  32E8               	rrcf	wreg,f,c
  2422   001282  0B07               	andlw	7
  2423   001284  6F82               	movwf	??_gpio_pin_write_logic& (0+255),b
  2424   001286  0E07               	movlw	7
  2425   001288  6582               	cpfsgt	??_gpio_pin_write_logic& (0+255),b
  2426   00128A  EF49  F009         	goto	u2951
  2427   00128E  EF4B  F009         	goto	u2950
  2428   001292                     u2951:
  2429   001292  EFA4  F009         	goto	l4064
  2430   001296                     u2950:
  2431   001296                     l4054:
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;MCAL_Layer/GPIO/hal_gpio.c: 58:         ret = (Std_ReturnType)0X00;
  2435   001296  0E00               	movlw	0
  2436   001298  6F87               	movwf	gpio_pin_write_logic@ret& (0+255),b
  2437                           
  2438                           ;MCAL_Layer/GPIO/hal_gpio.c: 59:     } else {
  2439   00129A  EFB9  F009         	goto	l4066
  2440   00129E                     l4056:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;MCAL_Layer/GPIO/hal_gpio.c: 63:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  2444   00129E  5180               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
  2445   0012A0  6ED9               	movwf	fsr2l,c
  2446   0012A2  6ADA               	clrf	fsr2h,c
  2447   0012A4  30DF               	rrcf	223,w,c
  2448   0012A6  32E8               	rrcf	wreg,f,c
  2449   0012A8  32E8               	rrcf	wreg,f,c
  2450   0012AA  0B07               	andlw	7
  2451   0012AC  6F82               	movwf	??_gpio_pin_write_logic& (0+255),b
  2452   0012AE  0E01               	movlw	1
  2453   0012B0  6F83               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
  2454   0012B2  2B82               	incf	??_gpio_pin_write_logic& (0+255),f,b
  2455   0012B4  EF5E  F009         	goto	u2964
  2456   0012B8                     u2965:
  2457   0012B8  90D8               	bcf	status,0,c
  2458   0012BA  3783               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
  2459   0012BC                     u2964:
  2460   0012BC  2F82               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
  2461   0012BE  EF5C  F009         	goto	u2965
  2462   0012C2  0100               	movlb	0	; () banked
  2463   0012C4  5180               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
  2464   0012C6  6ED9               	movwf	fsr2l,c
  2465   0012C8  6ADA               	clrf	fsr2h,c
  2466   0012CA  50DF               	movf	223,w,c
  2467   0012CC  0B07               	andlw	7
  2468   0012CE  0D02               	mullw	2
  2469   0012D0  50F3               	movf	243,w,c
  2470   0012D2  0F01               	addlw	low _lat_registers
  2471   0012D4  6ED9               	movwf	fsr2l,c
  2472   0012D6  6ADA               	clrf	fsr2h,c
  2473   0012D8  CFDE F084          	movff	postinc2,??_gpio_pin_write_logic+2
  2474   0012DC  CFDD F085          	movff	postdec2,??_gpio_pin_write_logic+3
  2475   0012E0  C084  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2476   0012E4  C085  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2477   0012E8  5183               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  2478   0012EA  12DF               	iorwf	indf2,f,c
  2479                           
  2480                           ;MCAL_Layer/GPIO/hal_gpio.c: 64:                 break;
  2481   0012EC  EFB9  F009         	goto	l4066
  2482   0012F0                     l4058:
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;MCAL_Layer/GPIO/hal_gpio.c: 67:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
  2486   0012F0  5180               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
  2487   0012F2  6ED9               	movwf	fsr2l,c
  2488   0012F4  6ADA               	clrf	fsr2h,c
  2489   0012F6  30DF               	rrcf	223,w,c
  2490   0012F8  32E8               	rrcf	wreg,f,c
  2491   0012FA  32E8               	rrcf	wreg,f,c
  2492   0012FC  0B07               	andlw	7
  2493   0012FE  6F82               	movwf	??_gpio_pin_write_logic& (0+255),b
  2494   001300  0E01               	movlw	1
  2495   001302  6F83               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
  2496   001304  2B82               	incf	??_gpio_pin_write_logic& (0+255),f,b
  2497   001306  EF87  F009         	goto	u2974
  2498   00130A                     u2975:
  2499   00130A  90D8               	bcf	status,0,c
  2500   00130C  3783               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
  2501   00130E                     u2974:
  2502   00130E  2F82               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
  2503   001310  EF85  F009         	goto	u2975
  2504   001314  0100               	movlb	0	; () banked
  2505   001316  5183               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  2506   001318  0AFF               	xorlw	255
  2507   00131A  6F84               	movwf	(??_gpio_pin_write_logic+2)& (0+255),b
  2508   00131C  5180               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
  2509   00131E  6ED9               	movwf	fsr2l,c
  2510   001320  6ADA               	clrf	fsr2h,c
  2511   001322  50DF               	movf	223,w,c
  2512   001324  0B07               	andlw	7
  2513   001326  0D02               	mullw	2
  2514   001328  50F3               	movf	243,w,c
  2515   00132A  0F01               	addlw	low _lat_registers
  2516   00132C  6ED9               	movwf	fsr2l,c
  2517   00132E  6ADA               	clrf	fsr2h,c
  2518   001330  CFDE F085          	movff	postinc2,??_gpio_pin_write_logic+3
  2519   001334  CFDD F086          	movff	postdec2,??_gpio_pin_write_logic+4
  2520   001338  C085  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2521   00133C  C086  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2522   001340  5184               	movf	(??_gpio_pin_write_logic+2)& (0+255),w,b
  2523   001342  16DF               	andwf	indf2,f,c
  2524                           
  2525                           ;MCAL_Layer/GPIO/hal_gpio.c: 68:                 break;
  2526   001344  EFB9  F009         	goto	l4066
  2527   001348                     l4064:
  2528                           
  2529                           ; BSR set to: 0
  2530   001348  5181               	movf	gpio_pin_write_logic@logic_& (0+255),w,b
  2531   00134A  6F82               	movwf	??_gpio_pin_write_logic& (0+255),b
  2532   00134C  6B83               	clrf	(??_gpio_pin_write_logic+1)& (0+255),b
  2533                           
  2534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2535                           ; Switch size 1, requested type "simple"
  2536                           ; Number of cases is 1, Range of values is 0 to 0
  2537                           ; switch strategies available:
  2538                           ; Name         Instructions Cycles
  2539                           ; simple_byte            4     3 (average)
  2540                           ;	Chosen strategy is simple_byte
  2541   00134E  5183               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  2542   001350  0A00               	xorlw	0	; case 0
  2543   001352  B4D8               	btfsc	status,2,c
  2544   001354  EFAE  F009         	goto	l5244
  2545   001358  EF4B  F009         	goto	l4054
  2546   00135C                     l5244:
  2547                           
  2548                           ; BSR set to: 0
  2549                           ; Switch size 1, requested type "simple"
  2550                           ; Number of cases is 2, Range of values is 0 to 1
  2551                           ; switch strategies available:
  2552                           ; Name         Instructions Cycles
  2553                           ; simple_byte            7     4 (average)
  2554                           ;	Chosen strategy is simple_byte
  2555   00135C  5182               	movf	??_gpio_pin_write_logic& (0+255),w,b
  2556   00135E  0A00               	xorlw	0	; case 0
  2557   001360  B4D8               	btfsc	status,2,c
  2558   001362  EF78  F009         	goto	l4058
  2559   001366  0A01               	xorlw	1	; case 1
  2560   001368  B4D8               	btfsc	status,2,c
  2561   00136A  EF4F  F009         	goto	l4056
  2562   00136E  EF4B  F009         	goto	l4054
  2563   001372                     l4066:
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     return ret;
  2567   001372  5187               	movf	gpio_pin_write_logic@ret& (0+255),w,b
  2568   001374                     
  2569                           ; BSR set to: 0
  2570   001374  0012               	return		;funcret
  2571   001376                     __end_of_gpio_pin_write_logic:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _gpio_pin_direction_intialize *****************
  2575 ;; Defined at:
  2576 ;;		line 19 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  _pin_config     1    0[BANK0 ] PTR const struct .
  2579 ;;		 -> clock(6), segment$segment_pins(4), segment(5), segment_10$segment_pins(4), 
  2580 ;;		 -> segment_10(5), Relay_initialize@pin_obj(1), led_intialize@pin_obj(1), 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  ret             1    6[BANK0 ] unsigned char 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      unsigned char 
  2585 ;; Registers used:
  2586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2592 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;Total ram usage:        7 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; Hardware stack levels required when called: 10
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_gpio_pin_initialize
  2603 ;;		_Interrupt_RBx_Init
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text17
  2608   001016                     __ptext17:
  2609                           	callstack 0
  2610   001016                     _gpio_pin_direction_intialize:
  2611                           	callstack 16
  2612   001016                     
  2613                           ;MCAL_Layer/GPIO/hal_gpio.c: 20:     Std_ReturnType ret = (Std_ReturnType)0X01;
  2614   001016  0E01               	movlw	1
  2615   001018  0100               	movlb	0	; () banked
  2616   00101A  6F86               	movwf	gpio_pin_direction_intialize@ret& (0+255),b
  2617                           
  2618                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:     if (((void*)0) == _pin_config || (_pin_config->pin 
      +                          > 8 - 1)) {
  2619   00101C  5180               	movf	gpio_pin_direction_intialize@_pin_config& (0+255),w,b
  2620   00101E  B4D8               	btfsc	status,2,c
  2621   001020  EF14  F008         	goto	u2981
  2622   001024  EF16  F008         	goto	u2980
  2623   001028                     u2981:
  2624   001028  EF26  F008         	goto	l4078
  2625   00102C                     u2980:
  2626   00102C                     
  2627                           ; BSR set to: 0
  2628   00102C  5180               	movf	gpio_pin_direction_intialize@_pin_config& (0+255),w,b
  2629   00102E  6ED9               	movwf	fsr2l,c
  2630   001030  6ADA               	clrf	fsr2h,c
  2631   001032  30DF               	rrcf	223,w,c
  2632   001034  32E8               	rrcf	wreg,f,c
  2633   001036  32E8               	rrcf	wreg,f,c
  2634   001038  0B07               	andlw	7
  2635   00103A  6F81               	movwf	??_gpio_pin_direction_intialize& (0+255),b
  2636   00103C  0E07               	movlw	7
  2637   00103E  6581               	cpfsgt	??_gpio_pin_direction_intialize& (0+255),b
  2638   001040  EF24  F008         	goto	u2991
  2639   001044  EF26  F008         	goto	u2990
  2640   001048                     u2991:
  2641   001048  EF7F  F008         	goto	l4086
  2642   00104C                     u2990:
  2643   00104C                     l4078:
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:         ret = (Std_ReturnType)0X00;
  2647   00104C  0E00               	movlw	0
  2648   00104E  6F86               	movwf	gpio_pin_direction_intialize@ret& (0+255),b
  2649                           
  2650                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:     } else {
  2651   001050  EF9F  F008         	goto	l4088
  2652   001054                     l4080:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  2656   001054  5180               	movf	gpio_pin_direction_intialize@_pin_config& (0+255),w,b
  2657   001056  6ED9               	movwf	fsr2l,c
  2658   001058  6ADA               	clrf	fsr2h,c
  2659   00105A  30DF               	rrcf	223,w,c
  2660   00105C  32E8               	rrcf	wreg,f,c
  2661   00105E  32E8               	rrcf	wreg,f,c
  2662   001060  0B07               	andlw	7
  2663   001062  6F81               	movwf	??_gpio_pin_direction_intialize& (0+255),b
  2664   001064  0E01               	movlw	1
  2665   001066  6F82               	movwf	(??_gpio_pin_direction_intialize+1)& (0+255),b
  2666   001068  2B81               	incf	??_gpio_pin_direction_intialize& (0+255),f,b
  2667   00106A  EF39  F008         	goto	u3004
  2668   00106E                     u3005:
  2669   00106E  90D8               	bcf	status,0,c
  2670   001070  3782               	rlcf	(??_gpio_pin_direction_intialize+1)& (0+255),f,b
  2671   001072                     u3004:
  2672   001072  2F81               	decfsz	??_gpio_pin_direction_intialize& (0+255),f,b
  2673   001074  EF37  F008         	goto	u3005
  2674   001078  0100               	movlb	0	; () banked
  2675   00107A  5182               	movf	(??_gpio_pin_direction_intialize+1)& (0+255),w,b
  2676   00107C  0AFF               	xorlw	255
  2677   00107E  6F83               	movwf	(??_gpio_pin_direction_intialize+2)& (0+255),b
  2678   001080  5180               	movf	gpio_pin_direction_intialize@_pin_config& (0+255),w,b
  2679   001082  6ED9               	movwf	fsr2l,c
  2680   001084  6ADA               	clrf	fsr2h,c
  2681   001086  50DF               	movf	223,w,c
  2682   001088  0B07               	andlw	7
  2683   00108A  0D02               	mullw	2
  2684   00108C  50F3               	movf	243,w,c
  2685   00108E  0F0B               	addlw	low _tris_registers
  2686   001090  6ED9               	movwf	fsr2l,c
  2687   001092  6ADA               	clrf	fsr2h,c
  2688   001094  CFDE F084          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2689   001098  CFDD F085          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2690   00109C  C084  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2691   0010A0  C085  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2692   0010A4  5183               	movf	(??_gpio_pin_direction_intialize+2)& (0+255),w,b
  2693   0010A6  16DF               	andwf	indf2,f,c
  2694                           
  2695                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:                 break;
  2696   0010A8  EF9F  F008         	goto	l4088
  2697   0010AC                     l4082:
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  2701   0010AC  5180               	movf	gpio_pin_direction_intialize@_pin_config& (0+255),w,b
  2702   0010AE  6ED9               	movwf	fsr2l,c
  2703   0010B0  6ADA               	clrf	fsr2h,c
  2704   0010B2  30DF               	rrcf	223,w,c
  2705   0010B4  32E8               	rrcf	wreg,f,c
  2706   0010B6  32E8               	rrcf	wreg,f,c
  2707   0010B8  0B07               	andlw	7
  2708   0010BA  6F81               	movwf	??_gpio_pin_direction_intialize& (0+255),b
  2709   0010BC  0E01               	movlw	1
  2710   0010BE  6F82               	movwf	(??_gpio_pin_direction_intialize+1)& (0+255),b
  2711   0010C0  2B81               	incf	??_gpio_pin_direction_intialize& (0+255),f,b
  2712   0010C2  EF65  F008         	goto	u3014
  2713   0010C6                     u3015:
  2714   0010C6  90D8               	bcf	status,0,c
  2715   0010C8  3782               	rlcf	(??_gpio_pin_direction_intialize+1)& (0+255),f,b
  2716   0010CA                     u3014:
  2717   0010CA  2F81               	decfsz	??_gpio_pin_direction_intialize& (0+255),f,b
  2718   0010CC  EF63  F008         	goto	u3015
  2719   0010D0  0100               	movlb	0	; () banked
  2720   0010D2  5180               	movf	gpio_pin_direction_intialize@_pin_config& (0+255),w,b
  2721   0010D4  6ED9               	movwf	fsr2l,c
  2722   0010D6  6ADA               	clrf	fsr2h,c
  2723   0010D8  50DF               	movf	223,w,c
  2724   0010DA  0B07               	andlw	7
  2725   0010DC  0D02               	mullw	2
  2726   0010DE  50F3               	movf	243,w,c
  2727   0010E0  0F0B               	addlw	low _tris_registers
  2728   0010E2  6ED9               	movwf	fsr2l,c
  2729   0010E4  6ADA               	clrf	fsr2h,c
  2730   0010E6  CFDE F083          	movff	postinc2,??_gpio_pin_direction_intialize+2
  2731   0010EA  CFDD F084          	movff	postdec2,??_gpio_pin_direction_intialize+3
  2732   0010EE  C083  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  2733   0010F2  C084  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  2734   0010F6  5182               	movf	(??_gpio_pin_direction_intialize+1)& (0+255),w,b
  2735   0010F8  12DF               	iorwf	indf2,f,c
  2736                           
  2737                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  2738   0010FA  EF9F  F008         	goto	l4088
  2739   0010FE                     l4086:
  2740                           
  2741                           ; BSR set to: 0
  2742   0010FE  5180               	movf	gpio_pin_direction_intialize@_pin_config& (0+255),w,b
  2743   001100  6ED9               	movwf	fsr2l,c
  2744   001102  6ADA               	clrf	fsr2h,c
  2745   001104  BCDF               	btfsc	indf2,6,c
  2746   001106  EF87  F008         	goto	u3021
  2747   00110A  EF8A  F008         	goto	u3020
  2748   00110E                     u3021:
  2749   00110E  0E01               	movlw	1
  2750   001110  EF8B  F008         	goto	u3030
  2751   001114                     u3020:
  2752   001114  0E00               	movlw	0
  2753   001116                     u3030:
  2754   001116  6F81               	movwf	??_gpio_pin_direction_intialize& (0+255),b
  2755   001118  6B82               	clrf	(??_gpio_pin_direction_intialize+1)& (0+255),b
  2756                           
  2757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2758                           ; Switch size 1, requested type "simple"
  2759                           ; Number of cases is 1, Range of values is 0 to 0
  2760                           ; switch strategies available:
  2761                           ; Name         Instructions Cycles
  2762                           ; simple_byte            4     3 (average)
  2763                           ;	Chosen strategy is simple_byte
  2764   00111A  5182               	movf	(??_gpio_pin_direction_intialize+1)& (0+255),w,b
  2765   00111C  0A00               	xorlw	0	; case 0
  2766   00111E  B4D8               	btfsc	status,2,c
  2767   001120  EF94  F008         	goto	l5246
  2768   001124  EF26  F008         	goto	l4078
  2769   001128                     l5246:
  2770                           
  2771                           ; BSR set to: 0
  2772                           ; Switch size 1, requested type "simple"
  2773                           ; Number of cases is 2, Range of values is 0 to 1
  2774                           ; switch strategies available:
  2775                           ; Name         Instructions Cycles
  2776                           ; simple_byte            7     4 (average)
  2777                           ;	Chosen strategy is simple_byte
  2778   001128  5181               	movf	??_gpio_pin_direction_intialize& (0+255),w,b
  2779   00112A  0A00               	xorlw	0	; case 0
  2780   00112C  B4D8               	btfsc	status,2,c
  2781   00112E  EF2A  F008         	goto	l4080
  2782   001132  0A01               	xorlw	1	; case 1
  2783   001134  B4D8               	btfsc	status,2,c
  2784   001136  EF56  F008         	goto	l4082
  2785   00113A  EF26  F008         	goto	l4078
  2786   00113E                     l4088:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;MCAL_Layer/GPIO/hal_gpio.c: 41:     return ret;
  2790   00113E  5186               	movf	gpio_pin_direction_intialize@ret& (0+255),w,b
  2791   001140                     
  2792                           ; BSR set to: 0
  2793   001140  0012               	return		;funcret
  2794   001142                     __end_of_gpio_pin_direction_intialize:
  2795                           	callstack 0
  2796                           
  2797 ;; *************** function _Interrupt_INTx_Enable *****************
  2798 ;; Defined at:
  2799 ;;		line 159 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  obj             1    0[BANK0 ] PTR const struct .
  2802 ;;		 -> clock(6), 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  ret             1    3[BANK0 ] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      unsigned char 
  2807 ;; Registers used:
  2808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2814 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;Total ram usage:        4 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 10
  2821 ;; This function calls:
  2822 ;;		Nothing
  2823 ;; This function is called by:
  2824 ;;		_Interrupt_INTx_Init
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text18
  2829   00143C                     __ptext18:
  2830                           	callstack 0
  2831   00143C                     _Interrupt_INTx_Enable:
  2832                           	callstack 18
  2833   00143C                     
  2834                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 160:     Std_ReturnType ret = (Std_Retu
      +                          rnType)0X01;
  2835   00143C  0E01               	movlw	1
  2836   00143E  0100               	movlb	0	; () banked
  2837   001440  6F83               	movwf	Interrupt_INTx_Enable@ret& (0+255),b
  2838                           
  2839                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 161:     if (((void*)0) == obj) {
  2840   001442  5180               	movf	Interrupt_INTx_Enable@obj& (0+255),w,b
  2841   001444  A4D8               	btfss	status,2,c
  2842   001446  EF27  F00A         	goto	u3251
  2843   00144A  EF29  F00A         	goto	u3250
  2844   00144E                     u3251:
  2845   00144E  EF5B  F00A         	goto	l4306
  2846   001452                     u3250:
  2847   001452                     l4292:
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 162:         ret = (Std_ReturnType)0X00
      +                          ;
  2851   001452  0E00               	movlw	0
  2852   001454  6F83               	movwf	Interrupt_INTx_Enable@ret& (0+255),b
  2853                           
  2854                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 163:     } else {
  2855   001456  EF79  F00A         	goto	l4308
  2856   00145A                     l525:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 167:                 (INTCONbits.GIEH =
      +                           1);
  2860   00145A  8EF2               	bsf	242,7,c	;volatile
  2861                           
  2862                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 172:                 (INTCONbits.INT0IE
      +                           = 1);
  2863   00145C  88F2               	bsf	242,4,c	;volatile
  2864                           
  2865                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 173:                 break;
  2866   00145E  EF79  F00A         	goto	l4308
  2867   001462                     l527:
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 176:                 (RCONbits.IPEN = 1
      +                          );
  2871   001462  8ED0               	bsf	208,7,c	;volatile
  2872   001464                     
  2873                           ; BSR set to: 0
  2874                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 177:                 if (obj->Priority 
      +                          == INTERRUPT_HIGH_PRIORITY)
  2875   001464  5180               	movf	Interrupt_INTx_Enable@obj& (0+255),w,b
  2876   001466  6ED9               	movwf	fsr2l,c
  2877   001468  6ADA               	clrf	fsr2h,c
  2878   00146A  0E04               	movlw	4
  2879   00146C  26D9               	addwf	fsr2l,f,c
  2880   00146E  04DE               	decf	postinc2,w,c
  2881   001470  A4D8               	btfss	status,2,c
  2882   001472  EF3D  F00A         	goto	u3261
  2883   001476  EF3F  F00A         	goto	u3260
  2884   00147A                     u3261:
  2885   00147A  EF42  F00A         	goto	l528
  2886   00147E                     u3260:
  2887   00147E                     
  2888                           ; BSR set to: 0
  2889                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 178:                     (INTCONbits.GI
      +                          EH = 1);
  2890   00147E  8EF2               	bsf	242,7,c	;volatile
  2891   001480  EF43  F00A         	goto	l529
  2892   001484                     l528:
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 180:                     (INTCONbits.GI
      +                          EL = 1);
  2896   001484  8CF2               	bsf	242,6,c	;volatile
  2897   001486                     l529:
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 185:                 (INTCON3bits.INT1I
      +                          E = 1);
  2901   001486  86F0               	bsf	240,3,c	;volatile
  2902                           
  2903                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 186:                 break;
  2904   001488  EF79  F00A         	goto	l4308
  2905   00148C                     l530:
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 189:                 (RCONbits.IPEN = 1
      +                          );
  2909   00148C  8ED0               	bsf	208,7,c	;volatile
  2910   00148E                     
  2911                           ; BSR set to: 0
  2912                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 190:                 if (obj->Priority 
      +                          == INTERRUPT_HIGH_PRIORITY)
  2913   00148E  5180               	movf	Interrupt_INTx_Enable@obj& (0+255),w,b
  2914   001490  6ED9               	movwf	fsr2l,c
  2915   001492  6ADA               	clrf	fsr2h,c
  2916   001494  0E04               	movlw	4
  2917   001496  26D9               	addwf	fsr2l,f,c
  2918   001498  04DE               	decf	postinc2,w,c
  2919   00149A  A4D8               	btfss	status,2,c
  2920   00149C  EF52  F00A         	goto	u3271
  2921   0014A0  EF54  F00A         	goto	u3270
  2922   0014A4                     u3271:
  2923   0014A4  EF57  F00A         	goto	l531
  2924   0014A8                     u3270:
  2925   0014A8                     
  2926                           ; BSR set to: 0
  2927                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 191:                     (INTCONbits.GI
      +                          EH = 1);
  2928   0014A8  8EF2               	bsf	242,7,c	;volatile
  2929   0014AA  EF58  F00A         	goto	l532
  2930   0014AE                     l531:
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 193:                     (INTCONbits.GI
      +                          EL = 1);
  2934   0014AE  8CF2               	bsf	242,6,c	;volatile
  2935   0014B0                     l532:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 198:                 (INTCON3bits.INT2I
      +                          E = 1);
  2939   0014B0  88F0               	bsf	240,4,c	;volatile
  2940                           
  2941                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 199:                 break;
  2942   0014B2  EF79  F00A         	goto	l4308
  2943   0014B6                     l4306:
  2944                           
  2945                           ; BSR set to: 0
  2946   0014B6  5180               	movf	Interrupt_INTx_Enable@obj& (0+255),w,b
  2947   0014B8  6ED9               	movwf	fsr2l,c
  2948   0014BA  6ADA               	clrf	fsr2h,c
  2949   0014BC  0E03               	movlw	3
  2950   0014BE  26D9               	addwf	fsr2l,f,c
  2951   0014C0  50DF               	movf	indf2,w,c
  2952   0014C2  6F81               	movwf	??_Interrupt_INTx_Enable& (0+255),b
  2953   0014C4  6B82               	clrf	(??_Interrupt_INTx_Enable+1)& (0+255),b
  2954                           
  2955                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2956                           ; Switch size 1, requested type "simple"
  2957                           ; Number of cases is 1, Range of values is 0 to 0
  2958                           ; switch strategies available:
  2959                           ; Name         Instructions Cycles
  2960                           ; simple_byte            4     3 (average)
  2961                           ;	Chosen strategy is simple_byte
  2962   0014C6  5182               	movf	(??_Interrupt_INTx_Enable+1)& (0+255),w,b
  2963   0014C8  0A00               	xorlw	0	; case 0
  2964   0014CA  B4D8               	btfsc	status,2,c
  2965   0014CC  EF6A  F00A         	goto	l5248
  2966   0014D0  EF29  F00A         	goto	l4292
  2967   0014D4                     l5248:
  2968                           
  2969                           ; BSR set to: 0
  2970                           ; Switch size 1, requested type "simple"
  2971                           ; Number of cases is 3, Range of values is 0 to 2
  2972                           ; switch strategies available:
  2973                           ; Name         Instructions Cycles
  2974                           ; simple_byte           10     6 (average)
  2975                           ;	Chosen strategy is simple_byte
  2976   0014D4  5181               	movf	??_Interrupt_INTx_Enable& (0+255),w,b
  2977   0014D6  0A00               	xorlw	0	; case 0
  2978   0014D8  B4D8               	btfsc	status,2,c
  2979   0014DA  EF2D  F00A         	goto	l525
  2980   0014DE  0A01               	xorlw	1	; case 1
  2981   0014E0  B4D8               	btfsc	status,2,c
  2982   0014E2  EF31  F00A         	goto	l527
  2983   0014E6  0A03               	xorlw	3	; case 2
  2984   0014E8  B4D8               	btfsc	status,2,c
  2985   0014EA  EF46  F00A         	goto	l530
  2986   0014EE  EF29  F00A         	goto	l4292
  2987   0014F2                     l4308:
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 205:     return ret;
  2991   0014F2  5183               	movf	Interrupt_INTx_Enable@ret& (0+255),w,b
  2992   0014F4                     
  2993                           ; BSR set to: 0
  2994   0014F4  0012               	return		;funcret
  2995   0014F6                     __end_of_Interrupt_INTx_Enable:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function _Interrupt_INTx_Edge_Init *****************
  2999 ;; Defined at:
  3000 ;;		line 290 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  obj             1    0[BANK0 ] PTR const struct .
  3003 ;;		 -> clock(6), 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  ret             1    3[BANK0 ] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      unsigned char 
  3008 ;; Registers used:
  3009 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3015 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;Total ram usage:        4 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 10
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_Interrupt_INTx_Init
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text19
  3030   001142                     __ptext19:
  3031                           	callstack 0
  3032   001142                     _Interrupt_INTx_Edge_Init:
  3033                           	callstack 18
  3034   001142                     
  3035                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 291:     Std_ReturnType ret = (Std_Retu
      +                          rnType)0X01;
  3036   001142  0E01               	movlw	1
  3037   001144  0100               	movlb	0	; () banked
  3038   001146  6F83               	movwf	Interrupt_INTx_Edge_Init@ret& (0+255),b
  3039                           
  3040                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 292:     if (((void*)0) == obj) {
  3041   001148  5180               	movf	Interrupt_INTx_Edge_Init@obj& (0+255),w,b
  3042   00114A  A4D8               	btfss	status,2,c
  3043   00114C  EFAA  F008         	goto	u3131
  3044   001150  EFAC  F008         	goto	u3130
  3045   001154                     u3131:
  3046   001154  EF10  F009         	goto	l4222
  3047   001158                     u3130:
  3048   001158                     l4192:
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 293:         ret = (Std_ReturnType)0X00
      +                          ;
  3052   001158  0E00               	movlw	0
  3053   00115A  6F83               	movwf	Interrupt_INTx_Edge_Init@ret& (0+255),b
  3054                           
  3055                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 294:     } else {
  3056   00115C  EF2E  F009         	goto	l4224
  3057   001160                     l4194:
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 297:                 if (obj->Edge == I
      +                          NTERRUPT_FALLING_EDGE) {
  3061   001160  5180               	movf	Interrupt_INTx_Edge_Init@obj& (0+255),w,b
  3062   001162  6ED9               	movwf	fsr2l,c
  3063   001164  6ADA               	clrf	fsr2h,c
  3064   001166  0E02               	movlw	2
  3065   001168  26D9               	addwf	fsr2l,f,c
  3066   00116A  04DE               	decf	postinc2,w,c
  3067   00116C  A4D8               	btfss	status,2,c
  3068   00116E  EFBB  F008         	goto	u3141
  3069   001172  EFBD  F008         	goto	u3140
  3070   001176                     u3141:
  3071   001176  EFC0  F008         	goto	l4198
  3072   00117A                     u3140:
  3073   00117A                     
  3074                           ; BSR set to: 0
  3075                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 298:                     (INTCON2bits.I
      +                          NTEDG0 = 0);
  3076   00117A  9CF1               	bcf	241,6,c	;volatile
  3077                           
  3078                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 299:                 } else if (obj->Ed
      +                          ge == INTERRUPT_RISING_EDGE) {
  3079   00117C  EF2E  F009         	goto	l4224
  3080   001180                     l4198:
  3081                           
  3082                           ; BSR set to: 0
  3083   001180  5180               	movf	Interrupt_INTx_Edge_Init@obj& (0+255),w,b
  3084   001182  6ED9               	movwf	fsr2l,c
  3085   001184  6ADA               	clrf	fsr2h,c
  3086   001186  0E02               	movlw	2
  3087   001188  26D9               	addwf	fsr2l,f,c
  3088   00118A  50DF               	movf	indf2,w,c
  3089   00118C  A4D8               	btfss	status,2,c
  3090   00118E  EFCB  F008         	goto	u3151
  3091   001192  EFCD  F008         	goto	u3150
  3092   001196                     u3151:
  3093   001196  EF2E  F009         	goto	l569
  3094   00119A                     u3150:
  3095   00119A                     
  3096                           ; BSR set to: 0
  3097                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 300:                     (INTCON2bits.I
      +                          NTEDG0 = 1);
  3098   00119A  8CF1               	bsf	241,6,c	;volatile
  3099   00119C  EF2E  F009         	goto	l4224
  3100   0011A0                     l4202:
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 304:                 if (obj->Edge == I
      +                          NTERRUPT_FALLING_EDGE) {
  3104   0011A0  5180               	movf	Interrupt_INTx_Edge_Init@obj& (0+255),w,b
  3105   0011A2  6ED9               	movwf	fsr2l,c
  3106   0011A4  6ADA               	clrf	fsr2h,c
  3107   0011A6  0E02               	movlw	2
  3108   0011A8  26D9               	addwf	fsr2l,f,c
  3109   0011AA  04DE               	decf	postinc2,w,c
  3110   0011AC  A4D8               	btfss	status,2,c
  3111   0011AE  EFDB  F008         	goto	u3161
  3112   0011B2  EFDD  F008         	goto	u3160
  3113   0011B6                     u3161:
  3114   0011B6  EFE0  F008         	goto	l4206
  3115   0011BA                     u3160:
  3116   0011BA                     
  3117                           ; BSR set to: 0
  3118                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 305:                     (INTCON2bits.I
      +                          NTEDG1 = 0);
  3119   0011BA  9AF1               	bcf	241,5,c	;volatile
  3120                           
  3121                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 306:                 } else if (obj->Ed
      +                          ge == INTERRUPT_RISING_EDGE) {
  3122   0011BC  EF2E  F009         	goto	l4224
  3123   0011C0                     l4206:
  3124                           
  3125                           ; BSR set to: 0
  3126   0011C0  5180               	movf	Interrupt_INTx_Edge_Init@obj& (0+255),w,b
  3127   0011C2  6ED9               	movwf	fsr2l,c
  3128   0011C4  6ADA               	clrf	fsr2h,c
  3129   0011C6  0E02               	movlw	2
  3130   0011C8  26D9               	addwf	fsr2l,f,c
  3131   0011CA  50DF               	movf	indf2,w,c
  3132   0011CC  A4D8               	btfss	status,2,c
  3133   0011CE  EFEB  F008         	goto	u3171
  3134   0011D2  EFED  F008         	goto	u3170
  3135   0011D6                     u3171:
  3136   0011D6  EF2E  F009         	goto	l569
  3137   0011DA                     u3170:
  3138   0011DA                     
  3139                           ; BSR set to: 0
  3140                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 307:                     (INTCON2bits.I
      +                          NTEDG1 = 1);
  3141   0011DA  8AF1               	bsf	241,5,c	;volatile
  3142   0011DC  EF2E  F009         	goto	l4224
  3143   0011E0                     l4210:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 311:                 if (obj->Edge == I
      +                          NTERRUPT_FALLING_EDGE) {
  3147   0011E0  5180               	movf	Interrupt_INTx_Edge_Init@obj& (0+255),w,b
  3148   0011E2  6ED9               	movwf	fsr2l,c
  3149   0011E4  6ADA               	clrf	fsr2h,c
  3150   0011E6  0E02               	movlw	2
  3151   0011E8  26D9               	addwf	fsr2l,f,c
  3152   0011EA  04DE               	decf	postinc2,w,c
  3153   0011EC  A4D8               	btfss	status,2,c
  3154   0011EE  EFFB  F008         	goto	u3181
  3155   0011F2  EFFD  F008         	goto	u3180
  3156   0011F6                     u3181:
  3157   0011F6  EF00  F009         	goto	l4214
  3158   0011FA                     u3180:
  3159   0011FA                     
  3160                           ; BSR set to: 0
  3161                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 312:                     (INTCON2bits.I
      +                          NTEDG2 = 0);
  3162   0011FA  98F1               	bcf	241,4,c	;volatile
  3163                           
  3164                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 313:                 } else if (obj->Ed
      +                          ge == INTERRUPT_RISING_EDGE) {
  3165   0011FC  EF2E  F009         	goto	l4224
  3166   001200                     l4214:
  3167                           
  3168                           ; BSR set to: 0
  3169   001200  5180               	movf	Interrupt_INTx_Edge_Init@obj& (0+255),w,b
  3170   001202  6ED9               	movwf	fsr2l,c
  3171   001204  6ADA               	clrf	fsr2h,c
  3172   001206  0E02               	movlw	2
  3173   001208  26D9               	addwf	fsr2l,f,c
  3174   00120A  50DF               	movf	indf2,w,c
  3175   00120C  A4D8               	btfss	status,2,c
  3176   00120E  EF0B  F009         	goto	u3191
  3177   001212  EF0D  F009         	goto	u3190
  3178   001216                     u3191:
  3179   001216  EF2E  F009         	goto	l569
  3180   00121A                     u3190:
  3181   00121A                     
  3182                           ; BSR set to: 0
  3183                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 314:                     (INTCON2bits.I
      +                          NTEDG2 = 1);
  3184   00121A  88F1               	bsf	241,4,c	;volatile
  3185   00121C  EF2E  F009         	goto	l4224
  3186   001220                     l4222:
  3187                           
  3188                           ; BSR set to: 0
  3189   001220  5180               	movf	Interrupt_INTx_Edge_Init@obj& (0+255),w,b
  3190   001222  6ED9               	movwf	fsr2l,c
  3191   001224  6ADA               	clrf	fsr2h,c
  3192   001226  0E03               	movlw	3
  3193   001228  26D9               	addwf	fsr2l,f,c
  3194   00122A  50DF               	movf	indf2,w,c
  3195   00122C  6F81               	movwf	??_Interrupt_INTx_Edge_Init& (0+255),b
  3196   00122E  6B82               	clrf	(??_Interrupt_INTx_Edge_Init+1)& (0+255),b
  3197                           
  3198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3199                           ; Switch size 1, requested type "simple"
  3200                           ; Number of cases is 1, Range of values is 0 to 0
  3201                           ; switch strategies available:
  3202                           ; Name         Instructions Cycles
  3203                           ; simple_byte            4     3 (average)
  3204                           ;	Chosen strategy is simple_byte
  3205   001230  5182               	movf	(??_Interrupt_INTx_Edge_Init+1)& (0+255),w,b
  3206   001232  0A00               	xorlw	0	; case 0
  3207   001234  B4D8               	btfsc	status,2,c
  3208   001236  EF1F  F009         	goto	l5250
  3209   00123A  EFAC  F008         	goto	l4192
  3210   00123E                     l5250:
  3211                           
  3212                           ; BSR set to: 0
  3213                           ; Switch size 1, requested type "simple"
  3214                           ; Number of cases is 3, Range of values is 0 to 2
  3215                           ; switch strategies available:
  3216                           ; Name         Instructions Cycles
  3217                           ; simple_byte           10     6 (average)
  3218                           ;	Chosen strategy is simple_byte
  3219   00123E  5181               	movf	??_Interrupt_INTx_Edge_Init& (0+255),w,b
  3220   001240  0A00               	xorlw	0	; case 0
  3221   001242  B4D8               	btfsc	status,2,c
  3222   001244  EFB0  F008         	goto	l4194
  3223   001248  0A01               	xorlw	1	; case 1
  3224   00124A  B4D8               	btfsc	status,2,c
  3225   00124C  EFD0  F008         	goto	l4202
  3226   001250  0A03               	xorlw	3	; case 2
  3227   001252  B4D8               	btfsc	status,2,c
  3228   001254  EFF0  F008         	goto	l4210
  3229   001258  EFAC  F008         	goto	l4192
  3230   00125C                     l569:
  3231   00125C                     l4224:
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 322:     return ret;
  3235   00125C  5183               	movf	Interrupt_INTx_Edge_Init@ret& (0+255),w,b
  3236   00125E                     
  3237                           ; BSR set to: 0
  3238   00125E  0012               	return		;funcret
  3239   001260                     __end_of_Interrupt_INTx_Edge_Init:
  3240                           	callstack 0
  3241                           
  3242 ;; *************** function _Interrupt_INTx_Disable *****************
  3243 ;; Defined at:
  3244 ;;		line 214 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  obj             1    0[BANK0 ] PTR const struct .
  3247 ;;		 -> clock(6), 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  ret             1    3[BANK0 ] unsigned char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      unsigned char 
  3252 ;; Registers used:
  3253 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3259 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;Total ram usage:        4 bytes
  3264 ;; Hardware stack levels used: 1
  3265 ;; Hardware stack levels required when called: 10
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_Interrupt_INTx_Init
  3270 ;;		_Interrupt_INTx_DeInit
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text20
  3275   001A52                     __ptext20:
  3276                           	callstack 0
  3277   001A52                     _Interrupt_INTx_Disable:
  3278                           	callstack 18
  3279   001A52                     
  3280                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 215:     Std_ReturnType ret = (Std_Retu
      +                          rnType)0X01;
  3281   001A52  0E01               	movlw	1
  3282   001A54  0100               	movlb	0	; () banked
  3283   001A56  6F83               	movwf	Interrupt_INTx_Disable@ret& (0+255),b
  3284                           
  3285                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 216:     if (((void*)0) == obj) {
  3286   001A58  5180               	movf	Interrupt_INTx_Disable@obj& (0+255),w,b
  3287   001A5A  A4D8               	btfss	status,2,c
  3288   001A5C  EF32  F00D         	goto	u3121
  3289   001A60  EF34  F00D         	goto	u3120
  3290   001A64                     u3121:
  3291   001A64  EF41  F00D         	goto	l4178
  3292   001A68                     u3120:
  3293   001A68                     l4172:
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 217:         ret = (Std_ReturnType)0X00
      +                          ;
  3297   001A68  0E00               	movlw	0
  3298   001A6A  6F83               	movwf	Interrupt_INTx_Disable@ret& (0+255),b
  3299                           
  3300                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 218:     } else {
  3301   001A6C  EF5F  F00D         	goto	l4180
  3302   001A70                     l540:
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 221:                 (INTCONbits.INT0IE
      +                           = 0);
  3306   001A70  98F2               	bcf	242,4,c	;volatile
  3307                           
  3308                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 222:                 break;
  3309   001A72  EF5F  F00D         	goto	l4180
  3310   001A76                     l542:
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 224:                 (INTCON3bits.INT1I
      +                          E = 0);
  3314   001A76  96F0               	bcf	240,3,c	;volatile
  3315                           
  3316                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 225:                 break;
  3317   001A78  EF5F  F00D         	goto	l4180
  3318   001A7C                     l543:
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 227:                 (INTCON3bits.INT2I
      +                          E = 0);
  3322   001A7C  98F0               	bcf	240,4,c	;volatile
  3323                           
  3324                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 228:                 break;
  3325   001A7E  EF5F  F00D         	goto	l4180
  3326   001A82                     l4178:
  3327                           
  3328                           ; BSR set to: 0
  3329   001A82  5180               	movf	Interrupt_INTx_Disable@obj& (0+255),w,b
  3330   001A84  6ED9               	movwf	fsr2l,c
  3331   001A86  6ADA               	clrf	fsr2h,c
  3332   001A88  0E03               	movlw	3
  3333   001A8A  26D9               	addwf	fsr2l,f,c
  3334   001A8C  50DF               	movf	indf2,w,c
  3335   001A8E  6F81               	movwf	??_Interrupt_INTx_Disable& (0+255),b
  3336   001A90  6B82               	clrf	(??_Interrupt_INTx_Disable+1)& (0+255),b
  3337                           
  3338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3339                           ; Switch size 1, requested type "simple"
  3340                           ; Number of cases is 1, Range of values is 0 to 0
  3341                           ; switch strategies available:
  3342                           ; Name         Instructions Cycles
  3343                           ; simple_byte            4     3 (average)
  3344                           ;	Chosen strategy is simple_byte
  3345   001A92  5182               	movf	(??_Interrupt_INTx_Disable+1)& (0+255),w,b
  3346   001A94  0A00               	xorlw	0	; case 0
  3347   001A96  B4D8               	btfsc	status,2,c
  3348   001A98  EF50  F00D         	goto	l5252
  3349   001A9C  EF34  F00D         	goto	l4172
  3350   001AA0                     l5252:
  3351                           
  3352                           ; BSR set to: 0
  3353                           ; Switch size 1, requested type "simple"
  3354                           ; Number of cases is 3, Range of values is 0 to 2
  3355                           ; switch strategies available:
  3356                           ; Name         Instructions Cycles
  3357                           ; simple_byte           10     6 (average)
  3358                           ;	Chosen strategy is simple_byte
  3359   001AA0  5181               	movf	??_Interrupt_INTx_Disable& (0+255),w,b
  3360   001AA2  0A00               	xorlw	0	; case 0
  3361   001AA4  B4D8               	btfsc	status,2,c
  3362   001AA6  EF38  F00D         	goto	l540
  3363   001AAA  0A01               	xorlw	1	; case 1
  3364   001AAC  B4D8               	btfsc	status,2,c
  3365   001AAE  EF3B  F00D         	goto	l542
  3366   001AB2  0A03               	xorlw	3	; case 2
  3367   001AB4  B4D8               	btfsc	status,2,c
  3368   001AB6  EF3E  F00D         	goto	l543
  3369   001ABA  EF34  F00D         	goto	l4172
  3370   001ABE                     l4180:
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 234:     return ret;
  3374   001ABE  5183               	movf	Interrupt_INTx_Disable@ret& (0+255),w,b
  3375   001AC0                     
  3376                           ; BSR set to: 0
  3377   001AC0  0012               	return		;funcret
  3378   001AC2                     __end_of_Interrupt_INTx_Disable:
  3379                           	callstack 0
  3380                           
  3381 ;; *************** function _Interrupt_Manager_Low *****************
  3382 ;; Defined at:
  3383 ;;		line 26 in file "MCAL_LAYER/Interrupt/mcal_interrupt_manager.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;Total ram usage:        9 bytes
  3402 ;; Hardware stack levels used: 1
  3403 ;; Hardware stack levels required when called: 9
  3404 ;; This function calls:
  3405 ;;		_INT2_ISR
  3406 ;; This function is called by:
  3407 ;;		Interrupt level 1
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	intcodelo
  3412   000018                     __pintcodelo:
  3413                           	callstack 0
  3414   000018                     _Interrupt_Manager_Low:
  3415                           	callstack 16
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;incstack = 0
  3419   000018  806A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3420   00001A  CFD8 F043          	movff	status,??_Interrupt_Manager_Low
  3421   00001E  CFE8 F044          	movff	wreg,??_Interrupt_Manager_Low+1
  3422   000022  CFE0 F045          	movff	bsr,??_Interrupt_Manager_Low+2
  3423   000026  CFFA F046          	movff	pclath,??_Interrupt_Manager_Low+3
  3424   00002A  CFFB F047          	movff	pclatu,??_Interrupt_Manager_Low+4
  3425   00002E  CFD9 F048          	movff	fsr2l,??_Interrupt_Manager_Low+5
  3426   000032  CFDA F049          	movff	fsr2h,??_Interrupt_Manager_Low+6
  3427   000036  CFF3 F04A          	movff	prodl,??_Interrupt_Manager_Low+7
  3428   00003A  CFF4 F04B          	movff	prodh,??_Interrupt_Manager_Low+8
  3429   00003E                     
  3430                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 28:     if ((INTCON3bits.INT2IE == 1) &&
      +                           (INTCON3bits.INT2IF == 1)) {
  3431   00003E  A8F0               	btfss	240,4,c	;volatile
  3432   000040  EF24  F000         	goto	i1u292_21
  3433   000044  EF26  F000         	goto	i1u292_20
  3434   000048                     i1u292_21:
  3435   000048  EF2F  F000         	goto	i1l696
  3436   00004C                     i1u292_20:
  3437   00004C  A2F0               	btfss	240,1,c	;volatile
  3438   00004E  EF2B  F000         	goto	i1u293_21
  3439   000052  EF2D  F000         	goto	i1u293_20
  3440   000056                     i1u293_21:
  3441   000056  EF2F  F000         	goto	i1l696
  3442   00005A                     i1u293_20:
  3443   00005A                     
  3444                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 29:         INT2_ISR();
  3445   00005A  EC46  F00E         	call	_INT2_ISR	;wreg free
  3446   00005E                     i1l696:
  3447   00005E  C04B  FFF4         	movff	??_Interrupt_Manager_Low+8,prodh
  3448   000062  C04A  FFF3         	movff	??_Interrupt_Manager_Low+7,prodl
  3449   000066  C049  FFDA         	movff	??_Interrupt_Manager_Low+6,fsr2h
  3450   00006A  C048  FFD9         	movff	??_Interrupt_Manager_Low+5,fsr2l
  3451   00006E  C047  FFFB         	movff	??_Interrupt_Manager_Low+4,pclatu
  3452   000072  C046  FFFA         	movff	??_Interrupt_Manager_Low+3,pclath
  3453   000076  C045  FFE0         	movff	??_Interrupt_Manager_Low+2,bsr
  3454   00007A  C044  FFE8         	movff	??_Interrupt_Manager_Low+1,wreg
  3455   00007E  C043  FFD8         	movff	??_Interrupt_Manager_Low,status
  3456   000082  906A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3457   000084  0010               	retfie	
  3458   000086                     __end_of_Interrupt_Manager_Low:
  3459                           	callstack 0
  3460                           
  3461 ;; *************** function _INT2_ISR *****************
  3462 ;; Defined at:
  3463 ;;		line 466 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;Total ram usage:        0 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; Hardware stack levels required when called: 8
  3484 ;; This function calls:
  3485 ;;		NULL
  3486 ;;		_timer_increment
  3487 ;; This function is called by:
  3488 ;;		_Interrupt_Manager_Low
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text22
  3493   001C8C                     __ptext22:
  3494                           	callstack 0
  3495   001C8C                     _INT2_ISR:
  3496                           	callstack 16
  3497   001C8C                     
  3498                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 467:     (INTCON3bits.INT2IF = 0);
  3499   001C8C  92F0               	bcf	240,1,c	;volatile
  3500   001C8E                     
  3501                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 468:     if (INT2_Interrupt_Handler)
  3502   001C8E  505C               	movf	_INT2_Interrupt_Handler^0,w,c
  3503   001C90  105D               	iorwf	(_INT2_Interrupt_Handler+1)^0,w,c
  3504   001C92  B4D8               	btfsc	status,2,c
  3505   001C94  EF4E  F00E         	goto	i1u225_21
  3506   001C98  EF50  F00E         	goto	i1u225_20
  3507   001C9C                     i1u225_21:
  3508   001C9C  EF5C  F00E         	goto	i1l633
  3509   001CA0                     i1u225_20:
  3510   001CA0                     
  3511                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 469:         INT2_Interrupt_Handler();
  3512   001CA0  D802               	call	i1u226_28
  3513   001CA2  EF5C  F00E         	goto	i1u226_29
  3514   001CA6                     i1u226_28:
  3515   001CA6  0005               	push	
  3516   001CA8  6EFA               	movwf	pclath,c
  3517   001CAA  505C               	movf	_INT2_Interrupt_Handler^0,w,c
  3518   001CAC  6EFD               	movwf	tosl,c
  3519   001CAE  505D               	movf	(_INT2_Interrupt_Handler+1)^0,w,c
  3520   001CB0  6EFE               	movwf	tosh,c
  3521   001CB2  6AFF               	clrf	tosu,c
  3522   001CB4  50FA               	movf	pclath,w,c
  3523   001CB6  0012               	return		;indir
  3524   001CB8                     i1u226_29:
  3525   001CB8                     i1l633:
  3526   001CB8  0012               	return		;funcret
  3527   001CBA                     __end_of_INT2_ISR:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _timer_increment *****************
  3531 ;; Defined at:
  3532 ;;		line 42 in file "app.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;Total ram usage:        0 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 7
  3553 ;; This function calls:
  3554 ;;		_led_toggle_status
  3555 ;; This function is called by:
  3556 ;;		_INT0_ISR
  3557 ;;		_INT1_ISR
  3558 ;;		_INT2_ISR
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text23
  3563   001E10                     __ptext23:
  3564                           	callstack 0
  3565   001E10                     _timer_increment:
  3566                           	callstack 0
  3567                           
  3568                           ;Skip over the trampoline to the duplicate function for level 2
  3569   001E10  A26A               	btfss	int$flags,1,c
  3570   001E12  EF0D  F00F         	goto	_timer_increment$intlevel1
  3571   001E16  EF1D  F00F         	goto	i2_timer_increment
  3572   001E1A                     _timer_increment$intlevel1:
  3573                           	callstack 16
  3574   001E1A                     
  3575                           ;app.c: 43:     timer++;
  3576   001E1A  2A62               	incf	_timer^0,f,c
  3577   001E1C                     
  3578                           ;app.c: 44:     ret = led_toggle_status(&led);
  3579   001E1C  0E2A               	movlw	low _led
  3580   001E1E  6E3F               	movwf	led_toggle_status@Led^0,c
  3581   001E20  ECB5  F00C         	call	_led_toggle_status	;wreg free
  3582   001E24  6E15               	movwf	_ret^0,c
  3583   001E26  0012               	return		;funcret
  3584   001E28                     __end_of_timer_increment:
  3585                           	callstack 0
  3586                           
  3587 ;; *************** function _led_toggle_status *****************
  3588 ;; Defined at:
  3589 ;;		line 87 in file "ECU_LAYER/Led/ecu_led.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  Led             1   20[COMRAM] PTR const struct .
  3592 ;;		 -> led(1), 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  pin_obj         1   23[COMRAM] struct .
  3595 ;;  ret             1   22[COMRAM] unsigned char 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  1    wreg      unsigned char 
  3598 ;; Registers used:
  3599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3605 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;Total ram usage:        4 bytes
  3610 ;; Hardware stack levels used: 1
  3611 ;; Hardware stack levels required when called: 6
  3612 ;; This function calls:
  3613 ;;		_gpio_pin_toggle_logic
  3614 ;; This function is called by:
  3615 ;;		_timer_increment
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text24
  3620   00196A                     __ptext24:
  3621                           	callstack 0
  3622   00196A                     _led_toggle_status:
  3623                           	callstack 16
  3624   00196A                     
  3625                           ;ECU_LAYER/Led/ecu_led.c: 88:     Std_ReturnType ret = (Std_ReturnType)0X01;
  3626   00196A  0E01               	movlw	1
  3627   00196C  6E41               	movwf	led_toggle_status@ret^0,c
  3628                           
  3629                           ;ECU_LAYER/Led/ecu_led.c: 89:     if (((void*)0) == Led) {
  3630   00196E  503F               	movf	led_toggle_status@Led^0,w,c
  3631   001970  A4D8               	btfss	status,2,c
  3632   001972  EFBD  F00C         	goto	i1u181_21
  3633   001976  EFBF  F00C         	goto	i1u181_20
  3634   00197A                     i1u181_21:
  3635   00197A  EFC3  F00C         	goto	i1l272
  3636   00197E                     i1u181_20:
  3637   00197E                     
  3638                           ;ECU_LAYER/Led/ecu_led.c: 90:         ret = (Std_ReturnType)0X00;
  3639   00197E  0E00               	movlw	0
  3640   001980  6E41               	movwf	led_toggle_status@ret^0,c
  3641                           
  3642                           ;ECU_LAYER/Led/ecu_led.c: 91:     } else {
  3643   001982  EFED  F00C         	goto	i1l2998
  3644   001986                     i1l272:
  3645                           
  3646                           ;ECU_LAYER/Led/ecu_led.c: 93:         pin_config_t pin_obj = {
  3647   001986  C066  F042         	movff	led_toggle_status@F3497,led_toggle_status@pin_obj
  3648   00198A  503F               	movf	led_toggle_status@Led^0,w,c
  3649   00198C  6ED9               	movwf	fsr2l,c
  3650   00198E  6ADA               	clrf	fsr2h,c
  3651   001990  50DF               	movf	223,w,c
  3652   001992  0B07               	andlw	7
  3653   001994  6E40               	movwf	??_led_toggle_status^0,c
  3654   001996  5042               	movf	led_toggle_status@pin_obj^0,w,c
  3655   001998  1840               	xorwf	??_led_toggle_status^0,w,c
  3656   00199A  0BF8               	andlw	-8
  3657   00199C  1840               	xorwf	??_led_toggle_status^0,w,c
  3658   00199E  6E42               	movwf	led_toggle_status@pin_obj^0,c
  3659   0019A0  503F               	movf	led_toggle_status@Led^0,w,c
  3660   0019A2  6ED9               	movwf	fsr2l,c
  3661   0019A4  6ADA               	clrf	fsr2h,c
  3662   0019A6  30DF               	rrcf	223,w,c
  3663   0019A8  32E8               	rrcf	wreg,f,c
  3664   0019AA  32E8               	rrcf	wreg,f,c
  3665   0019AC  0B07               	andlw	7
  3666   0019AE  6E40               	movwf	??_led_toggle_status^0,c
  3667   0019B0  4640               	rlncf	??_led_toggle_status^0,f,c
  3668   0019B2  4640               	rlncf	??_led_toggle_status^0,f,c
  3669   0019B4  4640               	rlncf	??_led_toggle_status^0,f,c
  3670   0019B6  5042               	movf	led_toggle_status@pin_obj^0,w,c
  3671   0019B8  1840               	xorwf	??_led_toggle_status^0,w,c
  3672   0019BA  0BC7               	andlw	-57
  3673   0019BC  1840               	xorwf	??_led_toggle_status^0,w,c
  3674   0019BE  6E42               	movwf	led_toggle_status@pin_obj^0,c
  3675   0019C0  9C42               	bcf	led_toggle_status@pin_obj^0,6,c
  3676   0019C2  503F               	movf	led_toggle_status@Led^0,w,c
  3677   0019C4  6ED9               	movwf	fsr2l,c
  3678   0019C6  6ADA               	clrf	fsr2h,c
  3679   0019C8  ACDF               	btfss	indf2,6,c
  3680   0019CA  D002               	bra	i1u182_25
  3681   0019CC  8E42               	bsf	led_toggle_status@pin_obj^0,7,c
  3682   0019CE  D001               	bra	i1u182_27
  3683   0019D0                     i1u182_25:
  3684   0019D0  9E42               	bcf	led_toggle_status@pin_obj^0,7,c
  3685   0019D2                     i1u182_27:
  3686   0019D2                     
  3687                           ;ECU_LAYER/Led/ecu_led.c: 99:         gpio_pin_toggle_logic(&pin_obj);
  3688   0019D2  0E42               	movlw	low led_toggle_status@pin_obj
  3689   0019D4  6E3A               	movwf	gpio_pin_toggle_logic@_pin_config^0,c
  3690   0019D6  ECBB  F00B         	call	_gpio_pin_toggle_logic	;wreg free
  3691   0019DA                     i1l2998:
  3692                           
  3693                           ;ECU_LAYER/Led/ecu_led.c: 101:     return ret;
  3694   0019DA  5041               	movf	led_toggle_status@ret^0,w,c
  3695   0019DC  0012               	return		;funcret
  3696   0019DE                     __end_of_led_toggle_status:
  3697                           	callstack 0
  3698                           
  3699 ;; *************** function _gpio_pin_toggle_logic *****************
  3700 ;; Defined at:
  3701 ;;		line 91 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  _pin_config     1   15[COMRAM] PTR const struct .
  3704 ;;		 -> led_toggle_status@pin_obj(1), 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  ret             1    0        unsigned char 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      unsigned char 
  3709 ;; Registers used:
  3710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3716 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;Total ram usage:        5 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; Hardware stack levels required when called: 5
  3723 ;; This function calls:
  3724 ;;		Nothing
  3725 ;; This function is called by:
  3726 ;;		_led_toggle_status
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text25
  3731   001776                     __ptext25:
  3732                           	callstack 0
  3733   001776                     _gpio_pin_toggle_logic:
  3734                           	callstack 16
  3735   001776                     
  3736                           ;MCAL_Layer/GPIO/hal_gpio.c: 93:     if (((void*)0) == _pin_config || _pin_config->pin >
      +                           8 - 1) {
  3737   001776  503A               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  3738   001778  B4D8               	btfsc	status,2,c
  3739   00177A  EFC1  F00B         	goto	i1u170_21
  3740   00177E  EFC3  F00B         	goto	i1u170_20
  3741   001782                     i1u170_21:
  3742   001782  EFD3  F00B         	goto	i1l2918
  3743   001786                     i1u170_20:
  3744   001786  503A               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  3745   001788  6ED9               	movwf	fsr2l,c
  3746   00178A  6ADA               	clrf	fsr2h,c
  3747   00178C  30DF               	rrcf	223,w,c
  3748   00178E  32E8               	rrcf	wreg,f,c
  3749   001790  32E8               	rrcf	wreg,f,c
  3750   001792  0B07               	andlw	7
  3751   001794  6E3B               	movwf	??_gpio_pin_toggle_logic^0,c
  3752   001796  0E07               	movlw	7
  3753   001798  643B               	cpfsgt	??_gpio_pin_toggle_logic^0,c
  3754   00179A  EFD1  F00B         	goto	i1u171_21
  3755   00179E  EFD3  F00B         	goto	i1u171_20
  3756   0017A2                     i1u171_21:
  3757   0017A2  EFD5  F00B         	goto	i1l2920
  3758   0017A6                     i1u171_20:
  3759   0017A6                     i1l2918:
  3760                           
  3761                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:     } else {
  3762   0017A6  EFFB  F00B         	goto	i1l411
  3763   0017AA                     i1l2920:
  3764                           
  3765                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:         (*lat_registers[_pin_config->port] ^= ((uint8)1
      +                           << _pin_config->pin));
  3766   0017AA  503A               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  3767   0017AC  6ED9               	movwf	fsr2l,c
  3768   0017AE  6ADA               	clrf	fsr2h,c
  3769   0017B0  30DF               	rrcf	223,w,c
  3770   0017B2  32E8               	rrcf	wreg,f,c
  3771   0017B4  32E8               	rrcf	wreg,f,c
  3772   0017B6  0B07               	andlw	7
  3773   0017B8  6E3B               	movwf	??_gpio_pin_toggle_logic^0,c
  3774   0017BA  0E01               	movlw	1
  3775   0017BC  6E3C               	movwf	(??_gpio_pin_toggle_logic+1)^0,c
  3776   0017BE  2A3B               	incf	??_gpio_pin_toggle_logic^0,f,c
  3777   0017C0  EFE4  F00B         	goto	i1u172_24
  3778   0017C4                     i1u172_25:
  3779   0017C4  90D8               	bcf	status,0,c
  3780   0017C6  363C               	rlcf	(??_gpio_pin_toggle_logic+1)^0,f,c
  3781   0017C8                     i1u172_24:
  3782   0017C8  2E3B               	decfsz	??_gpio_pin_toggle_logic^0,f,c
  3783   0017CA  EFE2  F00B         	goto	i1u172_25
  3784   0017CE  503A               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  3785   0017D0  6ED9               	movwf	fsr2l,c
  3786   0017D2  6ADA               	clrf	fsr2h,c
  3787   0017D4  50DF               	movf	223,w,c
  3788   0017D6  0B07               	andlw	7
  3789   0017D8  0D02               	mullw	2
  3790   0017DA  50F3               	movf	243,w,c
  3791   0017DC  0F01               	addlw	low _lat_registers
  3792   0017DE  6ED9               	movwf	fsr2l,c
  3793   0017E0  6ADA               	clrf	fsr2h,c
  3794   0017E2  CFDE F03D          	movff	postinc2,??_gpio_pin_toggle_logic+2
  3795   0017E6  CFDD F03E          	movff	postdec2,??_gpio_pin_toggle_logic+3
  3796   0017EA  C03D  FFD9         	movff	??_gpio_pin_toggle_logic+2,fsr2l
  3797   0017EE  C03E  FFDA         	movff	??_gpio_pin_toggle_logic+3,fsr2h
  3798   0017F2  503C               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
  3799   0017F4  1ADF               	xorwf	indf2,f,c
  3800   0017F6                     i1l411:
  3801   0017F6  0012               	return		;funcret
  3802   0017F8                     __end_of_gpio_pin_toggle_logic:
  3803                           	callstack 0
  3804                           
  3805 ;; *************** function _Interrupt_Manager_High *****************
  3806 ;; Defined at:
  3807 ;;		line 14 in file "MCAL_LAYER/Interrupt/mcal_interrupt_manager.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;Total ram usage:        6 bytes
  3826 ;; Hardware stack levels used: 1
  3827 ;; Hardware stack levels required when called: 4
  3828 ;; This function calls:
  3829 ;;		_INT0_ISR
  3830 ;;		_INT1_ISR
  3831 ;; This function is called by:
  3832 ;;		Interrupt level 2
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	intcode
  3837   000008                     __pintcode:
  3838                           	callstack 0
  3839   000008                     _Interrupt_Manager_High:
  3840                           	callstack 16
  3841                           
  3842                           ;incstack = 0
  3843   000008  826A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3844   00000A  ED7A  F00C         	call	int_func,f	;refresh shadow registers
  3845                           
  3846                           	psect	intcode_body
  3847   0018F4                     __pintcode_body:
  3848                           	callstack 16
  3849   0018F4                     int_func:
  3850                           	callstack 16
  3851   0018F4  0006               	pop		; remove dummy address from shadow register refresh
  3852   0018F6  CFFA F034          	movff	pclath,??_Interrupt_Manager_High
  3853   0018FA  CFFB F035          	movff	pclatu,??_Interrupt_Manager_High+1
  3854   0018FE  CFD9 F036          	movff	fsr2l,??_Interrupt_Manager_High+2
  3855   001902  CFDA F037          	movff	fsr2h,??_Interrupt_Manager_High+3
  3856   001906  CFF3 F038          	movff	prodl,??_Interrupt_Manager_High+4
  3857   00190A  CFF4 F039          	movff	prodh,??_Interrupt_Manager_High+5
  3858   00190E                     
  3859                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 16:     if ((INTCONbits.INT0IE == 1) && 
      +                          (INTCONbits.INT0IF == 1)) {
  3860   00190E  A8F2               	btfss	242,4,c	;volatile
  3861   001910  EF8C  F00C         	goto	i2u288_41
  3862   001914  EF8E  F00C         	goto	i2u288_40
  3863   001918                     i2u288_41:
  3864   001918  EF97  F00C         	goto	i2l4008
  3865   00191C                     i2u288_40:
  3866   00191C  A2F2               	btfss	242,1,c	;volatile
  3867   00191E  EF93  F00C         	goto	i2u289_41
  3868   001922  EF95  F00C         	goto	i2u289_40
  3869   001926                     i2u289_41:
  3870   001926  EF97  F00C         	goto	i2l4008
  3871   00192A                     i2u289_40:
  3872   00192A                     
  3873                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 17:         INT0_ISR();
  3874   00192A  EC74  F00E         	call	_INT0_ISR	;wreg free
  3875   00192E                     i2l4008:
  3876                           
  3877                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 20:     if ((INTCON3bits.INT1IE == 1) &&
      +                           (INTCON3bits.INT1IF == 1)) {
  3878   00192E  A6F0               	btfss	240,3,c	;volatile
  3879   001930  EF9C  F00C         	goto	i2u290_41
  3880   001934  EF9E  F00C         	goto	i2u290_40
  3881   001938                     i2u290_41:
  3882   001938  EFA7  F00C         	goto	i2l690
  3883   00193C                     i2u290_40:
  3884   00193C  A0F0               	btfss	240,0,c	;volatile
  3885   00193E  EFA3  F00C         	goto	i2u291_41
  3886   001942  EFA5  F00C         	goto	i2u291_40
  3887   001946                     i2u291_41:
  3888   001946  EFA7  F00C         	goto	i2l690
  3889   00194A                     i2u291_40:
  3890   00194A                     
  3891                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 21:         INT1_ISR();
  3892   00194A  EC5D  F00E         	call	_INT1_ISR	;wreg free
  3893   00194E                     i2l690:
  3894   00194E  C039  FFF4         	movff	??_Interrupt_Manager_High+5,prodh
  3895   001952  C038  FFF3         	movff	??_Interrupt_Manager_High+4,prodl
  3896   001956  C037  FFDA         	movff	??_Interrupt_Manager_High+3,fsr2h
  3897   00195A  C036  FFD9         	movff	??_Interrupt_Manager_High+2,fsr2l
  3898   00195E  C035  FFFB         	movff	??_Interrupt_Manager_High+1,pclatu
  3899   001962  C034  FFFA         	movff	??_Interrupt_Manager_High,pclath
  3900   001966  926A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3901   001968  0011               	retfie		f
  3902   00196A                     __end_of_Interrupt_Manager_High:
  3903                           	callstack 0
  3904                           
  3905 ;; *************** function _INT1_ISR *****************
  3906 ;; Defined at:
  3907 ;;		line 460 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;Total ram usage:        0 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; Hardware stack levels required when called: 3
  3928 ;; This function calls:
  3929 ;;		NULL
  3930 ;;		i2_timer_increment
  3931 ;; This function is called by:
  3932 ;;		_Interrupt_Manager_High
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text27
  3937   001CBA                     __ptext27:
  3938                           	callstack 0
  3939   001CBA                     _INT1_ISR:
  3940                           	callstack 16
  3941   001CBA                     
  3942                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 461:     (INTCON3bits.INT1IF = 0);
  3943   001CBA  90F0               	bcf	240,0,c	;volatile
  3944   001CBC                     
  3945                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 462:     if (INT1_Interrupt_Handler)
  3946   001CBC  505E               	movf	_INT1_Interrupt_Handler^0,w,c
  3947   001CBE  105F               	iorwf	(_INT1_Interrupt_Handler+1)^0,w,c
  3948   001CC0  B4D8               	btfsc	status,2,c
  3949   001CC2  EF65  F00E         	goto	i2u223_41
  3950   001CC6  EF67  F00E         	goto	i2u223_40
  3951   001CCA                     i2u223_41:
  3952   001CCA  EF73  F00E         	goto	i2l629
  3953   001CCE                     i2u223_40:
  3954   001CCE                     
  3955                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 463:         INT1_Interrupt_Handler();
  3956   001CCE  D802               	call	i2u224_48
  3957   001CD0  EF73  F00E         	goto	i2u224_49
  3958   001CD4                     i2u224_48:
  3959   001CD4  0005               	push	
  3960   001CD6  6EFA               	movwf	pclath,c
  3961   001CD8  505E               	movf	_INT1_Interrupt_Handler^0,w,c
  3962   001CDA  6EFD               	movwf	tosl,c
  3963   001CDC  505F               	movf	(_INT1_Interrupt_Handler+1)^0,w,c
  3964   001CDE  6EFE               	movwf	tosh,c
  3965   001CE0  6AFF               	clrf	tosu,c
  3966   001CE2  50FA               	movf	pclath,w,c
  3967   001CE4  0012               	return		;indir
  3968   001CE6                     i2u224_49:
  3969   001CE6                     i2l629:
  3970   001CE6  0012               	return		;funcret
  3971   001CE8                     __end_of_INT1_ISR:
  3972                           	callstack 0
  3973                           
  3974 ;; *************** function _INT0_ISR *****************
  3975 ;; Defined at:
  3976 ;;		line 454 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;Total ram usage:        0 bytes
  3995 ;; Hardware stack levels used: 1
  3996 ;; Hardware stack levels required when called: 3
  3997 ;; This function calls:
  3998 ;;		NULL
  3999 ;;		i2_timer_increment
  4000 ;; This function is called by:
  4001 ;;		_Interrupt_Manager_High
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text28
  4006   001CE8                     __ptext28:
  4007                           	callstack 0
  4008   001CE8                     _INT0_ISR:
  4009                           	callstack 16
  4010   001CE8                     
  4011                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 455:     (INTCONbits.INT0IF = 0);
  4012   001CE8  92F2               	bcf	242,1,c	;volatile
  4013   001CEA                     
  4014                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 456:     if (INT0_Interrupt_Handler)
  4015   001CEA  5060               	movf	_INT0_Interrupt_Handler^0,w,c
  4016   001CEC  1061               	iorwf	(_INT0_Interrupt_Handler+1)^0,w,c
  4017   001CEE  B4D8               	btfsc	status,2,c
  4018   001CF0  EF7C  F00E         	goto	i2u221_41
  4019   001CF4  EF7E  F00E         	goto	i2u221_40
  4020   001CF8                     i2u221_41:
  4021   001CF8  EF8A  F00E         	goto	i2l625
  4022   001CFC                     i2u221_40:
  4023   001CFC                     
  4024                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 457:         INT0_Interrupt_Handler();
  4025   001CFC  D802               	call	i2u222_48
  4026   001CFE  EF8A  F00E         	goto	i2u222_49
  4027   001D02                     i2u222_48:
  4028   001D02  0005               	push	
  4029   001D04  6EFA               	movwf	pclath,c
  4030   001D06  5060               	movf	_INT0_Interrupt_Handler^0,w,c
  4031   001D08  6EFD               	movwf	tosl,c
  4032   001D0A  5061               	movf	(_INT0_Interrupt_Handler+1)^0,w,c
  4033   001D0C  6EFE               	movwf	tosh,c
  4034   001D0E  6AFF               	clrf	tosu,c
  4035   001D10  50FA               	movf	pclath,w,c
  4036   001D12  0012               	return		;indir
  4037   001D14                     i2u222_49:
  4038   001D14                     i2l625:
  4039   001D14  0012               	return		;funcret
  4040   001D16                     __end_of_INT0_ISR:
  4041                           	callstack 0
  4042                           
  4043 ;; *************** function i2_timer_increment *****************
  4044 ;; Defined at:
  4045 ;;		line 42 in file "app.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      void 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4063 ;;Total ram usage:        0 bytes
  4064 ;; Hardware stack levels used: 1
  4065 ;; Hardware stack levels required when called: 2
  4066 ;; This function calls:
  4067 ;;		i2_led_toggle_status
  4068 ;; This function is called by:
  4069 ;;		_INT0_ISR
  4070 ;;		_INT1_ISR
  4071 ;;		_INT2_ISR
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text29
  4076   001E3A                     __ptext29:
  4077                           	callstack 0
  4078   001E3A                     i2_timer_increment:
  4079                           	callstack 16
  4080   001E3A                     
  4081                           ;app.c: 43:     timer++;
  4082   001E3A  2A62               	incf	_timer^0,f,c
  4083   001E3C                     
  4084                           ;app.c: 44:     ret = led_toggle_status(&led);
  4085   001E3C  0E2A               	movlw	low _led
  4086   001E3E  6E30               	movwf	i2led_toggle_status@Led^0,c
  4087   001E40  ECEF  F00C         	call	i2_led_toggle_status	;wreg free
  4088   001E44  6E15               	movwf	_ret^0,c
  4089   001E46  0012               	return		;funcret
  4090   001E48                     __end_ofi2_timer_increment:
  4091                           	callstack 0
  4092                           
  4093 ;; *************** function i2_led_toggle_status *****************
  4094 ;; Defined at:
  4095 ;;		line 87 in file "ECU_LAYER/Led/ecu_led.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  Led             1    5[COMRAM] PTR const struct .
  4098 ;;		 -> led(1), 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  pin_obj         1    8[COMRAM] struct .
  4101 ;;  ret             1    7[COMRAM] unsigned char 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      unsigned char 
  4104 ;; Registers used:
  4105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4111 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;Total ram usage:        4 bytes
  4116 ;; Hardware stack levels used: 1
  4117 ;; Hardware stack levels required when called: 1
  4118 ;; This function calls:
  4119 ;;		i2_gpio_pin_toggle_logic
  4120 ;; This function is called by:
  4121 ;;		i2_timer_increment
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text30
  4126   0019DE                     __ptext30:
  4127                           	callstack 0
  4128   0019DE                     i2_led_toggle_status:
  4129                           	callstack 16
  4130   0019DE                     
  4131                           ;ECU_LAYER/Led/ecu_led.c: 88:     Std_ReturnType ret = (Std_ReturnType)0X01;
  4132   0019DE  0E01               	movlw	1
  4133   0019E0  6E32               	movwf	i2led_toggle_status@ret^0,c
  4134                           
  4135                           ;ECU_LAYER/Led/ecu_led.c: 89:     if (((void*)0) == Led) {
  4136   0019E2  5030               	movf	i2led_toggle_status@Led^0,w,c
  4137   0019E4  A4D8               	btfss	status,2,c
  4138   0019E6  EFF7  F00C         	goto	i2u200_41
  4139   0019EA  EFF9  F00C         	goto	i2u200_40
  4140   0019EE                     i2u200_41:
  4141   0019EE  EFFD  F00C         	goto	i2l272
  4142   0019F2                     i2u200_40:
  4143   0019F2                     
  4144                           ;ECU_LAYER/Led/ecu_led.c: 90:         ret = (Std_ReturnType)0X00;
  4145   0019F2  0E00               	movlw	0
  4146   0019F4  6E32               	movwf	i2led_toggle_status@ret^0,c
  4147                           
  4148                           ;ECU_LAYER/Led/ecu_led.c: 91:     } else {
  4149   0019F6  EF27  F00D         	goto	i2l3168
  4150   0019FA                     i2l272:
  4151                           
  4152                           ;ECU_LAYER/Led/ecu_led.c: 93:         pin_config_t pin_obj = {
  4153   0019FA  C066  F033         	movff	led_toggle_status@F3497,i2led_toggle_status@pin_obj
  4154   0019FE  5030               	movf	i2led_toggle_status@Led^0,w,c
  4155   001A00  6ED9               	movwf	fsr2l,c
  4156   001A02  6ADA               	clrf	fsr2h,c
  4157   001A04  50DF               	movf	223,w,c
  4158   001A06  0B07               	andlw	7
  4159   001A08  6E31               	movwf	??i2_led_toggle_status^0,c
  4160   001A0A  5033               	movf	i2led_toggle_status@pin_obj^0,w,c
  4161   001A0C  1831               	xorwf	??i2_led_toggle_status^0,w,c
  4162   001A0E  0BF8               	andlw	-8
  4163   001A10  1831               	xorwf	??i2_led_toggle_status^0,w,c
  4164   001A12  6E33               	movwf	i2led_toggle_status@pin_obj^0,c
  4165   001A14  5030               	movf	i2led_toggle_status@Led^0,w,c
  4166   001A16  6ED9               	movwf	fsr2l,c
  4167   001A18  6ADA               	clrf	fsr2h,c
  4168   001A1A  30DF               	rrcf	223,w,c
  4169   001A1C  32E8               	rrcf	wreg,f,c
  4170   001A1E  32E8               	rrcf	wreg,f,c
  4171   001A20  0B07               	andlw	7
  4172   001A22  6E31               	movwf	??i2_led_toggle_status^0,c
  4173   001A24  4631               	rlncf	??i2_led_toggle_status^0,f,c
  4174   001A26  4631               	rlncf	??i2_led_toggle_status^0,f,c
  4175   001A28  4631               	rlncf	??i2_led_toggle_status^0,f,c
  4176   001A2A  5033               	movf	i2led_toggle_status@pin_obj^0,w,c
  4177   001A2C  1831               	xorwf	??i2_led_toggle_status^0,w,c
  4178   001A2E  0BC7               	andlw	-57
  4179   001A30  1831               	xorwf	??i2_led_toggle_status^0,w,c
  4180   001A32  6E33               	movwf	i2led_toggle_status@pin_obj^0,c
  4181   001A34  9C33               	bcf	i2led_toggle_status@pin_obj^0,6,c
  4182   001A36  5030               	movf	i2led_toggle_status@Led^0,w,c
  4183   001A38  6ED9               	movwf	fsr2l,c
  4184   001A3A  6ADA               	clrf	fsr2h,c
  4185   001A3C  ACDF               	btfss	indf2,6,c
  4186   001A3E  D002               	bra	i2u201_45
  4187   001A40  8E33               	bsf	i2led_toggle_status@pin_obj^0,7,c
  4188   001A42  D001               	bra	i2u201_47
  4189   001A44                     i2u201_45:
  4190   001A44  9E33               	bcf	i2led_toggle_status@pin_obj^0,7,c
  4191   001A46                     i2u201_47:
  4192   001A46                     
  4193                           ;ECU_LAYER/Led/ecu_led.c: 99:         gpio_pin_toggle_logic(&pin_obj);
  4194   001A46  0E33               	movlw	low i2led_toggle_status@pin_obj
  4195   001A48  6E2B               	movwf	i2gpio_pin_toggle_logic@_pin_config^0,c
  4196   001A4A  ECFC  F00B         	call	i2_gpio_pin_toggle_logic	;wreg free
  4197   001A4E                     i2l3168:
  4198                           
  4199                           ;ECU_LAYER/Led/ecu_led.c: 101:     return ret;
  4200   001A4E  5032               	movf	i2led_toggle_status@ret^0,w,c
  4201   001A50  0012               	return		;funcret
  4202   001A52                     __end_ofi2_led_toggle_status:
  4203                           	callstack 0
  4204                           
  4205 ;; *************** function i2_gpio_pin_toggle_logic *****************
  4206 ;; Defined at:
  4207 ;;		line 91 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  4210 ;;		 -> i2led_toggle_status@pin_obj(1), led_toggle_status@pin_obj(1), 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  ret             1    0        unsigned char 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      unsigned char 
  4215 ;; Registers used:
  4216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4222 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;Total ram usage:        5 bytes
  4227 ;; Hardware stack levels used: 1
  4228 ;; This function calls:
  4229 ;;		Nothing
  4230 ;; This function is called by:
  4231 ;;		i2_led_toggle_status
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text31
  4236   0017F8                     __ptext31:
  4237                           	callstack 0
  4238   0017F8                     i2_gpio_pin_toggle_logic:
  4239                           	callstack 16
  4240   0017F8                     
  4241                           ;MCAL_Layer/GPIO/hal_gpio.c: 93:     if (((void*)0) == _pin_config || _pin_config->pin >
      +                           8 - 1) {
  4242   0017F8  502B               	movf	i2gpio_pin_toggle_logic@_pin_config^0,w,c
  4243   0017FA  B4D8               	btfsc	status,2,c
  4244   0017FC  EF02  F00C         	goto	i2u176_41
  4245   001800  EF04  F00C         	goto	i2u176_40
  4246   001804                     i2u176_41:
  4247   001804  EF14  F00C         	goto	i2l2964
  4248   001808                     i2u176_40:
  4249   001808  502B               	movf	i2gpio_pin_toggle_logic@_pin_config^0,w,c
  4250   00180A  6ED9               	movwf	fsr2l,c
  4251   00180C  6ADA               	clrf	fsr2h,c
  4252   00180E  30DF               	rrcf	223,w,c
  4253   001810  32E8               	rrcf	wreg,f,c
  4254   001812  32E8               	rrcf	wreg,f,c
  4255   001814  0B07               	andlw	7
  4256   001816  6E2C               	movwf	??i2_gpio_pin_toggle_logic^0,c
  4257   001818  0E07               	movlw	7
  4258   00181A  642C               	cpfsgt	??i2_gpio_pin_toggle_logic^0,c
  4259   00181C  EF12  F00C         	goto	i2u177_41
  4260   001820  EF14  F00C         	goto	i2u177_40
  4261   001824                     i2u177_41:
  4262   001824  EF16  F00C         	goto	i2l2966
  4263   001828                     i2u177_40:
  4264   001828                     i2l2964:
  4265                           
  4266                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:     } else {
  4267   001828  EF3C  F00C         	goto	i2l411
  4268   00182C                     i2l2966:
  4269                           
  4270                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:         (*lat_registers[_pin_config->port] ^= ((uint8)1
      +                           << _pin_config->pin));
  4271   00182C  502B               	movf	i2gpio_pin_toggle_logic@_pin_config^0,w,c
  4272   00182E  6ED9               	movwf	fsr2l,c
  4273   001830  6ADA               	clrf	fsr2h,c
  4274   001832  30DF               	rrcf	223,w,c
  4275   001834  32E8               	rrcf	wreg,f,c
  4276   001836  32E8               	rrcf	wreg,f,c
  4277   001838  0B07               	andlw	7
  4278   00183A  6E2C               	movwf	??i2_gpio_pin_toggle_logic^0,c
  4279   00183C  0E01               	movlw	1
  4280   00183E  6E2D               	movwf	(??i2_gpio_pin_toggle_logic+1)^0,c
  4281   001840  2A2C               	incf	??i2_gpio_pin_toggle_logic^0,f,c
  4282   001842  EF25  F00C         	goto	i2u178_44
  4283   001846                     i2u178_45:
  4284   001846  90D8               	bcf	status,0,c
  4285   001848  362D               	rlcf	(??i2_gpio_pin_toggle_logic+1)^0,f,c
  4286   00184A                     i2u178_44:
  4287   00184A  2E2C               	decfsz	??i2_gpio_pin_toggle_logic^0,f,c
  4288   00184C  EF23  F00C         	goto	i2u178_45
  4289   001850  502B               	movf	i2gpio_pin_toggle_logic@_pin_config^0,w,c
  4290   001852  6ED9               	movwf	fsr2l,c
  4291   001854  6ADA               	clrf	fsr2h,c
  4292   001856  50DF               	movf	223,w,c
  4293   001858  0B07               	andlw	7
  4294   00185A  0D02               	mullw	2
  4295   00185C  50F3               	movf	243,w,c
  4296   00185E  0F01               	addlw	low _lat_registers
  4297   001860  6ED9               	movwf	fsr2l,c
  4298   001862  6ADA               	clrf	fsr2h,c
  4299   001864  CFDE F02E          	movff	postinc2,??i2_gpio_pin_toggle_logic+2
  4300   001868  CFDD F02F          	movff	postdec2,??i2_gpio_pin_toggle_logic+3
  4301   00186C  C02E  FFD9         	movff	??i2_gpio_pin_toggle_logic+2,fsr2l
  4302   001870  C02F  FFDA         	movff	??i2_gpio_pin_toggle_logic+3,fsr2h
  4303   001874  502D               	movf	(??i2_gpio_pin_toggle_logic+1)^0,w,c
  4304   001876  1ADF               	xorwf	indf2,f,c
  4305   001878                     i2l411:
  4306   001878  0012               	return		;funcret
  4307   00187A                     __end_ofi2_gpio_pin_toggle_logic:
  4308                           	callstack 0
  4309                           
  4310                           	psect	text32
  4311   000000                     __ptext32:
  4312                           	callstack 0
  4313   000000                     
  4314                           	psect	rparam
  4315   000000                     
  4316                           	psect	temp
  4317   00006A                     btemp:
  4318                           	callstack 0
  4319   00006A                     	ds	1
  4320   000000                     int$flags	set	btemp
  4321   000000                     wtemp8	set	btemp+1
  4322   000000                     ttemp5	set	btemp+1
  4323   000000                     ttemp6	set	btemp+4
  4324   000000                     ttemp7	set	btemp+8
  4325                           
  4326                           	psect	config
  4327                           
  4328                           ; Padding undefined space
  4329   300000                     	org	3145728
  4330   300000  FF                 	db	255
  4331                           
  4332                           ;Config register CONFIG1H @ 0x300001
  4333                           ;	Oscillator Selection bits
  4334                           ;	OSC = HS, HS oscillator
  4335                           ;	Fail-Safe Clock Monitor Enable bit
  4336                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4337                           ;	Internal/External Oscillator Switchover bit
  4338                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4339   300001                     	org	3145729
  4340   300001  02                 	db	2
  4341                           
  4342                           ;Config register CONFIG2L @ 0x300002
  4343                           ;	Power-up Timer Enable bit
  4344                           ;	PWRT = OFF, PWRT disabled
  4345                           ;	Brown-out Reset Enable bits
  4346                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4347                           ;	Brown Out Reset Voltage bits
  4348                           ;	BORV = 1, 
  4349   300002                     	org	3145730
  4350   300002  09                 	db	9
  4351                           
  4352                           ;Config register CONFIG2H @ 0x300003
  4353                           ;	Watchdog Timer Enable bit
  4354                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4355                           ;	Watchdog Timer Postscale Select bits
  4356                           ;	WDTPS = 32768, 1:32768
  4357   300003                     	org	3145731
  4358   300003  1E                 	db	30
  4359                           
  4360                           ; Padding undefined space
  4361   300004                     	org	3145732
  4362   300004  FF                 	db	255
  4363                           
  4364                           ;Config register CONFIG3H @ 0x300005
  4365                           ;	CCP2 MUX bit
  4366                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4367                           ;	PORTB A/D Enable bit
  4368                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4369                           ;	Low-Power Timer1 Oscillator Enable bit
  4370                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4371                           ;	MCLR Pin Enable bit
  4372                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4373   300005                     	org	3145733
  4374   300005  81                 	db	129
  4375                           
  4376                           ;Config register CONFIG4L @ 0x300006
  4377                           ;	Stack Full/Underflow Reset Enable bit
  4378                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4379                           ;	Single-Supply ICSP Enable bit
  4380                           ;	LVP = OFF, Single-Supply ICSP disabled
  4381                           ;	Extended Instruction Set Enable bit
  4382                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4383                           ;	Background Debugger Enable bit
  4384                           ;	DEBUG = 0x1, unprogrammed default
  4385   300006                     	org	3145734
  4386   300006  81                 	db	129
  4387                           
  4388                           ; Padding undefined space
  4389   300007                     	org	3145735
  4390   300007  FF                 	db	255
  4391                           
  4392                           ;Config register CONFIG5L @ 0x300008
  4393                           ;	Code Protection bit
  4394                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4395                           ;	Code Protection bit
  4396                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4397                           ;	Code Protection bit
  4398                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4399                           ;	Code Protection bit
  4400                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4401   300008                     	org	3145736
  4402   300008  0F                 	db	15
  4403                           
  4404                           ;Config register CONFIG5H @ 0x300009
  4405                           ;	Boot Block Code Protection bit
  4406                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4407                           ;	Data EEPROM Code Protection bit
  4408                           ;	CPD = OFF, Data EEPROM not code-protected
  4409   300009                     	org	3145737
  4410   300009  C0                 	db	192
  4411                           
  4412                           ;Config register CONFIG6L @ 0x30000A
  4413                           ;	Write Protection bit
  4414                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4415                           ;	Write Protection bit
  4416                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4417                           ;	Write Protection bit
  4418                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4419                           ;	Write Protection bit
  4420                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4421   30000A                     	org	3145738
  4422   30000A  0F                 	db	15
  4423                           
  4424                           ;Config register CONFIG6H @ 0x30000B
  4425                           ;	Configuration Register Write Protection bit
  4426                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4427                           ;	Boot Block Write Protection bit
  4428                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4429                           ;	Data EEPROM Write Protection bit
  4430                           ;	WRTD = OFF, Data EEPROM not write-protected
  4431   30000B                     	org	3145739
  4432   30000B  E0                 	db	224
  4433                           
  4434                           ;Config register CONFIG7L @ 0x30000C
  4435                           ;	Table Read Protection bit
  4436                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4437                           ;	Table Read Protection bit
  4438                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4439                           ;	Table Read Protection bit
  4440                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4441                           ;	Table Read Protection bit
  4442                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4443   30000C                     	org	3145740
  4444   30000C  0F                 	db	15
  4445                           
  4446                           ;Config register CONFIG7H @ 0x30000D
  4447                           ;	Boot Block Table Read Protection bit
  4448                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4449   30000D                     	org	3145741
  4450   30000D  40                 	db	64
  4451                           tosu	equ	0xFFF
  4452                           tosh	equ	0xFFE
  4453                           tosl	equ	0xFFD
  4454                           stkptr	equ	0xFFC
  4455                           pclatu	equ	0xFFB
  4456                           pclath	equ	0xFFA
  4457                           pcl	equ	0xFF9
  4458                           tblptru	equ	0xFF8
  4459                           tblptrh	equ	0xFF7
  4460                           tblptrl	equ	0xFF6
  4461                           tablat	equ	0xFF5
  4462                           prodh	equ	0xFF4
  4463                           prodl	equ	0xFF3
  4464                           indf0	equ	0xFEF
  4465                           postinc0	equ	0xFEE
  4466                           postdec0	equ	0xFED
  4467                           preinc0	equ	0xFEC
  4468                           plusw0	equ	0xFEB
  4469                           fsr0h	equ	0xFEA
  4470                           fsr0l	equ	0xFE9
  4471                           wreg	equ	0xFE8
  4472                           indf1	equ	0xFE7
  4473                           postinc1	equ	0xFE6
  4474                           postdec1	equ	0xFE5
  4475                           preinc1	equ	0xFE4
  4476                           plusw1	equ	0xFE3
  4477                           fsr1h	equ	0xFE2
  4478                           fsr1l	equ	0xFE1
  4479                           bsr	equ	0xFE0
  4480                           indf2	equ	0xFDF
  4481                           postinc2	equ	0xFDE
  4482                           postdec2	equ	0xFDD
  4483                           preinc2	equ	0xFDC
  4484                           plusw2	equ	0xFDB
  4485                           fsr2h	equ	0xFDA
  4486                           fsr2l	equ	0xFD9
  4487                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        52
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     33     105
    BANK0           128     15      25
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    clock$External_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> i2_timer_increment(), timer_increment(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> clock(COMRAM[6]), led_intialize@pin_obj(BANK0[1]), Relay_initialize@pin_obj(COMRAM[1]), segment(COMRAM[5]), 
		 -> segment$segment_pins(COMRAM[4]), segment_10(COMRAM[5]), segment_10$segment_pins(COMRAM[4]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> clock(COMRAM[6]), led_intialize@pin_obj(BANK0[1]), Relay_initialize@pin_obj(COMRAM[1]), segment(COMRAM[5]), 
		 -> segment$segment_pins(COMRAM[4]), segment_10(COMRAM[5]), segment_10$segment_pins(COMRAM[4]), 

    gpio_pin_toggle_logic@_pin_config	PTR const struct . size(1) Largest target is 1
		 -> led_toggle_status@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> clock(COMRAM[6]), led_intialize@pin_obj(BANK0[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), 
		 -> Relay_initialize@pin_obj(COMRAM[1]), Relay_off@pin_obj(COMRAM[1]), Relay_on@pin_obj(COMRAM[1]), segment(COMRAM[5]), 
		 -> segment$segment_pins(COMRAM[4]), segment_10(COMRAM[5]), segment_10$segment_pins(COMRAM[4]), 

    INT0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_timer_increment(), timer_increment(), NULL(), 

    INT0_Set_Interrupt_Handler@Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_timer_increment(), timer_increment(), 

    INT1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_timer_increment(), timer_increment(), NULL(), 

    INT1_Set_Interrupt_Handler@Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_timer_increment(), timer_increment(), 

    INT2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_timer_increment(), timer_increment(), NULL(), 

    INT2_Set_Interrupt_Handler@Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_timer_increment(), timer_increment(), 

    Interrupt_INTx_Clear_Flag@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> timer_increment(), 

    Interrupt_INTx_Disable@obj	PTR const struct . size(1) Largest target is 6
		 -> clock(COMRAM[6]), 

    Interrupt_INTx_Disable@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> timer_increment(), 

    Interrupt_INTx_Edge_Init@obj	PTR const struct . size(1) Largest target is 6
		 -> clock(COMRAM[6]), 

    Interrupt_INTx_Edge_Init@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> timer_increment(), 

    Interrupt_INTx_Enable@obj	PTR const struct . size(1) Largest target is 6
		 -> clock(COMRAM[6]), 

    Interrupt_INTx_Enable@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> timer_increment(), 

    Interrupt_INTx_Init@obj	PTR const struct . size(1) Largest target is 6
		 -> clock(COMRAM[6]), 

    Interrupt_INTx_Pin_Init@obj	PTR const struct . size(1) Largest target is 6
		 -> clock(COMRAM[6]), 

    Interrupt_INTx_Pin_Init@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> timer_increment(), 

    Interrupt_INTx_Priority_Init@obj	PTR const struct . size(1) Largest target is 6
		 -> clock(COMRAM[6]), 

    Interrupt_INTx_Priority_Init@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> timer_increment(), 

    Interrupt_RBx_Init@obj$External_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@obj$External_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_Set_Interrupt_Handler@obj	PTR const struct . size(1) Largest target is 6
		 -> clock(COMRAM[6]), 

    Interrupt_Set_Interrupt_Handler@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> timer_increment(), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    led_intialize@Led	PTR const struct . size(1) Largest target is 1
		 -> led(COMRAM[1]), 

    led_toggle_status@Led	PTR const struct . size(1) Largest target is 1
		 -> led(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    RB4_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1964$buffer	PTR unsigned char  size(2) Largest target is 0

    S1964$source	PTR const unsigned char  size(2) Largest target is 0

    S816$External_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> timer_increment(), 

    S854$External_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    S854$External_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    Seven_Segm_Display_Number@_Seven_Seg	PTR struct . size(1) Largest target is 5
		 -> segment(COMRAM[5]), segment_10(COMRAM[5]), 

    Seven_Segm_initailize@_Seven_Seg	PTR struct . size(1) Largest target is 5
		 -> segment(COMRAM[5]), segment_10(COMRAM[5]), 

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRhllll[1]), TRISC(BITBIGSFRhllll[1]), TRISD(BITBIGSFRhllll[1]), 
		 -> TRISE(BITBIGSFRhllll[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupt_Manager_Low in COMRAM

    _timer_increment->_led_toggle_status
    _led_toggle_status->_gpio_pin_toggle_logic

Critical Paths under _Interrupt_Manager_High in COMRAM

    i2_timer_increment->i2_led_toggle_status
    i2_led_toggle_status->i2_gpio_pin_toggle_logic

Critical Paths under _main in BANK0

    _Seven_Segm_Display_Number->___awdiv
    _Seven_Segm_Display_Number->_gpio_pin_write_logic
    _Application_initialize->_Interrupt_INTx_Init
    _ecu_layer_initailize->_led_intialize
    _led_intialize->_gpio_pin_initialize
    _Seven_Segm_initailize->_gpio_pin_initialize
    _Interrupt_INTx_Init->_Interrupt_INTx_Pin_Init
    _Interrupt_Set_Interrupt_Handler->_INT0_Set_Interrupt_Handler
    _Interrupt_Set_Interrupt_Handler->_INT1_Set_Interrupt_Handler
    _Interrupt_Set_Interrupt_Handler->_INT2_Set_Interrupt_Handler
    _Interrupt_INTx_Pin_Init->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _Interrupt_Manager_Low in BANK0

    None.

Critical Paths under _Interrupt_Manager_High in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt_Manager_Low in BANK1

    None.

Critical Paths under _Interrupt_Manager_High in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_Manager_Low in BANK2

    None.

Critical Paths under _Interrupt_Manager_High in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_Manager_Low in BANK3

    None.

Critical Paths under _Interrupt_Manager_High in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_Manager_Low in BANK4

    None.

Critical Paths under _Interrupt_Manager_High in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_Manager_Low in BANK5

    None.

Critical Paths under _Interrupt_Manager_High in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_Manager_Low in BANK6

    None.

Critical Paths under _Interrupt_Manager_High in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_Manager_Low in BANK7

    None.

Critical Paths under _Interrupt_Manager_High in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_Manager_Low in BANK8

    None.

Critical Paths under _Interrupt_Manager_High in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_Manager_Low in BANK9

    None.

Critical Paths under _Interrupt_Manager_High in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_Manager_Low in BANK10

    None.

Critical Paths under _Interrupt_Manager_High in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_Manager_Low in BANK11

    None.

Critical Paths under _Interrupt_Manager_High in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_Manager_Low in BANK12

    None.

Critical Paths under _Interrupt_Manager_High in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_Manager_Low in BANK13

    None.

Critical Paths under _Interrupt_Manager_High in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_Manager_Low in BANK14

    None.

Critical Paths under _Interrupt_Manager_High in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_Manager_Low in BANK15

    None.

Critical Paths under _Interrupt_Manager_High in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   35367
             _Application_initialize
          _Seven_Segm_Display_Number
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Seven_Segm_Display_Number                            3     1      2    6556
                                              8 BANK0      3     1      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _Application_initialize                               0     0      0   27573
                _Interrupt_INTx_Init
               _ecu_layer_initailize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initailize                                 1     1      0   16904
              _Seven_Segm_initailize
                      _led_intialize
 ---------------------------------------------------------------------------------
 (3) _led_intialize                                        4     3      1    8422
                                             11 BANK0      4     3      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _Seven_Segm_initailize                                2     1      1    8470
                                             11 BANK0      2     1      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_Init                                  2     1      1   10669
                                             13 BANK0      2     1      1
             _Interrupt_INTx_Disable
           _Interrupt_INTx_Edge_Init
              _Interrupt_INTx_Enable
            _Interrupt_INTx_Pin_Init
       _Interrupt_INTx_Priority_Init
    _Interrupt_Set_Interrupt_Handler
 ---------------------------------------------------------------------------------
 (3) _Interrupt_Set_Interrupt_Handler                      4     3      1     861
                                              3 BANK0      4     3      1
         _INT0_Set_Interrupt_Handler
         _INT1_Set_Interrupt_Handler
         _INT2_Set_Interrupt_Handler
 ---------------------------------------------------------------------------------
 (4) _INT2_Set_Interrupt_Handler                           3     1      2     189
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _INT1_Set_Interrupt_Handler                           3     1      2     189
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _INT0_Set_Interrupt_Handler                           3     1      2     189
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _Interrupt_INTx_Priority_Init                         4     3      1     254
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _Interrupt_INTx_Pin_Init                              2     1      1    8278
                                             11 BANK0      2     1      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  3     2      1    8086
                                              8 BANK0      3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    5837
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         7     6      1     437
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _Interrupt_INTx_Enable                                4     3      1     254
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _Interrupt_INTx_Edge_Init                             4     3      1     378
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _Interrupt_INTx_Disable                               4     3      1     282
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Interrupt_Manager_Low                                9     9      0     393
                                             24 COMRAM     9     9      0
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (7) _INT2_ISR                                             0     0      0     393
                                NULL *
                    _timer_increment *
 ---------------------------------------------------------------------------------
 (8) _timer_increment                                      0     0      0     393
                  _led_toggle_status
 ---------------------------------------------------------------------------------
 (9) _led_toggle_status                                    4     3      1     393
                                             20 COMRAM     4     3      1
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (10) _gpio_pin_toggle_logic                               6     5      1     172
                                             15 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Interrupt_Manager_High                              6     6      0     580
                                              9 COMRAM     6     6      0
                           _INT0_ISR
                           _INT1_ISR
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0     290
                                NULL *
                  i2_timer_increment *
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0     290
                                NULL *
                  i2_timer_increment *
 ---------------------------------------------------------------------------------
 (13) i2_timer_increment                                   0     0      0     290
                i2_led_toggle_status
 ---------------------------------------------------------------------------------
 (14) i2_led_toggle_status                                 4     3      1     290
                                              5 COMRAM     4     3      1
            i2_gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (15) i2_gpio_pin_toggle_logic                             6     5      1     122
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_initialize
     _Interrupt_INTx_Init
       _Interrupt_INTx_Disable
       _Interrupt_INTx_Edge_Init
       _Interrupt_INTx_Enable
       _Interrupt_INTx_Pin_Init
         _gpio_pin_initialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
       _Interrupt_INTx_Priority_Init
       _Interrupt_Set_Interrupt_Handler
         _INT0_Set_Interrupt_Handler
         _INT1_Set_Interrupt_Handler
         _INT2_Set_Interrupt_Handler
     _ecu_layer_initailize
       _Seven_Segm_initailize
         _gpio_pin_initialize
       _led_intialize
         _gpio_pin_initialize
   _Seven_Segm_Display_Number
     ___awdiv (ARG)
     ___awmod (ARG)
     _gpio_pin_write_logic (ARG)
   ___awdiv
   ___awmod

 _Interrupt_Manager_Low (ROOT)
   _INT2_ISR
     NULL(Fake) *
     _timer_increment *
       _led_toggle_status
         _gpio_pin_toggle_logic

 _Interrupt_Manager_High (ROOT)
   _INT0_ISR
     NULL(Fake) *
     i2_timer_increment *
       i2_led_toggle_status
         i2_gpio_pin_toggle_logic
   _INT1_ISR
     NULL(Fake) *
     i2_timer_increment *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      43        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      F      19       5       19.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     21      69       1       83.3%
BITBIGSFRhllh       25      0       0      38        0.0%
BITBIGSFRhlh        1F      0       0      37        0.0%
BITBIGSFRhllll       F      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlh          4      0       0      40        0.0%
BITBIGSFRll          4      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      82      42        0.0%
DATA                 0      0      82       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Feb 11 21:05:02 2024

                              _led_intialize 187A                       ?_Interrupt_Manager_Low 002B  
                    ?_Interrupt_Manager_High 002B                                 ___awdiv@sign 0085  
                                         bsr 0FE0           __end_of_INT0_Set_Interrupt_Handler 1D9A  
                 _INT0_Set_Interrupt_Handler 1D6E                                          l310 1C8A  
                                        l330 1E0E                                          l251 1898  
                                        l317 1774                                          l255 18F2  
                                        l600 1D98                                          l530 148C  
                                        l418 1B8E                                          l610 1D40  
                                        l531 14AE                                          l540 1A70  
                                        l532 14B0                                          l525 145A  
                                        l605 1D6C                                          l621 164E  
                                        l542 1A76                                          l534 14F4  
                                        l543 1A7C                                          l527 1462  
                                        l528 1484                                          l552 168E  
                                        l545 1AC0                                          l529 1486  
                                        l378 1140                                          l731 1E38  
                                        l556 16B4                                          l397 1374  
                                        l725 1BEA                                          l559 16F0  
                                        l584 1DC4                                          l569 125C  
                                        l498 1B2A                                          l579 125E  
                                        l997 143A                                          _led 002A  
                                        _ret 0015                                 ___awmod@sign 0085  
              INT0_Set_Interrupt_Handler@ret 0082                                          tosl 0FFD  
                                        wreg 0FE8                   ?_Seven_Segm_Display_Number 0088  
                                       l1010 15A6                                         l4100 1B62  
                                       l4102 1B6A                                         l4110 1D74  
                                       l4200 119A                                         l4104 1B8A  
                                       l4112 1D86                                         l4120 1D42  
                                       l4210 11E0                                         l4202 11A0  
                                       l4050 1260                                         l4114 1D8E  
                                       l4122 1D48                                         l4212 11FA  
                                       l4204 11BA                                         l4300 14A8  
                                       l4052 1276                                         l4116 1D96  
                                       l4108 1D6E                                         l4124 1D5A  
                                       l4140 1D3E                                         l4132 1D16  
                                       l4214 1200                                         l4206 11C0  
                                       l4222 1220                                         l4054 1296  
                                       l4126 1D62                                         l4134 1D1C  
                                       l4150 18D2                                         l4216 121A  
                                       l4208 11DA                                         l4224 125C  
                                       l4080 1054                                         l4056 129E  
                                       l4064 1348                                         l4240 1694  
                                       l4232 1650                                         l4128 1D6A  
                                       l4136 1D2E                                         l4160 1C3A  
                                       l4152 18D4                                         l4144 187A  
                                       l4400 1DF0                                         l4170 1A52  
                                       l4306 14B6                                         l4082 10AC  
                                       l4074 1016                                         l4058 12F0  
                                       l4066 1372                                         l4242 16AE  
                                       l4234 1666                                         l4138 1D36  
                                       l4410 1AD8                                         l4162 1C4C  
                                       l4154 18E6                                         l4146 1890  
                                       l4402 1DF0                                         l4180 1ABE  
                                       l4172 1A68                                         l4308 14F2  
                                       l4076 102C                                         l4260 1DB4  
                                       l4236 166E                                         l4420 1B28  
                                       l4412 1AE0                                         l4164 1C54  
                                       l4148 189C                                         l4156 18EE  
                                       l4404 1DFA                                         l4190 1142  
                                       l4086 10FE                                         l4078 104C  
                                       l4262 1DC2                                         l4238 1688  
                                       l4246 16BA                                         l4270 15C2  
                                       l4414 1B04                                         l4166 1C88  
                                       l4406 1E04                                         l4192 1158  
                                       l4088 113E                                         l4096 1B2C  
                                       l4256 1D9A                                         l4248 16EE  
                                       l5240 162E                                         l4272 15DC  
                                       l4280 1610                                         l4416 1B10  
                                       l4408 1AC2                                         l4520 1704  
                                       l4600 157A                                         l4178 1A82  
                                       l5250 123E                                         l4194 1160  
                                       l4290 143C                                         l4098 1B42  
                                       l4258 1DAC                                         l5242 16D8  
                                       l4274 15F6                                         l4282 164C  
                                       l4266 15A8                                         l4418 1B1C  
                                       l4530 1E28                                         l4522 1714  
                                       l4602 1580                                         l5252 1AA0  
                                       l4196 117A                                         l4292 1452  
                                       l5244 135C                                         l4268 15BA  
                                       l4524 171C                                         l4540 1396  
                                       l4532 1376                                         l4604 1586  
                                       l4198 1180                                         l4294 1464  
                                       l5246 1128                                         l4526 1772  
                                       l4518 16F2                                         l4550 13CA  
                                       l4542 13A4                                         l4534 137C  
                                       l4606 1596                                         l5078 1BE6  
                                       l5248 14D4                                         l4296 147E  
                                       l4560 1404                                         l4552 13D2  
                                       l4544 13AC                                         l4536 138A  
                                       l4608 159E                                         l4298 148E  
                                       l4570 142A                                         l4562 140C  
                                       l4554 13DA                                         l4546 13B0  
                                       l4538 1392                                         l4572 1432  
                                       l4564 140E                                         l4556 13E8  
                                       l4548 13B8                                         l4580 150A  
                                       l4566 1414                                         l4558 13EE  
                                       l4590 153E                                         l4582 1512  
                                       l4568 141A                                         l4592 1546  
                                       l4584 1516                                         l4576 14F6  
                                       l4594 154E                                         l4586 1524  
                                       l4578 14FC                                         l4596 155C  
                                       l4588 152C                                         l4598 1572  
                                       STR_1 1011                                         u3020 1114  
                                       u3004 1072                                         u3021 110E  
                                       u3005 106E                                         _LATA 0F89  
                                       u3030 1116                                         u3014 10CA  
                                       u3110 1C4C                                         _LATB 0F8A  
                                       u3015 10C6                                         u3111 1C48  
                                       _LATC 0F8B                                         u3120 1A68  
                                       u3040 1B42                                         u3200 1666  
                                       _LATD 0F8C                                         u3121 1A64  
                                       u3041 1B3E                                         u3201 1662  
                                       u3105 18E2                                         _LATE 0F8D  
                                       u3130 1158                                         u3050 1B62  
                                       u3210 1688                                         u3131 1154  
                                       u3051 1B5E                                         u3211 1684  
                                       u3107 18E6                                         u3140 117A  
                                       u3220 16AE                                         u3060 1D86  
                                       u3141 1176                                         u3221 16AA  
                                       u3061 1D82                                         u3150 119A  
                                       u3230 1DAC                                         u3070 1D5A  
                                       u3151 1196                                         u3231 1DA8  
                                       u3071 1D56                                         u3160 11BA  
                                       u3080 1D2E                                         u3240 15BA  
                                       u3161 11B6                                         u3081 1D2A  
                                       u3241 15B6                                         u3170 11DA  
                                       u3250 1452                                         u3090 1890  
                                       u3171 11D6                                         u3251 144E  
                                       u3091 188C                                         u3180 11FA  
                                       u3260 147E                                         u3340 1AD8  
                                       u3500 13E8                                         u3181 11F6  
                                       u3261 147A                                         u3341 1AD4  
                                       u3501 13E4                                         u3190 121A  
                                       u3270 14A8                                         u3510 1404  
                                       u3191 1216                                         u3271 14A4  
                                       u3511 1400                                         u3520 142A  
                                       u3521 1426                                         u3450 1704  
                                       u3530 150A                                         u3451 1700  
                                       u3531 1506                                         u3460 1714  
                                       u3540 1524                                         u3461 1710  
                                       u3541 1520                                         u3470 138A  
                                       u3550 153E                                         u3471 1386  
                                       u3551 153A                                         u3480 13A4  
                                       u3560 155C                                         u3481 13A0  
                                       u3561 1558                                         u3490 13CA  
                                       u3570 1572                                         u3491 13C6  
                                       u3571 156E                                         u2940 1276  
                                       u3580 1596                                         u2941 1272  
                                       u3581 1592                                         u2950 1296  
                                       u2951 1292                                         u2980 102C  
                                       u2964 12BC                                         u2981 1028  
                                       u2965 12B8                                         u2990 104C  
                                       u2974 130E                                         u2991 1048  
                                       u2975 130A                                         _main 1BE6  
                                       fsr2h 0FDA                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                                       btemp 006A                                         prodh 0FF4  
                                       prodl 0FF3                                         start 0086  
                             ?_led_intialize 008B               __end_of_Interrupt_Manager_High 196A  
                               ___param_bank 0000                       ?_gpio_pin_toggle_logic 003A  
                       _gpio_pin_write_logic 1260                             __end_of_INT0_ISR 1D16  
                           __end_of_INT1_ISR 1CE8                             __end_of_INT2_ISR 1CBA  
                     i2led_toggle_status@Led 0030                    ?_Interrupt_INTx_Edge_Init 0080  
                     i2led_toggle_status@ret 0032                                Relay_on@F3485 0064  
                                      ?_main 002B                              __end_of___awdiv 143C  
                                      _EEADR 0FA9                              __end_of___awmod 15A8  
INT2_Set_Interrupt_Handler@Interrupt_Handler 0080  INT1_Set_Interrupt_Handler@Interrupt_Handler 0080  
INT0_Set_Interrupt_Handler@Interrupt_Handler 0080                              ___awdiv@divisor 0082  
                                      i1l411 17F6                                        i1l272 1986  
                                      i1l276 19DC                                        i1l633 1CB8  
                                      i2l411 1878                                        _RB4_f 0019  
                                      i1l734 1E26                                        i2l272 19FA  
                                      _RB5_f 0018                                        i2l276 1A50  
                                      _RB6_f 0017                                        i1l696 005E  
                                      _RB7_f 0016                                        i2l625 1D14  
                                      i2l629 1CE6                                        i2l734 1E46  
                                      i2l690 194E                              ___awdiv@counter 0084  
                                      _PORTA 0F80                                        _PORTB 0F81  
                                      _PORTC 0F82                                        _PORTD 0F83  
                                      _PORTE 0F84                                        _TRISA 0F92  
                                      _TRISB 0F93                                        _TRISC 0F94  
                                      _TRISD 0F95                                        _TRISE 0F96  
                                      _clock 001A                     Interrupt_INTx_Enable@obj 0080  
                   Interrupt_INTx_Enable@ret 0083            __end_of_Seven_Segm_Display_Number 1776  
                                      _timer 0062                                        pclath 0FFA  
                                      pclatu 0FFB                                        tablat 0FF5  
                                      ttemp5 006B                                        ttemp6 006E  
                                      ttemp7 0072                                        status 0FD8  
                                      wtemp8 006B                    _timer_increment$intlevel1 1E1A  
                     _Interrupt_INTx_Disable 1A52                           fp__timer_increment 0000  
                            __initialization 1B90                      i2_gpio_pin_toggle_logic 17F8  
                               __end_of_main 1C3A                        ?_gpio_pin_write_logic 0080  
                              _lat_registers 0001                                       ??_main 008F  
                              __activetblptr 0003                 ??_INT1_Set_Interrupt_Handler 0082  
                           led_turn_on@F3487 0068              Seven_Segm_initailize@_Seven_Seg 008B  
                                     _EEADRH 0FAA                                       _EEDATA 0FA8  
                                     _EECON2 0FA7                             ___awdiv@dividend 0080  
                                     i1l4014 003E                                       i1l4016 004C  
                                     i1l4018 005A                                       i1l3404 1C8C  
                                     i1l3406 1C8E                                       i1l3280 1E1C  
                                     i1l3408 1CA0                                       i1l3278 1E1A  
                                     i1l2920 17AA                                       i1l2914 1776  
                                     i1l2916 1786                                       i1l2918 17A6  
                                     i2l4010 193C                                       i2l4002 190E  
                                     i2l4012 194A                                       i2l4004 191C  
                                     i2l4006 192A                                       i1l2990 198A  
                                     i2l3160 19FE                                       i2l3400 1CBC  
                                     i2l4008 192E                                       i1l2992 19C0  
                                     i2l3162 1A34                                       i2l3402 1CCE  
                                     i1l2994 19C2                                       i1l2986 196A  
                                     i2l3164 1A36                                       i2l3156 19DE  
                                     i1l2996 19D2                                       i1l2988 197E  
                                     i2l3166 1A46                                       i2l3158 19F2  
                                     i1l2998 19DA                                       i2l3168 1A4E  
                                     i2l3282 1E3A                                       i2l3284 1E3C  
                                     i2l3392 1CE8                                       i2l3394 1CEA  
                                     i2l3396 1CFC                                       i2l3398 1CBA  
                                     i2l2960 17F8                                       i2l2962 1808  
                                     i2l2964 1828                                       i2l2966 182C  
           gpio_pin_toggle_logic@_pin_config 003A           i2gpio_pin_toggle_logic@_pin_config 002B  
                            ??_led_intialize 008C                               Relay_off@F3490 0063  
                          i2_timer_increment 1E3A                                    ??___awdiv 0084  
                                  ??___awmod 0084                      ?_Application_initialize 002B  
              __end_of_Seven_Segm_initailize 1C8C                             led_intialize@Led 008B  
                         ?i2_timer_increment 002B                             led_intialize@ret 008D  
                                     clear_0 1BD6                             ___awdiv@quotient 0086  
                            ___awmod@divisor 0082                                       isa$std 0001  
                            ___awmod@counter 0084                __end_of_Interrupt_INTx_Enable 14F6  
    gpio_pin_direction_intialize@_pin_config 0080                          ??i2_timer_increment 0034  
                               __pdataCOMRAM 0001                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8                                   __accesstop 0080  
                    __end_of__initialization 1BDC                                    ?_INT0_ISR 002B  
                                  ?_INT1_ISR 002B                                    ?_INT2_ISR 002B  
                              ___rparam_used 0001                    ??i2_gpio_pin_toggle_logic 002C  
                    ??_Interrupt_Manager_Low 0043                    __end_ofi2_timer_increment 1E48  
    __end_of_Interrupt_Set_Interrupt_Handler 1650            ??_Interrupt_Set_Interrupt_Handler 0084  
           ?_Interrupt_Set_Interrupt_Handler 0083              _Interrupt_Set_Interrupt_Handler 15A8  
                    _Interrupt_INTx_Pin_Init 1D9A                       ??_gpio_pin_write_logic 0082  
                             __pcstackCOMRAM 002B               __end_of_Application_initialize 1E3A  
                               __pidataBANK0 1E48                            ??_timer_increment 0043  
                ?_INT0_Set_Interrupt_Handler 0080                   _RB6_Interrupt_Handler_High 0052  
                ??_Seven_Segm_Display_Number 008A                  __end_of_Interrupt_INTx_Init 1B2C  
                  _RB5_Interrupt_Handler_Low 0054              Seven_Segm_Display_Number@number 0089  
                                 ??_INT0_ISR 0034                                   ??_INT1_ISR 0034  
                                 ??_INT2_ISR 0043                          i2_led_toggle_status 19DE  
                     _INT2_Interrupt_Handler 005C           Interrupt_Set_Interrupt_Handler@obj 0083  
         Interrupt_Set_Interrupt_Handler@ret 0086             __end_of_Interrupt_INTx_Edge_Init 1260  
                    ??_gpio_pin_toggle_logic 003B                            led_turn_off@F3492 0067  
                       ?i2_led_toggle_status 0030           __end_of_INT1_Set_Interrupt_Handler 1D6E  
                 _INT1_Set_Interrupt_Handler 1D42                                   _btn_values 1001  
                    ?_Interrupt_INTx_Disable 0080                               _tris_registers 000B  
                  ??_Interrupt_INTx_Pin_Init 008C                INT1_Set_Interrupt_Handler@ret 0082  
                                    __Hparam 0000                                      __Lparam 0000  
                       led_intialize@pin_obj 008E                    _Seven_Segm_Display_Number 16F2  
                        _gpio_pin_initialize 1B2C                                      ___awdiv 1376  
                                    ___awmod 14F6                                 __psmallconst 1000  
                                    __pcinit 1B90                        ??i2_led_toggle_status 0031  
                                    __ramtop 1000                                      __ptext0 1BE6  
                                    __ptext1 14F6                                      __ptext2 1376  
                                    __ptext3 16F2                                      __ptext4 1E28  
                                    __ptext5 1DF0                                      __ptext6 187A  
                                    __ptext7 1C3A                                      __ptext8 1AC2  
                                    __ptext9 15A8                             ___awmod@dividend 0080  
                                    _segment 0020                         ?_gpio_pin_initialize 0088  
             __end_of_Interrupt_INTx_Disable 1AC2                               __pintcode_body 18F4  
                       end_of_initialization 1BDC                                   _segment_10 0025  
                                    int_func 18F4                 Seven_Segm_Display_Number@ret 008A  
                                    postdec1 0FE5                                      postdec2 0FDD  
                   _Interrupt_INTx_Edge_Init 1142                                      postinc0 0FEE  
                                    postinc2 0FDE                         led_toggle_status@Led 003F  
                       led_toggle_status@ret 0041                 ??_INT2_Set_Interrupt_Handler 0082  
       __end_of_gpio_pin_direction_intialize 1142                 _gpio_pin_direction_intialize 1016  
                      ??_gpio_pin_initialize 0089                  Interrupt_INTx_Edge_Init@obj 0080  
                Interrupt_INTx_Edge_Init@ret 0083                     ??_Interrupt_Manager_High 0034  
                            _timer_increment 1E10                        __end_of_led_intialize 18F4  
              __end_of_Interrupt_Manager_Low 0086                       Interrupt_INTx_Init@obj 008D  
                     Interrupt_INTx_Init@ret 008E         __end_of_Interrupt_INTx_Priority_Init 16F2  
               _Interrupt_INTx_Priority_Init 1650                                __pidataCOMRAM 1DC6  
                 i2led_toggle_status@pin_obj 0033                        _Seven_Segm_initailize 1C3A  
                      _Interrupt_INTx_Enable 143C                          start_initialization 1B90  
              ?_gpio_pin_direction_intialize 0080                __end_of_gpio_pin_toggle_logic 17F8  
                                __pdataBANK0 008F                 __end_of_ecu_layer_initailize 1E10  
                 _RB5_Interrupt_Handler_High 0056                            _led_toggle_status 196A  
              ?_Interrupt_INTx_Priority_Init 0080                  ?_INT1_Set_Interrupt_Handler 0080  
                       fp_i2_timer_increment 0000                           ?_led_toggle_status 003F  
                                __pbssCOMRAM 004C                                __pcstackBANK0 0080  
            Interrupt_INTx_Priority_Init@obj 0080              Interrupt_INTx_Priority_Init@ret 0083  
                  _RB6_Interrupt_Handler_Low 0050                          ??_led_toggle_status 0040  
                    __end_of_timer_increment 1E28                     ?i2_gpio_pin_toggle_logic 002B  
                     _INT0_Interrupt_Handler 0060              gpio_pin_direction_intialize@ret 0086  
                      Relay_initialize@F3480 0065                                    __pintcode 0008  
            gpio_pin_write_logic@_pin_config 0080                                     ?___awdiv 0080  
                                   ?___awmod 0080                    __end_of_led_toggle_status 19DE  
                     ?_Seven_Segm_initailize 008B                                  __pintcodelo 0018  
         __end_of_INT2_Set_Interrupt_Handler 1D42                   _INT2_Set_Interrupt_Handler 1D16  
                     ?_Interrupt_INTx_Enable 0080                                  __smallconst 1000  
             ??_gpio_pin_direction_intialize 0081                   ??_Interrupt_INTx_Edge_Init 0081  
                                   _INT0_ISR 1CE8                                     _INT1_ISR 1CBA  
                                   _INT2_ISR 1C8C                     ??_Application_initialize 008F  
                                   i1u225_20 1CA0                                     i1u225_21 1C9C  
                                   i1u170_20 1786                                     i1u170_21 1782  
                                   i1u171_20 17A6                                     i1u226_28 1CA6  
                                   i1u171_21 17A2                                     i1u226_29 1CB8  
                                   i1u172_24 17C8                                     i1u172_25 17C4  
                                   i1u181_20 197E                                     i1u181_21 197A  
                                   i1u182_25 19D0                                     i1u182_27 19D2  
                                   i2u200_40 19F2                                     i2u200_41 19EE  
                                   i2u201_45 1A44                                     i2u201_47 1A46  
                                   i1u292_20 004C                                     i1u292_21 0048  
                                   i1u293_20 005A                                     i1u293_21 0056  
                                   i2u221_40 1CFC                                     i2u221_41 1CF8  
                                   i2u222_48 1D02                                     i2u223_40 1CCE  
                                   i2u222_49 1D14                                     i2u223_41 1CCA  
                                   i2u224_48 1CD4                                     i2u224_49 1CE6  
                                   i2u176_40 1808                                     i2u176_41 1804  
                                   i2u177_40 1828                                     i2u177_41 1824  
                                   i2u290_40 193C                                     i2u290_41 1938  
                                   i2u178_44 184A                                     i2u178_45 1846  
                                   i2u291_40 194A                                     i2u291_41 1946  
                                   i2u288_40 191C                                     i2u288_41 1918  
                                   i2u289_40 192A                                     i2u289_41 1926  
                __end_ofi2_led_toggle_status 1A52                                     _RCONbits 0FD0  
                     _Interrupt_Manager_High 0008                INT2_Set_Interrupt_Handler@ret 0082  
                     gpio_pin_initialize@ret 008A              __end_ofi2_gpio_pin_toggle_logic 187A  
             ??_Interrupt_INTx_Priority_Init 0081                      gpio_pin_write_logic@ret 0087  
                                _INTCON2bits 0FF1                                  _INTCON3bits 0FF0  
                                  copy_data0 1BA4                                    copy_data1 1BC4  
                   ?_Interrupt_INTx_Pin_Init 008B                             ?_timer_increment 002B  
                       _ecu_layer_initailize 1DF0                                   _EECON1bits 0FA6  
                                   __Hrparam 0000                                     __Lrparam 0000  
                  Interrupt_INTx_Disable@obj 0080                    Interrupt_INTx_Disable@ret 0083  
                   led_toggle_status@pin_obj 0042                  __end_of_gpio_pin_initialize 1B90  
                         __end_of_btn_values 1011               gpio_pin_initialize@_pin_config 0088  
               ??_INT0_Set_Interrupt_Handler 0082                           led_intialize@F3482 0069  
                                   __ptext10 1D16                                     __ptext11 1D42  
                                   __ptext20 1A52                                     __ptext12 1D6E  
                                   __ptext13 1650                                     __ptext30 19DE  
                                   __ptext22 1C8C                                     __ptext14 1D9A  
                                   __ptext31 17F8                                     __ptext23 1E10  
                                   __ptext15 1B2C                                     __ptext32 0000  
                                   __ptext24 196A                                     __ptext16 1260  
                                   __ptext25 1776                                     __ptext17 1016  
                                   __ptext18 143C                                     __ptext27 1CBA  
                                   __ptext19 1142                                     __ptext28 1CE8  
                                   __ptext29 1E3A                        ?_ecu_layer_initailize 002B  
        Seven_Segm_Display_Number@_Seven_Seg 0088                                     isa$xinst 0000  
                                   int$flags 006A                        _Interrupt_Manager_Low 0018  
                   ??_Interrupt_INTx_Disable 0081                          _Interrupt_INTx_Init 1AC2  
                                 _INTCONbits 0FF2              __end_of_Interrupt_INTx_Pin_Init 1DC6  
               __end_of_gpio_pin_write_logic 1376                                     intlevel1 0000  
                                   intlevel2 0000                         ?_Interrupt_INTx_Init 008D  
                     led_toggle_status@F3497 0066                      ??_Seven_Segm_initailize 008C  
                 Interrupt_INTx_Pin_Init@obj 008B                   Interrupt_INTx_Pin_Init@ret 008C  
                      _gpio_pin_toggle_logic 1776                   _RB4_Interrupt_Handler_High 005A  
                    ??_Interrupt_INTx_Enable 0081                     Seven_Segm_initailize@ret 008C  
                     _Application_initialize 1E28                   gpio_pin_write_logic@logic_ 0081  
                ?_INT2_Set_Interrupt_Handler 0080                   _RB7_Interrupt_Handler_High 004E  
                             _port_registers 008F                    _RB4_Interrupt_Handler_Low 0058  
                     ??_ecu_layer_initailize 008F                    _RB7_Interrupt_Handler_Low 004C  
                      ??_Interrupt_INTx_Init 008E                       _INT1_Interrupt_Handler 005E  
