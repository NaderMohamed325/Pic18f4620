

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Feb 25 17:01:22 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 23/03/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4620 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   001092                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _port_registers
    65   001092  80                 	db	128
    66   001093  0F                 	db	15
    67   001094  81                 	db	129
    68   001095  0F                 	db	15
    69   001096  82                 	db	130
    70   001097  0F                 	db	15
    71   001098  83                 	db	131
    72   001099  0F                 	db	15
    73   00109A  84                 	db	132
    74   00109B  0F                 	db	15
    75                           
    76                           ;initializer for _lat_registers
    77   00109C  89                 	db	137
    78   00109D  0F                 	db	15
    79   00109E  8A                 	db	138
    80   00109F  0F                 	db	15
    81   0010A0  8B                 	db	139
    82   0010A1  0F                 	db	15
    83   0010A2  8C                 	db	140
    84   0010A3  0F                 	db	15
    85   0010A4  8D                 	db	141
    86   0010A5  0F                 	db	15
    87                           
    88                           ;initializer for _tris_registers
    89   0010A6  92                 	db	146
    90   0010A7  0F                 	db	15
    91   0010A8  93                 	db	147
    92   0010A9  0F                 	db	15
    93   0010AA  94                 	db	148
    94   0010AB  0F                 	db	15
    95   0010AC  95                 	db	149
    96   0010AD  0F                 	db	15
    97   0010AE  96                 	db	150
    98   0010AF  0F                 	db	15
    99                           
   100                           ;initializer for _ret
   101   0010B0  01                 	db	1
   102                           
   103                           ;initializer for _RB7_f
   104   0010B1  01                 	db	1
   105                           
   106                           ;initializer for _RB6_f
   107   0010B2  01                 	db	1
   108                           
   109                           ;initializer for _RB5_f
   110   0010B3  01                 	db	1
   111                           
   112                           ;initializer for _RB4_f
   113   0010B4  01                 	db	1
   114                           
   115                           	psect	smallconst
   116   001000                     __psmallconst:
   117                           	callstack 0
   118   001000  00                 	db	0
   119   001001                     _btn_values:
   120                           	callstack 0
   121   001001  37                 	db	55
   122   001002  38                 	db	56
   123   001003  39                 	db	57
   124   001004  2F                 	db	47
   125   001005  34                 	db	52
   126   001006  35                 	db	53
   127   001007  36                 	db	54
   128   001008  2A                 	db	42
   129   001009  31                 	db	49
   130   00100A  32                 	db	50
   131   00100B  33                 	db	51
   132   00100C  2D                 	db	45
   133   00100D  23                 	db	35
   134   00100E  30                 	db	48
   135   00100F  3D                 	db	61
   136   001010  2B                 	db	43
   137   001011                     __end_of_btn_values:
   138                           	callstack 0
   139   000000                     _EECON2	set	4007
   140   000000                     _ADCON1bits	set	4033
   141   000000                     _ADRESL	set	4035
   142   000000                     _ADRESH	set	4036
   143   000000                     _TRISD	set	3989
   144   000000                     _TRISC	set	3988
   145   000000                     _TRISB	set	3987
   146   000000                     _TRISE	set	3990
   147   000000                     _PIE1bits	set	3997
   148   000000                     _ADCON2bits	set	4032
   149   000000                     _ADCON0bits	set	4034
   150   000000                     _PORTE	set	3972
   151   000000                     _PORTD	set	3971
   152   000000                     _PORTC	set	3970
   153   000000                     _PORTB	set	3969
   154   000000                     _PORTA	set	3968
   155   000000                     _LATA	set	3977
   156   000000                     _TRISA	set	3986
   157   000000                     _EECON1bits	set	4006
   158   000000                     _EEDATA	set	4008
   159   000000                     _EEADR	set	4009
   160   000000                     _EEADRH	set	4010
   161   000000                     _IPR1bits	set	3999
   162   000000                     _PIR1bits	set	3998
   163   000000                     _RCONbits	set	4048
   164   000000                     _INTCONbits	set	4082
   165   000000                     _LATE	set	3981
   166   000000                     _LATD	set	3980
   167   000000                     _LATC	set	3979
   168   000000                     _LATB	set	3978
   169   000000                     _T0CONbits	set	4053
   170   000000                     _INTCON3bits	set	4080
   171   000000                     _INTCON2bits	set	4081
   172   001011                     STR_1:
   173   001011  25                 	db	37
   174   001012  69                 	db	105	;'i'
   175   001013  00                 	db	0
   176   001014  00                 	db	0	; dummy byte at the end
   177   000000                     
   178                           ; #config settings
   179                           
   180                           	psect	cinit
   181   00105C                     __pcinit:
   182                           	callstack 0
   183   00105C                     start_initialization:
   184                           	callstack 0
   185   00105C                     __initialization:
   186                           	callstack 0
   187                           
   188                           ; Initialize objects allocated to COMRAM (35 bytes)
   189                           ; load TBLPTR registers with __pidataCOMRAM
   190   00105C  0E92               	movlw	low __pidataCOMRAM
   191   00105E  6EF6               	movwf	tblptrl,c
   192   001060  0E10               	movlw	high __pidataCOMRAM
   193   001062  6EF7               	movwf	tblptrh,c
   194   001064  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   195   001066  6EF8               	movwf	tblptru,c
   196   001068  EE00  F001         	lfsr	0,__pdataCOMRAM
   197   00106C  EE10 F023          	lfsr	1,35
   198   001070                     copy_data0:
   199   001070  0009               	tblrd		*+
   200   001072  CFF5 FFEE          	movff	tablat,postinc0
   201   001076  50E5               	movf	postdec1,w,c
   202   001078  50E1               	movf	fsr1l,w,c
   203   00107A  E1FA               	bnz	copy_data0
   204                           
   205                           ; Clear objects allocated to COMRAM (33 bytes)
   206   00107C  EE00  F024         	lfsr	0,__pbssCOMRAM
   207   001080  0E21               	movlw	33
   208   001082                     clear_0:
   209   001082  6AEE               	clrf	postinc0,c
   210   001084  06E8               	decf	wreg,f,c
   211   001086  E1FD               	bnz	clear_0
   212   001088                     end_of_initialization:
   213                           	callstack 0
   214   001088                     __end_of__initialization:
   215                           	callstack 0
   216   001088  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   217   00108A  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   218   00108C  0100               	movlb	0
   219   00108E  EF5B  F008         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222   000024                     __pbssCOMRAM:
   223                           	callstack 0
   224   000024                     _Timer0_Interrupt_Handler:
   225                           	callstack 0
   226   000024                     	ds	2
   227   000026                     _RB7_Interrupt_Handler_Low:
   228                           	callstack 0
   229   000026                     	ds	2
   230   000028                     _RB7_Interrupt_Handler_High:
   231                           	callstack 0
   232   000028                     	ds	2
   233   00002A                     _RB6_Interrupt_Handler_Low:
   234                           	callstack 0
   235   00002A                     	ds	2
   236   00002C                     _RB6_Interrupt_Handler_High:
   237                           	callstack 0
   238   00002C                     	ds	2
   239   00002E                     _RB5_Interrupt_Handler_Low:
   240                           	callstack 0
   241   00002E                     	ds	2
   242   000030                     _RB5_Interrupt_Handler_High:
   243                           	callstack 0
   244   000030                     	ds	2
   245   000032                     _RB4_Interrupt_Handler_Low:
   246                           	callstack 0
   247   000032                     	ds	2
   248   000034                     _RB4_Interrupt_Handler_High:
   249                           	callstack 0
   250   000034                     	ds	2
   251   000036                     _INT2_Interrupt_Handler:
   252                           	callstack 0
   253   000036                     	ds	2
   254   000038                     _INT1_Interrupt_Handler:
   255                           	callstack 0
   256   000038                     	ds	2
   257   00003A                     _INT0_Interrupt_Handler:
   258                           	callstack 0
   259   00003A                     	ds	2
   260   00003C                     __ADC_Interrupt_Handler:
   261                           	callstack 0
   262   00003C                     	ds	2
   263   00003E                     Relay_off@F3490:
   264                           	callstack 0
   265   00003E                     	ds	1
   266   00003F                     Relay_on@F3485:
   267                           	callstack 0
   268   00003F                     	ds	1
   269   000040                     Relay_initialize@F3480:
   270                           	callstack 0
   271   000040                     	ds	1
   272   000041                     led_toggle_status@F3497:
   273                           	callstack 0
   274   000041                     	ds	1
   275   000042                     led_turn_off@F3492:
   276                           	callstack 0
   277   000042                     	ds	1
   278   000043                     led_turn_on@F3487:
   279                           	callstack 0
   280   000043                     	ds	1
   281   000044                     led_intialize@F3482:
   282                           	callstack 0
   283   000044                     	ds	1
   284                           
   285                           	psect	dataCOMRAM
   286   000001                     __pdataCOMRAM:
   287                           	callstack 0
   288   000001                     _port_registers:
   289                           	callstack 0
   290   000001                     	ds	10
   291   00000B                     _lat_registers:
   292                           	callstack 0
   293   00000B                     	ds	10
   294   000015                     _tris_registers:
   295                           	callstack 0
   296   000015                     	ds	10
   297   00001F                     _ret:
   298                           	callstack 0
   299   00001F                     	ds	1
   300   000020                     _RB7_f:
   301                           	callstack 0
   302   000020                     	ds	1
   303   000021                     _RB6_f:
   304                           	callstack 0
   305   000021                     	ds	1
   306   000022                     _RB5_f:
   307                           	callstack 0
   308   000022                     	ds	1
   309   000023                     _RB4_f:
   310                           	callstack 0
   311   000023                     	ds	1
   312                           
   313                           	psect	cstackCOMRAM
   314   000045                     __pcstackCOMRAM:
   315                           	callstack 0
   316   000045                     ??_Interrupt_Manager_Low:
   317   000045                     
   318                           ; 2 bytes @ 0x0
   319   000045                     	ds	1
   320   000046                     
   321                           ; 1 bytes @ 0x1
   322 ;;
   323 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   324 ;;
   325 ;; *************** function _main *****************
   326 ;; Defined at:
   327 ;;		line 9 in file "app.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  2  848[None  ] int 
   334 ;; Registers used:
   335 ;;		wreg, status,2, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   345 ;;Total ram usage:        0 bytes
   346 ;; Hardware stack levels required when called: 6
   347 ;; This function calls:
   348 ;;		_Application_initialize
   349 ;; This function is called by:
   350 ;;		Startup code after reset
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text0
   355   0010B6                     __ptext0:
   356                           	callstack 0
   357   0010B6                     _main:
   358                           	callstack 25
   359   0010B6                     
   360                           ;app.c: 11:     Application_initialize();
   361   0010B6  EC61  F008         	call	_Application_initialize	;wreg free
   362   0010BA                     l849:
   363   0010BA  EF5D  F008         	goto	l849
   364   0010BE  EF23  F000         	goto	start
   365   0010C2                     __end_of_main:
   366                           	callstack 0
   367                           
   368 ;; *************** function _Application_initialize *****************
   369 ;; Defined at:
   370 ;;		line 20 in file "app.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, status,2, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   388 ;;Total ram usage:        0 bytes
   389 ;; Hardware stack levels used: 1
   390 ;; Hardware stack levels required when called: 5
   391 ;; This function calls:
   392 ;;		_ecu_layer_initialize
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text1
   399   0010C2                     __ptext1:
   400                           	callstack 0
   401   0010C2                     _Application_initialize:
   402                           	callstack 25
   403   0010C2                     
   404                           ;app.c: 21:     ecu_layer_initialize();
   405   0010C2  EC6A  F008         	call	_ecu_layer_initialize	;wreg free
   406   0010C6  0012               	return		;funcret
   407   0010C8                     __end_of_Application_initialize:
   408                           	callstack 0
   409                           
   410 ;; *************** function _ecu_layer_initialize *****************
   411 ;; Defined at:
   412 ;;		line 11 in file "ECU_LAYER/ecu_layer_init.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;  ret             1    0        unsigned char 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; Hardware stack levels required when called: 4
   433 ;; This function calls:
   434 ;;		Nothing
   435 ;; This function is called by:
   436 ;;		_Application_initialize
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text2
   441   0010D4                     __ptext2:
   442                           	callstack 0
   443   0010D4                     _ecu_layer_initialize:
   444                           	callstack 25
   445   0010D4  0012               	return		;funcret
   446   0010D6                     __end_of_ecu_layer_initialize:
   447                           	callstack 0
   448                           
   449 ;; *************** function _Interrupt_Manager_Low *****************
   450 ;; Defined at:
   451 ;;		line 28 in file "MCAL_LAYER/Interrupt/mcal_interrupt_manager.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;Total ram usage:        1 bytes
   470 ;; Hardware stack levels used: 1
   471 ;; Hardware stack levels required when called: 3
   472 ;; This function calls:
   473 ;;		_INT2_ISR
   474 ;; This function is called by:
   475 ;;		Interrupt level 1
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	intcodelo
   480   000018                     __pintcodelo:
   481                           	callstack 0
   482   000018                     _Interrupt_Manager_Low:
   483                           	callstack 25
   484                           
   485                           ;incstack = 0
   486   000018  8046               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   487   00001A  CFE0 F045          	movff	bsr,??_Interrupt_Manager_Low
   488   00001E                     
   489                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 30:     if ((INTCON3bits.INT2IE == 1) &&
      +                           (INTCON3bits.INT2IF == 1)) {
   490   00001E  A8F0               	btfss	240,4,c	;volatile
   491   000020  EF14  F000         	goto	i1u154_21
   492   000024  EF16  F000         	goto	i1u154_20
   493   000028                     i1u154_21:
   494   000028  EF1F  F000         	goto	i1l838
   495   00002C                     i1u154_20:
   496   00002C  A2F0               	btfss	240,1,c	;volatile
   497   00002E  EF1B  F000         	goto	i1u155_21
   498   000032  EF1D  F000         	goto	i1u155_20
   499   000036                     i1u155_21:
   500   000036  EF1F  F000         	goto	i1l838
   501   00003A                     i1u155_20:
   502   00003A                     
   503                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 31:         INT2_ISR();
   504   00003A  EC64  F008         	call	_INT2_ISR	;wreg free
   505   00003E                     i1l838:
   506   00003E  C045  FFE0         	movff	??_Interrupt_Manager_Low,bsr
   507   000042  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   508   000044  0010               	retfie	
   509   000046                     __end_of_Interrupt_Manager_Low:
   510                           	callstack 0
   511                           
   512 ;; *************** function _INT2_ISR *****************
   513 ;; Defined at:
   514 ;;		line 466 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		None
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; Hardware stack levels required when called: 2
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		_Interrupt_Manager_Low
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text4
   543   0010C8                     __ptext4:
   544                           	callstack 0
   545   0010C8                     _INT2_ISR:
   546                           	callstack 25
   547   0010C8                     
   548                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 467:     (INTCON3bits.INT2IF = 0);
   549   0010C8  92F0               	bcf	240,1,c	;volatile
   550   0010CA  0012               	return		;funcret
   551   0010CC                     __end_of_INT2_ISR:
   552                           	callstack 0
   553                           
   554 ;; *************** function _Interrupt_Manager_High *****************
   555 ;; Defined at:
   556 ;;		line 15 in file "MCAL_LAYER/Interrupt/mcal_interrupt_manager.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		cstack
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;Total ram usage:        0 bytes
   575 ;; Hardware stack levels used: 1
   576 ;; Hardware stack levels required when called: 1
   577 ;; This function calls:
   578 ;;		_INT0_ISR
   579 ;;		_INT1_ISR
   580 ;; This function is called by:
   581 ;;		Interrupt level 2
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	intcode
   586   000008                     __pintcode:
   587                           	callstack 0
   588   000008                     _Interrupt_Manager_High:
   589                           	callstack 25
   590                           
   591                           ;incstack = 0
   592   000008  8246               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   593   00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
   594                           
   595                           	psect	intcode_body
   596   001016                     __pintcode_body:
   597                           	callstack 25
   598   001016                     int_func:
   599                           	callstack 25
   600   001016  0006               	pop		; remove dummy address from shadow register refresh
   601   001018                     
   602                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 17:     if ((INTCONbits.INT0IE == 1) && 
      +                          (INTCONbits.INT0IF == 1)) {
   603   001018  A8F2               	btfss	242,4,c	;volatile
   604   00101A  EF11  F008         	goto	i2u150_41
   605   00101E  EF13  F008         	goto	i2u150_40
   606   001022                     i2u150_41:
   607   001022  EF1C  F008         	goto	i2l3017
   608   001026                     i2u150_40:
   609   001026  A2F2               	btfss	242,1,c	;volatile
   610   001028  EF18  F008         	goto	i2u151_41
   611   00102C  EF1A  F008         	goto	i2u151_40
   612   001030                     i2u151_41:
   613   001030  EF1C  F008         	goto	i2l3017
   614   001034                     i2u151_40:
   615   001034                     
   616                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 18:         INT0_ISR();
   617   001034  EC68  F008         	call	_INT0_ISR	;wreg free
   618   001038                     i2l3017:
   619                           
   620                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 21:     if ((INTCON3bits.INT1IE == 1) &&
      +                           (INTCON3bits.INT1IF == 1)) {
   621   001038  A6F0               	btfss	240,3,c	;volatile
   622   00103A  EF21  F008         	goto	i2u152_41
   623   00103E  EF23  F008         	goto	i2u152_40
   624   001042                     i2u152_41:
   625   001042  EF2C  F008         	goto	i2l832
   626   001046                     i2u152_40:
   627   001046  A0F0               	btfss	240,0,c	;volatile
   628   001048  EF28  F008         	goto	i2u153_41
   629   00104C  EF2A  F008         	goto	i2u153_40
   630   001050                     i2u153_41:
   631   001050  EF2C  F008         	goto	i2l832
   632   001054                     i2u153_40:
   633   001054                     
   634                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 22:         INT1_ISR();
   635   001054  EC66  F008         	call	_INT1_ISR	;wreg free
   636   001058                     i2l832:
   637   001058  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   638   00105A  0011               	retfie		f
   639   00105C                     __end_of_Interrupt_Manager_High:
   640                           	callstack 0
   641                           
   642 ;; *************** function _INT1_ISR *****************
   643 ;; Defined at:
   644 ;;		line 460 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		None
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;Total ram usage:        0 bytes
   663 ;; Hardware stack levels used: 1
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_Interrupt_Manager_High
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text6
   672   0010CC                     __ptext6:
   673                           	callstack 0
   674   0010CC                     _INT1_ISR:
   675                           	callstack 25
   676   0010CC                     
   677                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 461:     (INTCON3bits.INT1IF = 0);
   678   0010CC  90F0               	bcf	240,0,c	;volatile
   679   0010CE  0012               	return		;funcret
   680   0010D0                     __end_of_INT1_ISR:
   681                           	callstack 0
   682                           
   683 ;; *************** function _INT0_ISR *****************
   684 ;; Defined at:
   685 ;;		line 454 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		None
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;Total ram usage:        0 bytes
   704 ;; Hardware stack levels used: 1
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_Interrupt_Manager_High
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text7
   713   0010D0                     __ptext7:
   714                           	callstack 0
   715   0010D0                     _INT0_ISR:
   716                           	callstack 25
   717   0010D0                     
   718                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 455:     (INTCONbits.INT0IF = 0);
   719   0010D0  92F2               	bcf	242,1,c	;volatile
   720   0010D2  0012               	return		;funcret
   721   0010D4                     __end_of_INT0_ISR:
   722                           	callstack 0
   723                           
   724                           	psect	rparam
   725   000000                     
   726                           	psect	temp
   727   000046                     btemp:
   728                           	callstack 0
   729   000046                     	ds	1
   730   000000                     int$flags	set	btemp
   731   000000                     wtemp8	set	btemp+1
   732   000000                     ttemp5	set	btemp+1
   733   000000                     ttemp6	set	btemp+4
   734   000000                     ttemp7	set	btemp+8
   735                           
   736                           	psect	config
   737                           
   738                           ; Padding undefined space
   739   300000                     	org	3145728
   740   300000  FF                 	db	255
   741                           
   742                           ;Config register CONFIG1H @ 0x300001
   743                           ;	Oscillator Selection bits
   744                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
   745                           ;	Fail-Safe Clock Monitor Enable bit
   746                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   747                           ;	Internal/External Oscillator Switchover bit
   748                           ;	IESO = OFF, Oscillator Switchover mode disabled
   749   300001                     	org	3145729
   750   300001  07                 	db	7
   751                           
   752                           ;Config register CONFIG2L @ 0x300002
   753                           ;	Power-up Timer Enable bit
   754                           ;	PWRT = OFF, PWRT disabled
   755                           ;	Brown-out Reset Enable bits
   756                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   757                           ;	Brown Out Reset Voltage bits
   758                           ;	BORV = 3, Minimum setting
   759   300002                     	org	3145730
   760   300002  1F                 	db	31
   761                           
   762                           ;Config register CONFIG2H @ 0x300003
   763                           ;	Watchdog Timer Enable bit
   764                           ;	WDT = ON, WDT enabled
   765                           ;	Watchdog Timer Postscale Select bits
   766                           ;	WDTPS = 32768, 1:32768
   767   300003                     	org	3145731
   768   300003  1F                 	db	31
   769                           
   770                           ; Padding undefined space
   771   300004                     	org	3145732
   772   300004  FF                 	db	255
   773                           
   774                           ;Config register CONFIG3H @ 0x300005
   775                           ;	CCP2 MUX bit
   776                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   777                           ;	PORTB A/D Enable bit
   778                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   779                           ;	Low-Power Timer1 Oscillator Enable bit
   780                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   781                           ;	MCLR Pin Enable bit
   782                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   783   300005                     	org	3145733
   784   300005  81                 	db	129
   785                           
   786                           ;Config register CONFIG4L @ 0x300006
   787                           ;	Stack Full/Underflow Reset Enable bit
   788                           ;	STVREN = ON, Stack full/underflow will cause Reset
   789                           ;	Single-Supply ICSP Enable bit
   790                           ;	LVP = ON, Single-Supply ICSP enabled
   791                           ;	Extended Instruction Set Enable bit
   792                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   793                           ;	Background Debugger Enable bit
   794                           ;	DEBUG = 0x1, unprogrammed default
   795   300006                     	org	3145734
   796   300006  85                 	db	133
   797                           
   798                           ; Padding undefined space
   799   300007                     	org	3145735
   800   300007  FF                 	db	255
   801                           
   802                           ;Config register CONFIG5L @ 0x300008
   803                           ;	Code Protection bit
   804                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   805                           ;	Code Protection bit
   806                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   807                           ;	Code Protection bit
   808                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   809                           ;	Code Protection bit
   810                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   811   300008                     	org	3145736
   812   300008  0F                 	db	15
   813                           
   814                           ;Config register CONFIG5H @ 0x300009
   815                           ;	Boot Block Code Protection bit
   816                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   817                           ;	Data EEPROM Code Protection bit
   818                           ;	CPD = OFF, Data EEPROM not code-protected
   819   300009                     	org	3145737
   820   300009  C0                 	db	192
   821                           
   822                           ;Config register CONFIG6L @ 0x30000A
   823                           ;	Write Protection bit
   824                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   825                           ;	Write Protection bit
   826                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   827                           ;	Write Protection bit
   828                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   829                           ;	Write Protection bit
   830                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   831   30000A                     	org	3145738
   832   30000A  0F                 	db	15
   833                           
   834                           ;Config register CONFIG6H @ 0x30000B
   835                           ;	Configuration Register Write Protection bit
   836                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   837                           ;	Boot Block Write Protection bit
   838                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   839                           ;	Data EEPROM Write Protection bit
   840                           ;	WRTD = OFF, Data EEPROM not write-protected
   841   30000B                     	org	3145739
   842   30000B  E0                 	db	224
   843                           
   844                           ;Config register CONFIG7L @ 0x30000C
   845                           ;	Table Read Protection bit
   846                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   847                           ;	Table Read Protection bit
   848                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   849                           ;	Table Read Protection bit
   850                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   851                           ;	Table Read Protection bit
   852                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   853   30000C                     	org	3145740
   854   30000C  0F                 	db	15
   855                           
   856                           ;Config register CONFIG7H @ 0x30000D
   857                           ;	Boot Block Table Read Protection bit
   858                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   859   30000D                     	org	3145741
   860   30000D  40                 	db	64
   861                           tosu	equ	0xFFF
   862                           tosh	equ	0xFFE
   863                           tosl	equ	0xFFD
   864                           stkptr	equ	0xFFC
   865                           pclatu	equ	0xFFB
   866                           pclath	equ	0xFFA
   867                           pcl	equ	0xFF9
   868                           tblptru	equ	0xFF8
   869                           tblptrh	equ	0xFF7
   870                           tblptrl	equ	0xFF6
   871                           tablat	equ	0xFF5
   872                           prodh	equ	0xFF4
   873                           prodl	equ	0xFF3
   874                           indf0	equ	0xFEF
   875                           postinc0	equ	0xFEE
   876                           postdec0	equ	0xFED
   877                           preinc0	equ	0xFEC
   878                           plusw0	equ	0xFEB
   879                           fsr0h	equ	0xFEA
   880                           fsr0l	equ	0xFE9
   881                           wreg	equ	0xFE8
   882                           indf1	equ	0xFE7
   883                           postinc1	equ	0xFE6
   884                           postdec1	equ	0xFE5
   885                           preinc1	equ	0xFE4
   886                           plusw1	equ	0xFE3
   887                           fsr1h	equ	0xFE2
   888                           fsr1l	equ	0xFE1
   889                           bsr	equ	0xFE0
   890                           indf2	equ	0xFDF
   891                           postinc2	equ	0xFDE
   892                           postdec2	equ	0xFDD
   893                           preinc2	equ	0xFDC
   894                           plusw2	equ	0xFDB
   895                           fsr2h	equ	0xFDA
   896                           fsr2l	equ	0xFD9
   897                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        35
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      1      69
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Result@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    _ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    adc_select_result_format@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    adc_select_voltage_ref@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_Init@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@obj$External_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@obj$External_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_Set_Interrupt_Handler@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1286$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    S1324$External_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    S1324$External_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    S1807$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S2423$buffer	PTR unsigned char  size(2) Largest target is 0

    S2423$source	PTR const unsigned char  size(2) Largest target is 0

    S663$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    Timer0_Init@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0_Mode_Config@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Reg_Size_Config@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupt_Manager_Low in COMRAM

    None.

Critical Paths under _Interrupt_Manager_High in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt_Manager_Low in BANK0

    None.

Critical Paths under _Interrupt_Manager_High in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt_Manager_Low in BANK1

    None.

Critical Paths under _Interrupt_Manager_High in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_Manager_Low in BANK2

    None.

Critical Paths under _Interrupt_Manager_High in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_Manager_Low in BANK3

    None.

Critical Paths under _Interrupt_Manager_High in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_Manager_Low in BANK4

    None.

Critical Paths under _Interrupt_Manager_High in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_Manager_Low in BANK5

    None.

Critical Paths under _Interrupt_Manager_High in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_Manager_Low in BANK6

    None.

Critical Paths under _Interrupt_Manager_High in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_Manager_Low in BANK7

    None.

Critical Paths under _Interrupt_Manager_High in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_Manager_Low in BANK8

    None.

Critical Paths under _Interrupt_Manager_High in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_Manager_Low in BANK9

    None.

Critical Paths under _Interrupt_Manager_High in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_Manager_Low in BANK10

    None.

Critical Paths under _Interrupt_Manager_High in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_Manager_Low in BANK11

    None.

Critical Paths under _Interrupt_Manager_High in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_Manager_Low in BANK12

    None.

Critical Paths under _Interrupt_Manager_High in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_Manager_Low in BANK13

    None.

Critical Paths under _Interrupt_Manager_High in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_Manager_Low in BANK14

    None.

Critical Paths under _Interrupt_Manager_High in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_Manager_Low in BANK15

    None.

Critical Paths under _Interrupt_Manager_High in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
             _Application_initialize
 ---------------------------------------------------------------------------------
 (1) _Application_initialize                               0     0      0       0
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Interrupt_Manager_Low                                1     1      0       0
                                              0 COMRAM     1     1      0
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (4) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt_Manager_High                               0     0      0       0
                           _INT0_ISR
                           _INT1_ISR
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_initialize
     _ecu_layer_initialize

 _Interrupt_Manager_Low (ROOT)
   _INT2_ISR

 _Interrupt_Manager_High (ROOT)
   _INT0_ISR
   _INT1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      1      45       1       54.8%
BITBIGSFRhhlhh      1A      0       0      38        0.0%
BITBIGSFRllhh       15      0       0      41        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRhhll        B      0       0      40        0.0%
BITBIGSFRlllhh       6      0       0      43        0.0%
BITBIGSFRllhll       6      0       0      42        0.0%
BITBIGSFRhhlhl       4      0       0      39        0.0%
BITBIGSFRllllh       4      0       0      44        0.0%
BITBIGSFRlllll       4      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45      20        0.0%
DATA                 0      0      45       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Feb 25 17:01:22 2024

        ?_Interrupt_Manager_Low 0045         ?_Interrupt_Manager_High 0045                              bsr 0FE0  
                           l320 10D4                             l850 10BA                             l855 10C6  
                           l849 10BA                             _ret 001F                             wreg 0FE8  
                          l3029 10B6                            l1713 10D4                            l1955 10C2  
                          STR_1 1011                            _LATA 0F89                            _LATB 0F8A  
                          _LATC 0F8B                            _LATD 0F8C                            _LATE 0F8D  
                          _main 10B6                            fsr1l 0FE1                            btemp 0046  
                          start 0046  __end_of_Interrupt_Manager_High 105C                    ___param_bank 0000  
              __end_of_INT0_ISR 10D4                __end_of_INT1_ISR 10D0                __end_of_INT2_ISR 10CC  
                 Relay_on@F3485 003F                           ?_main 0045                           _EEADR 0FA9  
                         _RB4_f 0023                           _RB5_f 0022                           _RB6_f 0021  
                         i1l838 003E                           i1l775 10CA                           _RB7_f 0020  
                         i2l832 1058                           i2l771 10CE                           i2l767 10D2  
                         _PORTA 0F80                           _PORTB 0F81                           _PORTC 0F82  
                         _PORTD 0F83                           _PORTE 0F84                           _TRISA 0F92  
                         _TRISB 0F93                           _TRISC 0F94                           _TRISD 0F95  
                         _TRISE 0F96                           tablat 0FF5                           ttemp5 0047  
                         ttemp6 004A                           ttemp7 004E                           wtemp8 0047  
               __initialization 105C                    __end_of_main 10C2                   _lat_registers 000B  
                        ??_main 0046                   __activetblptr 0003                led_turn_on@F3487 0043  
                        _ADRESH 0FC4                          _EEADRH 0FAA                          _ADRESL 0FC3  
                        _EEDATA 0FA8                          _EECON2 0FA7                          i1l3023 001E  
                        i1l3025 002C                          i1l3027 003A                          i1l1951 10C8  
                        i2l3011 1018                          i2l3021 1054                          i2l3013 1026  
                        i2l3015 1034                          i2l3017 1038                          i2l3019 1046  
                        i2l1943 10D0                          i2l1947 10CC                  Relay_off@F3490 003E  
       ?_Application_initialize 0045                          clear_0 1082                          isa$std 0001  
                  __pdataCOMRAM 0001                    __mediumconst 0000                          tblptrh 0FF7  
                        tblptrl 0FF6                          tblptru 0FF8                      __accesstop 0080  
       __end_of__initialization 1088                       ?_INT0_ISR 0045                       ?_INT1_ISR 0045  
                     ?_INT2_ISR 0045                   ___rparam_used 0001         ??_Interrupt_Manager_Low 0045  
                __pcstackCOMRAM 0045  __end_of_Application_initialize 10C8      _RB6_Interrupt_Handler_High 002C  
     _RB5_Interrupt_Handler_Low 002E                      ??_INT0_ISR 0045                      ??_INT1_ISR 0045  
                    ??_INT2_ISR 0045          _INT2_Interrupt_Handler 0036               led_turn_off@F3492 0042  
                    _btn_values 1001                  _tris_registers 0015                         __Hparam 0000  
                       __Lparam 0000                    __psmallconst 1000                         __pcinit 105C  
                       __ramtop 1000                         __ptext0 10B6                         __ptext1 10C2  
                       __ptext2 10D4                         __ptext4 10C8                         __ptext6 10CC  
                       __ptext7 10D0                       _T0CONbits 0FD5                  __pintcode_body 1016  
          end_of_initialization 1088                         int_func 1016                         postdec1 0FE5  
                       postinc0 0FEE        _Timer0_Interrupt_Handler 0024        ??_Interrupt_Manager_High 0045  
 __end_of_Interrupt_Manager_Low 0046                   __pidataCOMRAM 1092             start_initialization 105C  
    _RB5_Interrupt_Handler_High 0030    __end_of_ecu_layer_initialize 10D6                     __pbssCOMRAM 0024  
     _RB6_Interrupt_Handler_Low 002A          _INT0_Interrupt_Handler 003A           Relay_initialize@F3480 0040  
        __ADC_Interrupt_Handler 003C                       __pintcode 0008                     __pintcodelo 0018  
                   __smallconst 1000                        _INT0_ISR 10D0                        _INT1_ISR 10CC  
                      _INT2_ISR 10C8        ??_Application_initialize 0046                        _IPR1bits 0F9F  
                      _PIE1bits 0F9D                        i1u154_20 002C                        i1u154_21 0028  
                      i1u155_20 003A                        i1u155_21 0036                        i2u150_40 1026  
                      i2u150_41 1022                        i2u151_40 1034                        i2u151_41 1030  
                      i2u152_40 1046                        i2u152_41 1042                        i2u153_40 1054  
                      i2u153_41 1050                        _PIR1bits 0F9E                        _RCONbits 0FD0  
        _Interrupt_Manager_High 0008                      _ADCON0bits 0FC2                      _ADCON1bits 0FC1  
                    _ADCON2bits 0FC0                     _INTCON2bits 0FF1                     _INTCON3bits 0FF0  
                     copy_data0 1070            _ecu_layer_initialize 10D4                      _EECON1bits 0FA6  
                      __Hrparam 0000                        __Lrparam 0000              __end_of_btn_values 1011  
            led_intialize@F3482 0044           ?_ecu_layer_initialize 0045                        isa$xinst 0000  
                      int$flags 0046           _Interrupt_Manager_Low 0018                      _INTCONbits 0FF2  
                      intlevel1 0000                        intlevel2 0000          led_toggle_status@F3497 0041  
    _RB4_Interrupt_Handler_High 0034          _Application_initialize 10C2      _RB7_Interrupt_Handler_High 0028  
                _port_registers 0001       _RB4_Interrupt_Handler_Low 0032       _RB7_Interrupt_Handler_Low 0026  
        ??_ecu_layer_initialize 0046          _INT1_Interrupt_Handler 0038  
