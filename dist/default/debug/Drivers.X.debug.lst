

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Mar 09 16:05:40 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 23/03/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4620 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     
    67                           	psect	idataCOMRAM
    68   00128E                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _port_registers
    72   00128E  80                 	db	128
    73   00128F  0F                 	db	15
    74   001290  81                 	db	129
    75   001291  0F                 	db	15
    76   001292  82                 	db	130
    77   001293  0F                 	db	15
    78   001294  83                 	db	131
    79   001295  0F                 	db	15
    80   001296  84                 	db	132
    81   001297  0F                 	db	15
    82                           
    83                           ;initializer for _lat_registers
    84   001298  89                 	db	137
    85   001299  0F                 	db	15
    86   00129A  8A                 	db	138
    87   00129B  0F                 	db	15
    88   00129C  8B                 	db	139
    89   00129D  0F                 	db	15
    90   00129E  8C                 	db	140
    91   00129F  0F                 	db	15
    92   0012A0  8D                 	db	141
    93   0012A1  0F                 	db	15
    94                           
    95                           ;initializer for _tris_registers
    96   0012A2  92                 	db	146
    97   0012A3  0F                 	db	15
    98   0012A4  93                 	db	147
    99   0012A5  0F                 	db	15
   100   0012A6  94                 	db	148
   101   0012A7  0F                 	db	15
   102   0012A8  95                 	db	149
   103   0012A9  0F                 	db	15
   104   0012AA  96                 	db	150
   105   0012AB  0F                 	db	15
   106                           
   107                           ;initializer for _ret
   108   0012AC  01                 	db	1
   109                           
   110                           ;initializer for _RB7_f
   111   0012AD  01                 	db	1
   112                           
   113                           ;initializer for _RB6_f
   114   0012AE  01                 	db	1
   115                           
   116                           ;initializer for _RB5_f
   117   0012AF  01                 	db	1
   118                           
   119                           ;initializer for _RB4_f
   120   0012B0  01                 	db	1
   121                           
   122                           	psect	smallconst
   123   001000                     __psmallconst:
   124                           	callstack 0
   125   001000  00                 	db	0
   126   001001                     _btn_values:
   127                           	callstack 0
   128   001001  37                 	db	55
   129   001002  38                 	db	56
   130   001003  39                 	db	57
   131   001004  2F                 	db	47
   132   001005  34                 	db	52
   133   001006  35                 	db	53
   134   001007  36                 	db	54
   135   001008  2A                 	db	42
   136   001009  31                 	db	49
   137   00100A  32                 	db	50
   138   00100B  33                 	db	51
   139   00100C  2D                 	db	45
   140   00100D  23                 	db	35
   141   00100E  30                 	db	48
   142   00100F  3D                 	db	61
   143   001010  2B                 	db	43
   144   001011                     __end_of_btn_values:
   145                           	callstack 0
   146   000000                     _TMR1L	set	4046
   147   000000                     _TMR1H	set	4047
   148   000000                     _TMR0L	set	4054
   149   000000                     _TMR0H	set	4055
   150   000000                     _INTCON2bits	set	4081
   151   000000                     _EECON2	set	4007
   152   000000                     _ADCON1bits	set	4033
   153   000000                     _ADRESL	set	4035
   154   000000                     _ADRESH	set	4036
   155   000000                     _INTCONbits	set	4082
   156   000000                     _TRISD	set	3989
   157   000000                     _TRISC	set	3988
   158   000000                     _TRISB	set	3987
   159   000000                     _TRISE	set	3990
   160   000000                     _PORTBbits	set	3969
   161   000000                     _PIE1bits	set	3997
   162   000000                     _ADCON2bits	set	4032
   163   000000                     _ADCON0bits	set	4034
   164   000000                     _PORTE	set	3972
   165   000000                     _PORTD	set	3971
   166   000000                     _PORTC	set	3970
   167   000000                     _PORTB	set	3969
   168   000000                     _PORTA	set	3968
   169   000000                     _LATA	set	3977
   170   000000                     _TRISA	set	3986
   171   000000                     _EECON1bits	set	4006
   172   000000                     _EEDATA	set	4008
   173   000000                     _EEADR	set	4009
   174   000000                     _EEADRH	set	4010
   175   000000                     _PIR1bits	set	3998
   176   000000                     _T2CONbits	set	4042
   177   000000                     _T1CONbits	set	4045
   178   000000                     _T0CONbits	set	4053
   179   000000                     _INTCON3bits	set	4080
   180   000000                     _LATE	set	3981
   181   000000                     _LATD	set	3980
   182   000000                     _LATC	set	3979
   183   000000                     _LATB	set	3978
   184   000000                     _TMR2	set	4044
   185   001011                     STR_1:
   186   001011  25                 	db	37
   187   001012  69                 	db	105	;'i'
   188   001013  00                 	db	0
   189   001014  00                 	db	0	; dummy byte at the end
   190   000000                     
   191                           ; #config settings
   192                           
   193                           	psect	cinit
   194   001258                     __pcinit:
   195                           	callstack 0
   196   001258                     start_initialization:
   197                           	callstack 0
   198   001258                     __initialization:
   199                           	callstack 0
   200                           
   201                           ; Initialize objects allocated to COMRAM (35 bytes)
   202                           ; load TBLPTR registers with __pidataCOMRAM
   203   001258  0E8E               	movlw	low __pidataCOMRAM
   204   00125A  6EF6               	movwf	tblptrl,c
   205   00125C  0E12               	movlw	high __pidataCOMRAM
   206   00125E  6EF7               	movwf	tblptrh,c
   207   001260  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   208   001262  6EF8               	movwf	tblptru,c
   209   001264  EE00  F02B         	lfsr	0,__pdataCOMRAM
   210   001268  EE10 F023          	lfsr	1,35
   211   00126C                     copy_data0:
   212   00126C  0009               	tblrd		*+
   213   00126E  CFF5 FFEE          	movff	tablat,postinc0
   214   001272  50E5               	movf	postdec1,w,c
   215   001274  50E1               	movf	fsr1l,w,c
   216   001276  E1FA               	bnz	copy_data0
   217                           
   218                           ; Clear objects allocated to COMRAM (42 bytes)
   219   001278  EE00  F001         	lfsr	0,__pbssCOMRAM
   220   00127C  0E2A               	movlw	42
   221   00127E                     clear_0:
   222   00127E  6AEE               	clrf	postinc0,c
   223   001280  06E8               	decf	wreg,f,c
   224   001282  E1FD               	bnz	clear_0
   225   001284                     end_of_initialization:
   226                           	callstack 0
   227   001284                     __end_of__initialization:
   228                           	callstack 0
   229   001284  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   230   001286  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   231   001288  0100               	movlb	0
   232   00128A  EF8D  F009         	goto	_main	;jump to C main() function
   233                           
   234                           	psect	bssCOMRAM
   235   000001                     __pbssCOMRAM:
   236                           	callstack 0
   237   000001                     _Timer2_Interrupt_Handler:
   238                           	callstack 0
   239   000001                     	ds	2
   240   000003                     _pre_work_out@hal_timer1$F2119:
   241                           	callstack 0
   242   000003                     	ds	2
   243   000005                     _Timer1_Interrupt_Handler:
   244                           	callstack 0
   245   000005                     	ds	2
   246   000007                     _pre_work_out:
   247                           	callstack 0
   248   000007                     	ds	2
   249   000009                     _Timer0_Interrupt_Handler:
   250                           	callstack 0
   251   000009                     	ds	2
   252   00000B                     _RB7_Interrupt_Handler_Low:
   253                           	callstack 0
   254   00000B                     	ds	2
   255   00000D                     _RB7_Interrupt_Handler_High:
   256                           	callstack 0
   257   00000D                     	ds	2
   258   00000F                     _RB6_Interrupt_Handler_Low:
   259                           	callstack 0
   260   00000F                     	ds	2
   261   000011                     _RB6_Interrupt_Handler_High:
   262                           	callstack 0
   263   000011                     	ds	2
   264   000013                     _RB5_Interrupt_Handler_Low:
   265                           	callstack 0
   266   000013                     	ds	2
   267   000015                     _RB5_Interrupt_Handler_High:
   268                           	callstack 0
   269   000015                     	ds	2
   270   000017                     _RB4_Interrupt_Handler_Low:
   271                           	callstack 0
   272   000017                     	ds	2
   273   000019                     _RB4_Interrupt_Handler_High:
   274                           	callstack 0
   275   000019                     	ds	2
   276   00001B                     _INT2_Interrupt_Handler:
   277                           	callstack 0
   278   00001B                     	ds	2
   279   00001D                     _INT1_Interrupt_Handler:
   280                           	callstack 0
   281   00001D                     	ds	2
   282   00001F                     _INT0_Interrupt_Handler:
   283                           	callstack 0
   284   00001F                     	ds	2
   285   000021                     __ADC_Interrupt_Handler:
   286                           	callstack 0
   287   000021                     	ds	2
   288   000023                     _pre:
   289                           	callstack 0
   290   000023                     	ds	1
   291   000024                     Relay_off@F3490:
   292                           	callstack 0
   293   000024                     	ds	1
   294   000025                     Relay_on@F3485:
   295                           	callstack 0
   296   000025                     	ds	1
   297   000026                     Relay_initialize@F3480:
   298                           	callstack 0
   299   000026                     	ds	1
   300   000027                     led_toggle_status@F3497:
   301                           	callstack 0
   302   000027                     	ds	1
   303   000028                     led_turn_off@F3492:
   304                           	callstack 0
   305   000028                     	ds	1
   306   000029                     led_turn_on@F3487:
   307                           	callstack 0
   308   000029                     	ds	1
   309   00002A                     led_intialize@F3482:
   310                           	callstack 0
   311   00002A                     	ds	1
   312                           
   313                           	psect	dataCOMRAM
   314   00002B                     __pdataCOMRAM:
   315                           	callstack 0
   316   00002B                     _port_registers:
   317                           	callstack 0
   318   00002B                     	ds	10
   319   000035                     _lat_registers:
   320                           	callstack 0
   321   000035                     	ds	10
   322   00003F                     _tris_registers:
   323                           	callstack 0
   324   00003F                     	ds	10
   325   000049                     _ret:
   326                           	callstack 0
   327   000049                     	ds	1
   328   00004A                     _RB7_f:
   329                           	callstack 0
   330   00004A                     	ds	1
   331   00004B                     _RB6_f:
   332                           	callstack 0
   333   00004B                     	ds	1
   334   00004C                     _RB5_f:
   335                           	callstack 0
   336   00004C                     	ds	1
   337   00004D                     _RB4_f:
   338                           	callstack 0
   339   00004D                     	ds	1
   340                           
   341                           	psect	cstackCOMRAM
   342   00004E                     __pcstackCOMRAM:
   343                           	callstack 0
   344   00004E                     RB4_ISR@source:
   345                           	callstack 0
   346   00004E                     RB5_ISR@source:
   347                           	callstack 0
   348   00004E                     RB6_ISR@source:
   349                           	callstack 0
   350   00004E                     RB7_ISR@source:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x0
   354   00004E                     	ds	1
   355   00004F                     
   356                           ; 1 bytes @ 0x1
   357 ;;
   358 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   359 ;;
   360 ;; *************** function _main *****************
   361 ;; Defined at:
   362 ;;		line 18 in file "app.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  2  965[None  ] int 
   369 ;; Registers used:
   370 ;;		wreg, status,2, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels required when called: 4
   382 ;; This function calls:
   383 ;;		_Application_initialize
   384 ;; This function is called by:
   385 ;;		Startup code after reset
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           	psect	text0
   390   00131A                     __ptext0:
   391                           	callstack 0
   392   00131A                     _main:
   393                           	callstack 27
   394   00131A                     
   395                           ;app.c: 20:     Application_initialize();
   396   00131A  ECA3  F009         	call	_Application_initialize	;wreg free
   397   00131E                     l966:
   398   00131E  EF8F  F009         	goto	l966
   399   001322  EF07  F000         	goto	start
   400   001326                     __end_of_main:
   401                           	callstack 0
   402                           
   403 ;; *************** function _Application_initialize *****************
   404 ;; Defined at:
   405 ;;		line 29 in file "app.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   423 ;;Total ram usage:        0 bytes
   424 ;; Hardware stack levels used: 1
   425 ;; Hardware stack levels required when called: 3
   426 ;; This function calls:
   427 ;;		_ecu_layer_initialize
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text1
   434   001346                     __ptext1:
   435                           	callstack 0
   436   001346                     _Application_initialize:
   437                           	callstack 27
   438   001346                     
   439                           ;app.c: 31:     ecu_layer_initialize();
   440   001346  ECAE  F009         	call	_ecu_layer_initialize	;wreg free
   441   00134A  0012               	return		;funcret
   442   00134C                     __end_of_Application_initialize:
   443                           	callstack 0
   444                           
   445 ;; *************** function _ecu_layer_initialize *****************
   446 ;; Defined at:
   447 ;;		line 11 in file "ECU_LAYER/ecu_layer_init.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  ret             1    0        unsigned char 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, status,2
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   465 ;;Total ram usage:        0 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; Hardware stack levels required when called: 2
   468 ;; This function calls:
   469 ;;		Nothing
   470 ;; This function is called by:
   471 ;;		_Application_initialize
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           	psect	text2
   476   00135C                     __ptext2:
   477                           	callstack 0
   478   00135C                     _ecu_layer_initialize:
   479                           	callstack 27
   480   00135C  0012               	return		;funcret
   481   00135E                     __end_of_ecu_layer_initialize:
   482                           	callstack 0
   483                           
   484 ;; *************** function _Interrupt_Manager_High *****************
   485 ;; Defined at:
   486 ;;		line 29 in file "MCAL_LAYER/Interrupt/mcal_interrupt_manager.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;Total ram usage:        0 bytes
   505 ;; Hardware stack levels used: 1
   506 ;; Hardware stack levels required when called: 1
   507 ;; This function calls:
   508 ;;		_ADC_ISR
   509 ;;		_INT0_ISR
   510 ;;		_INT1_ISR
   511 ;;		_INT2_ISR
   512 ;;		_RB4_ISR
   513 ;;		_RB5_ISR
   514 ;;		_RB6_ISR
   515 ;;		_RB7_ISR
   516 ;;		_TIMER0_ISR
   517 ;;		_TIMER1_ISR
   518 ;;		_TIMER2_ISR
   519 ;; This function is called by:
   520 ;;		Interrupt level 2
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           	psect	intcode
   525   000008                     __pintcode:
   526                           	callstack 0
   527   000008                     _Interrupt_Manager_High:
   528                           	callstack 27
   529                           
   530                           ;incstack = 0
   531   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   532   00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
   533                           
   534                           	psect	intcode_body
   535   001016                     __pintcode_body:
   536                           	callstack 27
   537   001016                     int_func:
   538                           	callstack 27
   539   001016  0006               	pop		; remove dummy address from shadow register refresh
   540   001018                     
   541                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 31:     if ((INTCONbits.INT0IE == 1) && 
      +                          (INTCONbits.INT0IF == 1)) {
   542   001018  A8F2               	btfss	242,4,c	;volatile
   543   00101A  EF11  F008         	goto	i2u141_41
   544   00101E  EF13  F008         	goto	i2u141_40
   545   001022                     i2u141_41:
   546   001022  EF1C  F008         	goto	i2l3087
   547   001026                     i2u141_40:
   548   001026  A2F2               	btfss	242,1,c	;volatile
   549   001028  EF18  F008         	goto	i2u142_41
   550   00102C  EF1A  F008         	goto	i2u142_40
   551   001030                     i2u142_41:
   552   001030  EF1C  F008         	goto	i2l3087
   553   001034                     i2u142_40:
   554   001034                     
   555                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 32:         INT0_ISR();
   556   001034  ECAA  F009         	call	_INT0_ISR	;wreg free
   557   001038                     i2l3087:
   558                           
   559                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 35:     if ((INTCON3bits.INT1IE == 1) &&
      +                           (INTCON3bits.INT1IF == 1)) {
   560   001038  A6F0               	btfss	240,3,c	;volatile
   561   00103A  EF21  F008         	goto	i2u143_41
   562   00103E  EF23  F008         	goto	i2u143_40
   563   001042                     i2u143_41:
   564   001042  EF2C  F008         	goto	i2l3093
   565   001046                     i2u143_40:
   566   001046  A0F0               	btfss	240,0,c	;volatile
   567   001048  EF28  F008         	goto	i2u144_41
   568   00104C  EF2A  F008         	goto	i2u144_40
   569   001050                     i2u144_41:
   570   001050  EF2C  F008         	goto	i2l3093
   571   001054                     i2u144_40:
   572   001054                     
   573                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 36:         INT1_ISR();
   574   001054  ECA8  F009         	call	_INT1_ISR	;wreg free
   575   001058                     i2l3093:
   576                           
   577                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 39:     if ((INTCON3bits.INT2IE == 1) &&
      +                           (INTCON3bits.INT2IF == 1)) {
   578   001058  A8F0               	btfss	240,4,c	;volatile
   579   00105A  EF31  F008         	goto	i2u145_41
   580   00105E  EF33  F008         	goto	i2u145_40
   581   001062                     i2u145_41:
   582   001062  EF3C  F008         	goto	i2l3099
   583   001066                     i2u145_40:
   584   001066  A2F0               	btfss	240,1,c	;volatile
   585   001068  EF38  F008         	goto	i2u146_41
   586   00106C  EF3A  F008         	goto	i2u146_40
   587   001070                     i2u146_41:
   588   001070  EF3C  F008         	goto	i2l3099
   589   001074                     i2u146_40:
   590   001074                     
   591                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 40:         INT2_ISR();
   592   001074  ECA6  F009         	call	_INT2_ISR	;wreg free
   593   001078                     i2l3099:
   594                           
   595                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 42:     if (1 == PIE1bits.ADIE && 1 == P
      +                          IR1bits.ADIF) {
   596   001078  AC9D               	btfss	157,6,c	;volatile
   597   00107A  EF41  F008         	goto	i2u147_41
   598   00107E  EF43  F008         	goto	i2u147_40
   599   001082                     i2u147_41:
   600   001082  EF4C  F008         	goto	i2l3105
   601   001086                     i2u147_40:
   602   001086  AC9E               	btfss	158,6,c	;volatile
   603   001088  EF48  F008         	goto	i2u148_41
   604   00108C  EF4A  F008         	goto	i2u148_40
   605   001090                     i2u148_41:
   606   001090  EF4C  F008         	goto	i2l3105
   607   001094                     i2u148_40:
   608   001094                     
   609                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 43:         ADC_ISR();
   610   001094  ECAC  F009         	call	_ADC_ISR	;wreg free
   611   001098                     i2l3105:
   612                           
   613                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 45:     if (1 == INTCONbits.TMR0IE && 1 
      +                          == INTCONbits.TMR0IF) {
   614   001098  AAF2               	btfss	242,5,c	;volatile
   615   00109A  EF51  F008         	goto	i2u149_41
   616   00109E  EF53  F008         	goto	i2u149_40
   617   0010A2                     i2u149_41:
   618   0010A2  EF5C  F008         	goto	i2l3111
   619   0010A6                     i2u149_40:
   620   0010A6  A4F2               	btfss	242,2,c	;volatile
   621   0010A8  EF58  F008         	goto	i2u150_41
   622   0010AC  EF5A  F008         	goto	i2u150_40
   623   0010B0                     i2u150_41:
   624   0010B0  EF5C  F008         	goto	i2l3111
   625   0010B4                     i2u150_40:
   626   0010B4                     
   627                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 46:         TIMER0_ISR();
   628   0010B4  EC99  F009         	call	_TIMER0_ISR	;wreg free
   629   0010B8                     i2l3111:
   630                           
   631                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 48:     if (1 == PIE1bits.TMR1IE && 1 ==
      +                           PIR1bits.TMR1IF) {
   632   0010B8  A09D               	btfss	157,0,c	;volatile
   633   0010BA  EF61  F008         	goto	i2u151_41
   634   0010BE  EF63  F008         	goto	i2u151_40
   635   0010C2                     i2u151_41:
   636   0010C2  EF6C  F008         	goto	i2l3117
   637   0010C6                     i2u151_40:
   638   0010C6  A09E               	btfss	158,0,c	;volatile
   639   0010C8  EF68  F008         	goto	i2u152_41
   640   0010CC  EF6A  F008         	goto	i2u152_40
   641   0010D0                     i2u152_41:
   642   0010D0  EF6C  F008         	goto	i2l3117
   643   0010D4                     i2u152_40:
   644   0010D4                     
   645                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 49:         TIMER1_ISR();
   646   0010D4  EC93  F009         	call	_TIMER1_ISR	;wreg free
   647   0010D8                     i2l3117:
   648                           
   649                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 51:     if (1 == PIE1bits.TMR2IE && 1 ==
      +                           PIR1bits.TMR2IF) {
   650   0010D8  A29D               	btfss	157,1,c	;volatile
   651   0010DA  EF71  F008         	goto	i2u153_41
   652   0010DE  EF73  F008         	goto	i2u153_40
   653   0010E2                     i2u153_41:
   654   0010E2  EF7C  F008         	goto	i2l3123
   655   0010E6                     i2u153_40:
   656   0010E6  A29E               	btfss	158,1,c	;volatile
   657   0010E8  EF78  F008         	goto	i2u154_41
   658   0010EC  EF7A  F008         	goto	i2u154_40
   659   0010F0                     i2u154_41:
   660   0010F0  EF7C  F008         	goto	i2l3123
   661   0010F4                     i2u154_40:
   662   0010F4                     
   663                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 52:         TIMER2_ISR();
   664   0010F4  EC9F  F009         	call	_TIMER2_ISR	;wreg free
   665   0010F8                     i2l3123:
   666                           
   667                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 55:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1)) {
   668   0010F8  A6F2               	btfss	242,3,c	;volatile
   669   0010FA  EF81  F008         	goto	i2u155_41
   670   0010FE  EF83  F008         	goto	i2u155_40
   671   001102                     i2u155_41:
   672   001102  EF2A  F009         	goto	i2l839
   673   001106                     i2u155_40:
   674   001106  A0F2               	btfss	242,0,c	;volatile
   675   001108  EF88  F008         	goto	i2u156_41
   676   00110C  EF8A  F008         	goto	i2u156_40
   677   001110                     i2u156_41:
   678   001110  EF2A  F009         	goto	i2l839
   679   001114                     i2u156_40:
   680   001114                     
   681                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 59:         if ((PORTBbits.RB4 == GPIO_H
      +                          IGH) && RB4_f == 1) {
   682   001114  A881               	btfss	129,4,c	;volatile
   683   001116  EF8F  F008         	goto	i2u157_41
   684   00111A  EF91  F008         	goto	i2u157_40
   685   00111E                     i2u157_41:
   686   00111E  EF9E  F008         	goto	i2l3135
   687   001122                     i2u157_40:
   688   001122  044D               	decf	_RB4_f^0,w,c	;volatile
   689   001124  A4D8               	btfss	status,2,c
   690   001126  EF97  F008         	goto	i2u158_41
   691   00112A  EF99  F008         	goto	i2u158_40
   692   00112E                     i2u158_41:
   693   00112E  EF9E  F008         	goto	i2l3135
   694   001132                     i2u158_40:
   695   001132                     
   696                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 60:             RB4_f = 0;
   697   001132  0E00               	movlw	0
   698   001134  6E4D               	movwf	_RB4_f^0,c	;volatile
   699   001136                     
   700                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 61:             RB4_ISR(0);
   701   001136  0E00               	movlw	0
   702   001138  EC80  F009         	call	_RB4_ISR
   703   00113C                     i2l3135:
   704                           
   705                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 63:         if ((PORTBbits.RB4 == GPIO_L
      +                          OW) && RB4_f == 0) {
   706   00113C  B881               	btfsc	129,4,c	;volatile
   707   00113E  EFA3  F008         	goto	i2u159_41
   708   001142  EFA5  F008         	goto	i2u159_40
   709   001146                     i2u159_41:
   710   001146  EFB2  F008         	goto	i2l3143
   711   00114A                     i2u159_40:
   712   00114A  504D               	movf	_RB4_f^0,w,c	;volatile
   713   00114C  A4D8               	btfss	status,2,c
   714   00114E  EFAB  F008         	goto	i2u160_41
   715   001152  EFAD  F008         	goto	i2u160_40
   716   001156                     i2u160_41:
   717   001156  EFB2  F008         	goto	i2l3143
   718   00115A                     i2u160_40:
   719   00115A                     
   720                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 64:             RB4_f = 1;
   721   00115A  0E01               	movlw	1
   722   00115C  6E4D               	movwf	_RB4_f^0,c	;volatile
   723   00115E                     
   724                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 65:             RB4_ISR(1);
   725   00115E  0E01               	movlw	1
   726   001160  EC80  F009         	call	_RB4_ISR
   727   001164                     i2l3143:
   728                           
   729                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 68:         if ((PORTBbits.RB5 == GPIO_H
      +                          IGH) && RB5_f == 1) {
   730   001164  AA81               	btfss	129,5,c	;volatile
   731   001166  EFB7  F008         	goto	i2u161_41
   732   00116A  EFB9  F008         	goto	i2u161_40
   733   00116E                     i2u161_41:
   734   00116E  EFC6  F008         	goto	i2l3151
   735   001172                     i2u161_40:
   736   001172  044C               	decf	_RB5_f^0,w,c	;volatile
   737   001174  A4D8               	btfss	status,2,c
   738   001176  EFBF  F008         	goto	i2u162_41
   739   00117A  EFC1  F008         	goto	i2u162_40
   740   00117E                     i2u162_41:
   741   00117E  EFC6  F008         	goto	i2l3151
   742   001182                     i2u162_40:
   743   001182                     
   744                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 69:             RB5_f = 0;
   745   001182  0E00               	movlw	0
   746   001184  6E4C               	movwf	_RB5_f^0,c	;volatile
   747   001186                     
   748                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 70:             RB5_ISR(0);
   749   001186  0E00               	movlw	0
   750   001188  EC73  F009         	call	_RB5_ISR
   751   00118C                     i2l3151:
   752                           
   753                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 72:         if ((PORTBbits.RB5 == GPIO_L
      +                          OW) && RB5_f == 0) {
   754   00118C  BA81               	btfsc	129,5,c	;volatile
   755   00118E  EFCB  F008         	goto	i2u163_41
   756   001192  EFCD  F008         	goto	i2u163_40
   757   001196                     i2u163_41:
   758   001196  EFDA  F008         	goto	i2l3159
   759   00119A                     i2u163_40:
   760   00119A  504C               	movf	_RB5_f^0,w,c	;volatile
   761   00119C  A4D8               	btfss	status,2,c
   762   00119E  EFD3  F008         	goto	i2u164_41
   763   0011A2  EFD5  F008         	goto	i2u164_40
   764   0011A6                     i2u164_41:
   765   0011A6  EFDA  F008         	goto	i2l3159
   766   0011AA                     i2u164_40:
   767   0011AA                     
   768                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 73:             RB5_f = 1;
   769   0011AA  0E01               	movlw	1
   770   0011AC  6E4C               	movwf	_RB5_f^0,c	;volatile
   771   0011AE                     
   772                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 74:             RB5_ISR(1);
   773   0011AE  0E01               	movlw	1
   774   0011B0  EC73  F009         	call	_RB5_ISR
   775   0011B4                     i2l3159:
   776                           
   777                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 77:         if ((PORTBbits.RB6 == GPIO_H
      +                          IGH) && RB6_f == 1) {
   778   0011B4  AC81               	btfss	129,6,c	;volatile
   779   0011B6  EFDF  F008         	goto	i2u165_41
   780   0011BA  EFE1  F008         	goto	i2u165_40
   781   0011BE                     i2u165_41:
   782   0011BE  EFEE  F008         	goto	i2l3167
   783   0011C2                     i2u165_40:
   784   0011C2  044B               	decf	_RB6_f^0,w,c	;volatile
   785   0011C4  A4D8               	btfss	status,2,c
   786   0011C6  EFE7  F008         	goto	i2u166_41
   787   0011CA  EFE9  F008         	goto	i2u166_40
   788   0011CE                     i2u166_41:
   789   0011CE  EFEE  F008         	goto	i2l3167
   790   0011D2                     i2u166_40:
   791   0011D2                     
   792                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 78:             RB6_f = 0;
   793   0011D2  0E00               	movlw	0
   794   0011D4  6E4B               	movwf	_RB6_f^0,c	;volatile
   795   0011D6                     
   796                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 79:             RB6_ISR(0);
   797   0011D6  0E00               	movlw	0
   798   0011D8  EC66  F009         	call	_RB6_ISR
   799   0011DC                     i2l3167:
   800                           
   801                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 81:         if ((PORTBbits.RB6 == GPIO_L
      +                          OW) && RB6_f == 0) {
   802   0011DC  BC81               	btfsc	129,6,c	;volatile
   803   0011DE  EFF3  F008         	goto	i2u167_41
   804   0011E2  EFF5  F008         	goto	i2u167_40
   805   0011E6                     i2u167_41:
   806   0011E6  EF02  F009         	goto	i2l3175
   807   0011EA                     i2u167_40:
   808   0011EA  504B               	movf	_RB6_f^0,w,c	;volatile
   809   0011EC  A4D8               	btfss	status,2,c
   810   0011EE  EFFB  F008         	goto	i2u168_41
   811   0011F2  EFFD  F008         	goto	i2u168_40
   812   0011F6                     i2u168_41:
   813   0011F6  EF02  F009         	goto	i2l3175
   814   0011FA                     i2u168_40:
   815   0011FA                     
   816                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 82:             RB6_f = 1;
   817   0011FA  0E01               	movlw	1
   818   0011FC  6E4B               	movwf	_RB6_f^0,c	;volatile
   819   0011FE                     
   820                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 83:             RB6_ISR(1);
   821   0011FE  0E01               	movlw	1
   822   001200  EC66  F009         	call	_RB6_ISR
   823   001204                     i2l3175:
   824                           
   825                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 86:         if ((PORTBbits.RB7 == GPIO_H
      +                          IGH) && RB7_f == 1) {
   826   001204  AE81               	btfss	129,7,c	;volatile
   827   001206  EF07  F009         	goto	i2u169_41
   828   00120A  EF09  F009         	goto	i2u169_40
   829   00120E                     i2u169_41:
   830   00120E  EF16  F009         	goto	i2l3183
   831   001212                     i2u169_40:
   832   001212  044A               	decf	_RB7_f^0,w,c	;volatile
   833   001214  A4D8               	btfss	status,2,c
   834   001216  EF0F  F009         	goto	i2u170_41
   835   00121A  EF11  F009         	goto	i2u170_40
   836   00121E                     i2u170_41:
   837   00121E  EF16  F009         	goto	i2l3183
   838   001222                     i2u170_40:
   839   001222                     
   840                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 87:             RB7_f = 0;
   841   001222  0E00               	movlw	0
   842   001224  6E4A               	movwf	_RB7_f^0,c	;volatile
   843   001226                     
   844                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 88:             RB7_ISR(0);
   845   001226  0E00               	movlw	0
   846   001228  EC59  F009         	call	_RB7_ISR
   847   00122C                     i2l3183:
   848                           
   849                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 90:         if ((PORTBbits.RB7 == GPIO_L
      +                          OW) && RB7_f == 0) {
   850   00122C  BE81               	btfsc	129,7,c	;volatile
   851   00122E  EF1B  F009         	goto	i2u171_41
   852   001232  EF1D  F009         	goto	i2u171_40
   853   001236                     i2u171_41:
   854   001236  EF2A  F009         	goto	i2l839
   855   00123A                     i2u171_40:
   856   00123A  504A               	movf	_RB7_f^0,w,c	;volatile
   857   00123C  A4D8               	btfss	status,2,c
   858   00123E  EF23  F009         	goto	i2u172_41
   859   001242  EF25  F009         	goto	i2u172_40
   860   001246                     i2u172_41:
   861   001246  EF2A  F009         	goto	i2l839
   862   00124A                     i2u172_40:
   863   00124A                     
   864                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 91:             RB7_f = 1;
   865   00124A  0E01               	movlw	1
   866   00124C  6E4A               	movwf	_RB7_f^0,c	;volatile
   867   00124E                     
   868                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 92:             RB7_ISR(1);
   869   00124E  0E01               	movlw	1
   870   001250  EC59  F009         	call	_RB7_ISR
   871   001254                     i2l839:
   872   001254  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   873   001256  0011               	retfie		f
   874   001258                     __end_of_Interrupt_Manager_High:
   875                           	callstack 0
   876                           
   877 ;; *************** function _TIMER2_ISR *****************
   878 ;; Defined at:
   879 ;;		line 110 in file "MCAL_LAYER/Timer/hal_timer2.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		None
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;Total ram usage:        0 bytes
   898 ;; Hardware stack levels used: 1
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_Interrupt_Manager_High
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text4
   907   00133E                     __ptext4:
   908                           	callstack 0
   909   00133E                     _TIMER2_ISR:
   910                           	callstack 27
   911   00133E                     
   912                           ;MCAL_LAYER/Timer/hal_timer2.c: 112:     (PIR1bits.TMR2IF = 0);
   913   00133E  929E               	bcf	158,1,c	;volatile
   914                           
   915                           ;MCAL_LAYER/Timer/hal_timer2.c: 113:     TMR2 = pre;
   916   001340  C023  FFCC         	movff	_pre,4044	;volatile
   917   001344  0012               	return		;funcret
   918   001346                     __end_of_TIMER2_ISR:
   919                           	callstack 0
   920                           
   921 ;; *************** function _TIMER1_ISR *****************
   922 ;; Defined at:
   923 ;;		line 144 in file "MCAL_LAYER/Timer/hal_timer1.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_Interrupt_Manager_High
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text5
   951   001326                     __ptext5:
   952                           	callstack 0
   953   001326                     _TIMER1_ISR:
   954                           	callstack 27
   955   001326                     
   956                           ;MCAL_LAYER/Timer/hal_timer1.c: 146:     (PIR1bits.TMR1IF = 0);
   957   001326  909E               	bcf	158,0,c	;volatile
   958   001328                     
   959                           ;MCAL_LAYER/Timer/hal_timer1.c: 147:     TMR1H = (pre_work_out) >> 8;
   960   001328  5004               	movf	(_pre_work_out@hal_timer1$F2119+1)^0,w,c
   961   00132A  6ECF               	movwf	207,c	;volatile
   962   00132C                     
   963                           ;MCAL_LAYER/Timer/hal_timer1.c: 148:     TMR1L = (uint8) (pre_work_out);
   964   00132C  C003  FFCE         	movff	_pre_work_out@hal_timer1$F2119,4046	;volatile
   965   001330  0012               	return		;funcret
   966   001332                     __end_of_TIMER1_ISR:
   967                           	callstack 0
   968                           
   969 ;; *************** function _TIMER0_ISR *****************
   970 ;; Defined at:
   971 ;;		line 137 in file "MCAL_LAYER/Timer/hal_timer0.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;Total ram usage:        0 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_Interrupt_Manager_High
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text6
   999   001332                     __ptext6:
  1000                           	callstack 0
  1001   001332                     _TIMER0_ISR:
  1002                           	callstack 27
  1003   001332                     
  1004                           ;MCAL_LAYER/Timer/hal_timer0.c: 139:     (INTCONbits.TMR0IF = 0);
  1005   001332  94F2               	bcf	242,2,c	;volatile
  1006   001334                     
  1007                           ;MCAL_LAYER/Timer/hal_timer0.c: 140:     TMR0H = (pre_work_out) >> 8;
  1008   001334  5008               	movf	(_pre_work_out+1)^0,w,c
  1009   001336  6ED7               	movwf	215,c	;volatile
  1010   001338                     
  1011                           ;MCAL_LAYER/Timer/hal_timer0.c: 141:     TMR0L = (uint8) (pre_work_out);
  1012   001338  C007  FFD6         	movff	_pre_work_out,4054	;volatile
  1013   00133C  0012               	return		;funcret
  1014   00133E                     __end_of_TIMER0_ISR:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _RB7_ISR *****************
  1018 ;; Defined at:
  1019 ;;		line 514 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  source          1    wreg     unsigned char 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  source          1    0[COMRAM] unsigned char 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;Total ram usage:        1 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_Interrupt_Manager_High
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text7
  1047   0012B2                     __ptext7:
  1048                           	callstack 0
  1049   0012B2                     _RB7_ISR:
  1050                           	callstack 27
  1051                           
  1052                           ;incstack = 0
  1053                           ;RB7_ISR@source stored from wreg
  1054   0012B2  6E4E               	movwf	RB7_ISR@source^0,c
  1055   0012B4                     
  1056                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 515:     (INTCONbits.RBIF = 1);
  1057   0012B4  80F2               	bsf	242,0,c	;volatile
  1058   0012B6                     
  1059                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 517:     if (0 == source) {
  1060   0012B6  504E               	movf	RB7_ISR@source^0,w,c
  1061   0012B8  A4D8               	btfss	status,2,c
  1062   0012BA  EF61  F009         	goto	i2u45_41
  1063   0012BE  EF63  F009         	goto	i2u45_40
  1064   0012C2                     i2u45_41:
  1065   0012C2  EF65  F009         	goto	i2l2089
  1066   0012C6                     i2u45_40:
  1067   0012C6  EF65  F009         	goto	i2l778
  1068   0012CA                     i2l2089:
  1069   0012CA                     i2l778:
  1070   0012CA  0012               	return		;funcret
  1071   0012CC                     __end_of_RB7_ISR:
  1072                           	callstack 0
  1073                           
  1074 ;; *************** function _RB6_ISR *****************
  1075 ;; Defined at:
  1076 ;;		line 500 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;  source          1    wreg     unsigned char 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  source          1    0[COMRAM] unsigned char 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, status,0
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;Total ram usage:        1 bytes
  1095 ;; Hardware stack levels used: 1
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		_Interrupt_Manager_High
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text8
  1104   0012CC                     __ptext8:
  1105                           	callstack 0
  1106   0012CC                     _RB6_ISR:
  1107                           	callstack 27
  1108                           
  1109                           ;incstack = 0
  1110                           ;RB6_ISR@source stored from wreg
  1111   0012CC  6E4E               	movwf	RB6_ISR@source^0,c
  1112   0012CE                     
  1113                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 501:     (INTCONbits.RBIF = 1);
  1114   0012CE  80F2               	bsf	242,0,c	;volatile
  1115   0012D0                     
  1116                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 503:     if (0 == source) {
  1117   0012D0  504E               	movf	RB6_ISR@source^0,w,c
  1118   0012D2  A4D8               	btfss	status,2,c
  1119   0012D4  EF6E  F009         	goto	i2u44_41
  1120   0012D8  EF70  F009         	goto	i2u44_40
  1121   0012DC                     i2u44_41:
  1122   0012DC  EF72  F009         	goto	i2l2079
  1123   0012E0                     i2u44_40:
  1124   0012E0  EF72  F009         	goto	i2l770
  1125   0012E4                     i2l2079:
  1126   0012E4                     i2l770:
  1127   0012E4  0012               	return		;funcret
  1128   0012E6                     __end_of_RB6_ISR:
  1129                           	callstack 0
  1130                           
  1131 ;; *************** function _RB5_ISR *****************
  1132 ;; Defined at:
  1133 ;;		line 486 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  source          1    wreg     unsigned char 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  source          1    0[COMRAM] unsigned char 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, status,2, status,0
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;Total ram usage:        1 bytes
  1152 ;; Hardware stack levels used: 1
  1153 ;; This function calls:
  1154 ;;		Nothing
  1155 ;; This function is called by:
  1156 ;;		_Interrupt_Manager_High
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text9
  1161   0012E6                     __ptext9:
  1162                           	callstack 0
  1163   0012E6                     _RB5_ISR:
  1164                           	callstack 27
  1165                           
  1166                           ;incstack = 0
  1167                           ;RB5_ISR@source stored from wreg
  1168   0012E6  6E4E               	movwf	RB5_ISR@source^0,c
  1169   0012E8                     
  1170                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 487:     (INTCONbits.RBIF = 1);
  1171   0012E8  80F2               	bsf	242,0,c	;volatile
  1172   0012EA                     
  1173                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 489:     if (0 == source) {
  1174   0012EA  504E               	movf	RB5_ISR@source^0,w,c
  1175   0012EC  A4D8               	btfss	status,2,c
  1176   0012EE  EF7B  F009         	goto	i2u43_41
  1177   0012F2  EF7D  F009         	goto	i2u43_40
  1178   0012F6                     i2u43_41:
  1179   0012F6  EF7F  F009         	goto	i2l2069
  1180   0012FA                     i2u43_40:
  1181   0012FA  EF7F  F009         	goto	i2l762
  1182   0012FE                     i2l2069:
  1183   0012FE                     i2l762:
  1184   0012FE  0012               	return		;funcret
  1185   001300                     __end_of_RB5_ISR:
  1186                           	callstack 0
  1187                           
  1188 ;; *************** function _RB4_ISR *****************
  1189 ;; Defined at:
  1190 ;;		line 472 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  source          1    wreg     unsigned char 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  source          1    0[COMRAM] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;Total ram usage:        1 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_Interrupt_Manager_High
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text10
  1218   001300                     __ptext10:
  1219                           	callstack 0
  1220   001300                     _RB4_ISR:
  1221                           	callstack 27
  1222                           
  1223                           ;incstack = 0
  1224                           ;RB4_ISR@source stored from wreg
  1225   001300  6E4E               	movwf	RB4_ISR@source^0,c
  1226   001302                     
  1227                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 473:     (INTCONbits.RBIF = 1);
  1228   001302  80F2               	bsf	242,0,c	;volatile
  1229   001304                     
  1230                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 475:     if (0 == source) {
  1231   001304  504E               	movf	RB4_ISR@source^0,w,c
  1232   001306  A4D8               	btfss	status,2,c
  1233   001308  EF88  F009         	goto	i2u42_41
  1234   00130C  EF8A  F009         	goto	i2u42_40
  1235   001310                     i2u42_41:
  1236   001310  EF8C  F009         	goto	i2l2059
  1237   001314                     i2u42_40:
  1238   001314  EF8C  F009         	goto	i2l754
  1239   001318                     i2l2059:
  1240   001318                     i2l754:
  1241   001318  0012               	return		;funcret
  1242   00131A                     __end_of_RB4_ISR:
  1243                           	callstack 0
  1244                           
  1245 ;; *************** function _INT2_ISR *****************
  1246 ;; Defined at:
  1247 ;;		line 466 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		None
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;Total ram usage:        0 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_Interrupt_Manager_High
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text11
  1275   00134C                     __ptext11:
  1276                           	callstack 0
  1277   00134C                     _INT2_ISR:
  1278                           	callstack 27
  1279   00134C                     
  1280                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 467:     (INTCON3bits.INT2IF = 0);
  1281   00134C  92F0               	bcf	240,1,c	;volatile
  1282   00134E  0012               	return		;funcret
  1283   001350                     __end_of_INT2_ISR:
  1284                           	callstack 0
  1285                           
  1286 ;; *************** function _INT1_ISR *****************
  1287 ;; Defined at:
  1288 ;;		line 460 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		None
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;Total ram usage:        0 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_Interrupt_Manager_High
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text12
  1316   001350                     __ptext12:
  1317                           	callstack 0
  1318   001350                     _INT1_ISR:
  1319                           	callstack 27
  1320   001350                     
  1321                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 461:     (INTCON3bits.INT1IF = 0);
  1322   001350  90F0               	bcf	240,0,c	;volatile
  1323   001352  0012               	return		;funcret
  1324   001354                     __end_of_INT1_ISR:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function _INT0_ISR *****************
  1328 ;; Defined at:
  1329 ;;		line 454 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;		None
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;		None
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		None
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;Total ram usage:        0 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_Interrupt_Manager_High
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text13
  1357   001354                     __ptext13:
  1358                           	callstack 0
  1359   001354                     _INT0_ISR:
  1360                           	callstack 27
  1361   001354                     
  1362                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 455:     (INTCONbits.INT0IF = 0);
  1363   001354  92F2               	bcf	242,1,c	;volatile
  1364   001356  0012               	return		;funcret
  1365   001358                     __end_of_INT0_ISR:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _ADC_ISR *****************
  1369 ;; Defined at:
  1370 ;;		line 315 in file "MCAL_LAYER/ADC/hal_adc.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		None
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;Total ram usage:        0 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		_Interrupt_Manager_High
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text14
  1398   001358                     __ptext14:
  1399                           	callstack 0
  1400   001358                     _ADC_ISR:
  1401                           	callstack 27
  1402   001358                     
  1403                           ;MCAL_LAYER/ADC/hal_adc.c: 316:     (PIR1bits.ADIF = 0);
  1404   001358  9C9E               	bcf	158,6,c	;volatile
  1405   00135A  0012               	return		;funcret
  1406   00135C                     __end_of_ADC_ISR:
  1407                           	callstack 0
  1408                           
  1409                           	psect	rparam
  1410   000000                     
  1411                           	psect	temp
  1412   00004F                     btemp:
  1413                           	callstack 0
  1414   00004F                     	ds	1
  1415   000000                     int$flags	set	btemp
  1416   000000                     wtemp8	set	btemp+1
  1417   000000                     ttemp5	set	btemp+1
  1418   000000                     ttemp6	set	btemp+4
  1419   000000                     ttemp7	set	btemp+8
  1420                           
  1421                           	psect	config
  1422                           
  1423                           ; Padding undefined space
  1424   300000                     	org	3145728
  1425   300000  FF                 	db	255
  1426                           
  1427                           ;Config register CONFIG1H @ 0x300001
  1428                           ;	Oscillator Selection bits
  1429                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  1430                           ;	Fail-Safe Clock Monitor Enable bit
  1431                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1432                           ;	Internal/External Oscillator Switchover bit
  1433                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1434   300001                     	org	3145729
  1435   300001  07                 	db	7
  1436                           
  1437                           ;Config register CONFIG2L @ 0x300002
  1438                           ;	Power-up Timer Enable bit
  1439                           ;	PWRT = OFF, PWRT disabled
  1440                           ;	Brown-out Reset Enable bits
  1441                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1442                           ;	Brown Out Reset Voltage bits
  1443                           ;	BORV = 3, Minimum setting
  1444   300002                     	org	3145730
  1445   300002  1F                 	db	31
  1446                           
  1447                           ;Config register CONFIG2H @ 0x300003
  1448                           ;	Watchdog Timer Enable bit
  1449                           ;	WDT = ON, WDT enabled
  1450                           ;	Watchdog Timer Postscale Select bits
  1451                           ;	WDTPS = 32768, 1:32768
  1452   300003                     	org	3145731
  1453   300003  1F                 	db	31
  1454                           
  1455                           ; Padding undefined space
  1456   300004                     	org	3145732
  1457   300004  FF                 	db	255
  1458                           
  1459                           ;Config register CONFIG3H @ 0x300005
  1460                           ;	CCP2 MUX bit
  1461                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1462                           ;	PORTB A/D Enable bit
  1463                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1464                           ;	Low-Power Timer1 Oscillator Enable bit
  1465                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1466                           ;	MCLR Pin Enable bit
  1467                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1468   300005                     	org	3145733
  1469   300005  81                 	db	129
  1470                           
  1471                           ;Config register CONFIG4L @ 0x300006
  1472                           ;	Stack Full/Underflow Reset Enable bit
  1473                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1474                           ;	Single-Supply ICSP Enable bit
  1475                           ;	LVP = ON, Single-Supply ICSP enabled
  1476                           ;	Extended Instruction Set Enable bit
  1477                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1478                           ;	Background Debugger Enable bit
  1479                           ;	DEBUG = 0x1, unprogrammed default
  1480   300006                     	org	3145734
  1481   300006  85                 	db	133
  1482                           
  1483                           ; Padding undefined space
  1484   300007                     	org	3145735
  1485   300007  FF                 	db	255
  1486                           
  1487                           ;Config register CONFIG5L @ 0x300008
  1488                           ;	Code Protection bit
  1489                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1490                           ;	Code Protection bit
  1491                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1492                           ;	Code Protection bit
  1493                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1494                           ;	Code Protection bit
  1495                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1496   300008                     	org	3145736
  1497   300008  0F                 	db	15
  1498                           
  1499                           ;Config register CONFIG5H @ 0x300009
  1500                           ;	Boot Block Code Protection bit
  1501                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1502                           ;	Data EEPROM Code Protection bit
  1503                           ;	CPD = OFF, Data EEPROM not code-protected
  1504   300009                     	org	3145737
  1505   300009  C0                 	db	192
  1506                           
  1507                           ;Config register CONFIG6L @ 0x30000A
  1508                           ;	Write Protection bit
  1509                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1510                           ;	Write Protection bit
  1511                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1512                           ;	Write Protection bit
  1513                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1514                           ;	Write Protection bit
  1515                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1516   30000A                     	org	3145738
  1517   30000A  0F                 	db	15
  1518                           
  1519                           ;Config register CONFIG6H @ 0x30000B
  1520                           ;	Configuration Register Write Protection bit
  1521                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1522                           ;	Boot Block Write Protection bit
  1523                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1524                           ;	Data EEPROM Write Protection bit
  1525                           ;	WRTD = OFF, Data EEPROM not write-protected
  1526   30000B                     	org	3145739
  1527   30000B  E0                 	db	224
  1528                           
  1529                           ;Config register CONFIG7L @ 0x30000C
  1530                           ;	Table Read Protection bit
  1531                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1532                           ;	Table Read Protection bit
  1533                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1534                           ;	Table Read Protection bit
  1535                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1536                           ;	Table Read Protection bit
  1537                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1538   30000C                     	org	3145740
  1539   30000C  0F                 	db	15
  1540                           
  1541                           ;Config register CONFIG7H @ 0x30000D
  1542                           ;	Boot Block Table Read Protection bit
  1543                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1544   30000D                     	org	3145741
  1545   30000D  40                 	db	64
  1546                           tosu	equ	0xFFF
  1547                           tosh	equ	0xFFE
  1548                           tosl	equ	0xFFD
  1549                           stkptr	equ	0xFFC
  1550                           pclatu	equ	0xFFB
  1551                           pclath	equ	0xFFA
  1552                           pcl	equ	0xFF9
  1553                           tblptru	equ	0xFF8
  1554                           tblptrh	equ	0xFF7
  1555                           tblptrl	equ	0xFF6
  1556                           tablat	equ	0xFF5
  1557                           prodh	equ	0xFF4
  1558                           prodl	equ	0xFF3
  1559                           indf0	equ	0xFEF
  1560                           postinc0	equ	0xFEE
  1561                           postdec0	equ	0xFED
  1562                           preinc0	equ	0xFEC
  1563                           plusw0	equ	0xFEB
  1564                           fsr0h	equ	0xFEA
  1565                           fsr0l	equ	0xFE9
  1566                           wreg	equ	0xFE8
  1567                           indf1	equ	0xFE7
  1568                           postinc1	equ	0xFE6
  1569                           postdec1	equ	0xFE5
  1570                           preinc1	equ	0xFE4
  1571                           plusw1	equ	0xFE3
  1572                           fsr1h	equ	0xFE2
  1573                           fsr1l	equ	0xFE1
  1574                           bsr	equ	0xFE0
  1575                           indf2	equ	0xFDF
  1576                           postinc2	equ	0xFDE
  1577                           postdec2	equ	0xFDD
  1578                           preinc2	equ	0xFDC
  1579                           plusw2	equ	0xFDB
  1580                           fsr2h	equ	0xFDA
  1581                           fsr2l	equ	0xFD9
  1582                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        35
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      1      78
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Result@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    _ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    adc_select_result_format@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    adc_select_voltage_ref@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@obj$External_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@obj$External_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_Set_Interrupt_Handler@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1278$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    S1311$External_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    S1311$External_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    S1819$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S1989$Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S2210$Timer2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S2775$buffer	PTR unsigned char  size(2) Largest target is 0

    S2775$source	PTR const unsigned char  size(2) Largest target is 0

    S663$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    Timer0_Init@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0_Mode_Config@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Reg_Size_Config@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@timer$Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer1_Mode_Config@timer$Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@timer$Timer2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupt_Manager_High in COMRAM

    _Interrupt_Manager_High->_RB4_ISR
    _Interrupt_Manager_High->_RB5_ISR
    _Interrupt_Manager_High->_RB6_ISR
    _Interrupt_Manager_High->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt_Manager_High in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt_Manager_High in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_Manager_High in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_Manager_High in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_Manager_High in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_Manager_High in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_Manager_High in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_Manager_High in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_Manager_High in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_Manager_High in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_Manager_High in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_Manager_High in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_Manager_High in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_Manager_High in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_Manager_High in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_Manager_High in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
             _Application_initialize
 ---------------------------------------------------------------------------------
 (1) _Application_initialize                               0     0      0       0
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Interrupt_Manager_High                               0     0      0     120
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                         _TIMER0_ISR
                         _TIMER1_ISR
                         _TIMER2_ISR
 ---------------------------------------------------------------------------------
 (4) _TIMER2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TIMER1_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TIMER0_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_initialize
     _ecu_layer_initialize

 _Interrupt_Manager_High (ROOT)
   _ADC_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TIMER0_ISR
   _TIMER1_ISR
   _TIMER2_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      47        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      1      4E       1       61.9%
BITBIGSFRhlhlhh     18      0       0      38        0.0%
BITBIGSFRllhh       15      0       0      42        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllhll       7      0       0      43        0.0%
BITBIGSFRlllhh       6      0       0      44        0.0%
BITBIGSFRhlhllh      5      0       0      39        0.0%
BITBIGSFRhlhlll      5      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      45        0.0%
BITBIGSFRlllll       4      0       0      46        0.0%
BITBIGSFRhlhlll      1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E      20        0.0%
DATA                 0      0      4E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Mar 09 16:05:40 2024

       ?_Interrupt_Manager_High 004E                             l320 135C                             l972 134A  
                           l966 131E                             l967 131E                 __end_of_ADC_ISR 135C  
                           _ret 0049                             _pre 0023                             wreg 0FE8  
               __end_of_RB4_ISR 131A                 __end_of_RB5_ISR 1300                 __end_of_RB6_ISR 12E6  
               __end_of_RB7_ISR 12CC                            l2113 1346                            l1807 135C  
                          l3361 131A                            STR_1 1011                            _LATA 0F89  
                          _LATB 0F8A                            _LATC 0F8B                            _LATD 0F8C  
                          _LATE 0F8D                            _TMR2 0FCC                            _main 131A  
                          fsr1l 0FE1                            btemp 004F                            start 000E  
__end_of_Interrupt_Manager_High 1258                    ___param_bank 0000                     ?_TIMER0_ISR 004E  
                   ?_TIMER1_ISR 004E                     ?_TIMER2_ISR 004E                __end_of_INT0_ISR 1358  
              __end_of_INT1_ISR 1354                __end_of_INT2_ISR 1350   _pre_work_out@hal_timer1$F2119 0003  
                 Relay_on@F3485 0025                           ?_main 004E                           _EEADR 0FA9  
                         _RB4_f 004D                           _RB5_f 004C                           i2l444 135A  
                         _RB6_f 004B                           _RB7_f 004A                           i2l742 1352  
                         i2l738 1356                           i2l746 134E                           i2l754 1318  
                         i2l762 12FE                           i2l770 12E4                           i2l839 1254  
                         i2l952 1330                           i2l881 133C                           i2l778 12CA  
                         _TMR0H 0FD7                           _TMR1H 0FCF                           _TMR0L 0FD6  
                         _TMR1L 0FCE                           _PORTA 0F80                           _PORTB 0F81  
                         _PORTC 0F82                           _PORTD 0F83                           _PORTE 0F84  
                         _TRISA 0F92                           _TRISB 0F93                           _TRISC 0F94  
                         _TRISD 0F95                           _TRISE 0F96                           tablat 0FF5  
                         ttemp5 0050                           ttemp6 0053                           ttemp7 0057  
                         status 0FD8                           wtemp8 0050                 __initialization 1258  
                  __end_of_main 1326                       ??_ADC_ISR 004E                   _lat_registers 0035  
                        ??_main 004F                   __activetblptr 0003                led_turn_on@F3487 0029  
                     ??_RB4_ISR 004E                       ??_RB5_ISR 004E                       ??_RB6_ISR 004E  
                     ??_RB7_ISR 004E                          _ADRESH 0FC4                          _EEADRH 0FAA  
                        _ADRESL 0FC3                          _EEDATA 0FA8                          _EECON2 0FA7  
      _Timer2_Interrupt_Handler 0001                          i2l1012 1344                          i2l2001 1358  
                        i2l2101 1326                          i2l2103 1328                          i2l2041 1354  
                        i2l2105 132C                          i2l2045 1350                          i2l2053 1302  
                        i2l2109 133E                          i2l3101 1086                          i2l2055 1304  
                        i2l2063 12E8                          i2l3111 10B8                          i2l3103 1094  
                        i2l2049 134C                          i2l2065 12EA                          i2l2073 12CE  
                        i2l3121 10F4                          i2l3113 10C6                          i2l3105 1098  
                        i2l2059 1318                          i2l2075 12D0                          i2l2083 12B4  
                        i2l3131 1132                          i2l3123 10F8                          i2l3115 10D4  
                        i2l3107 10A6                          i2l2069 12FE                          i2l2085 12B6  
                        i2l2093 1332                          i2l3141 115E                          i2l3133 1136  
                        i2l3125 1106                          i2l3117 10D8                          i2l3109 10B4  
                        i2l2079 12E4                          i2l2095 1334                          i2l3151 118C  
                        i2l3143 1164                          i2l3135 113C                          i2l3127 1114  
                        i2l3119 10E6                          i2l2089 12CA                          i2l2097 1338  
                        i2l3161 11C2                          i2l3153 119A                          i2l3145 1172  
                        i2l3137 114A                          i2l3129 1122                          i2l3081 1018  
                        i2l3171 11FA                          i2l3163 11D2                          i2l3155 11AA  
                        i2l3147 1182                          i2l3139 115A                          i2l3091 1054  
                        i2l3083 1026                          i2l3181 1226                          i2l3173 11FE  
                        i2l3165 11D6                          i2l3157 11AE                          i2l3149 1186  
                        i2l3093 1058                          i2l3085 1034                          i2l3183 122C  
                        i2l3175 1204                          i2l3167 11DC                          i2l3159 11B4  
                        i2l3095 1066                          i2l3087 1038                          i2l3185 123A  
                        i2l3177 1212                          i2l3169 11EA                          i2l3097 1074  
                        i2l3089 1046                          i2l3187 124A                          i2l3179 1222  
                        i2l3099 1078                          i2l3189 124E                  Relay_off@F3490 0024  
       ?_Application_initialize 004E                          clear_0 127E                          isa$std 0001  
                  __pdataCOMRAM 002B                    __mediumconst 0000                          tblptrh 0FF7  
                        tblptrl 0FF6                          tblptru 0FF8                      __accesstop 0080  
       __end_of__initialization 1284                       ?_INT0_ISR 004E                       ?_INT1_ISR 004E  
                     ?_INT2_ISR 004E                   ___rparam_used 0001                  __pcstackCOMRAM 004E  
__end_of_Application_initialize 134C                   RB4_ISR@source 004E      _RB6_Interrupt_Handler_High 0011  
                 RB5_ISR@source 004E       _RB5_Interrupt_Handler_Low 0013                      ??_INT0_ISR 004E  
                    ??_INT1_ISR 004E                      ??_INT2_ISR 004E          _INT2_Interrupt_Handler 001B  
                 RB6_ISR@source 004E               led_turn_off@F3492 0028                    ??_TIMER0_ISR 004E  
                  ??_TIMER1_ISR 004E                    ??_TIMER2_ISR 004E                         _ADC_ISR 1358  
                       _RB4_ISR 1300                         _RB5_ISR 12E6                         _RB6_ISR 12CC  
                       _RB7_ISR 12B2                         i2u42_40 1314                         i2u42_41 1310  
                       i2u43_40 12FA                         i2u43_41 12F6                         i2u44_40 12E0  
                       i2u44_41 12DC                         i2u45_40 12C6                         i2u45_41 12C2  
                 RB7_ISR@source 004E                      _btn_values 1001                  _tris_registers 003F  
            __end_of_TIMER0_ISR 133E              __end_of_TIMER1_ISR 1332              __end_of_TIMER2_ISR 1346  
                       __Hparam 0000                         __Lparam 0000                    __psmallconst 1000  
                       __pcinit 1258                         __ramtop 1000                         __ptext0 131A  
                       __ptext1 1346                         __ptext2 135C                         __ptext4 133E  
                       __ptext5 1326                         __ptext6 1332                         __ptext7 12B2  
                       __ptext8 12CC                         __ptext9 12E6                       _T0CONbits 0FD5  
                     _T1CONbits 0FCD                       _T2CONbits 0FCA                  __pintcode_body 1016  
          end_of_initialization 1284                         int_func 1016                         postdec1 0FE5  
                       postinc0 0FEE                       _PORTBbits 0F81        _Timer0_Interrupt_Handler 0009  
      ??_Interrupt_Manager_High 004F                   __pidataCOMRAM 128E             start_initialization 1258  
                      ?_ADC_ISR 004E      _RB5_Interrupt_Handler_High 0015    __end_of_ecu_layer_initialize 135E  
                      ?_RB4_ISR 004E                        ?_RB5_ISR 004E                        ?_RB6_ISR 004E  
                      ?_RB7_ISR 004E                     __pbssCOMRAM 0001       _RB6_Interrupt_Handler_Low 000F  
        _INT0_Interrupt_Handler 001F           Relay_initialize@F3480 0026          __ADC_Interrupt_Handler 0021  
                     __pintcode 0008                     __smallconst 1000                        _INT0_ISR 1354  
                      _INT1_ISR 1350                        _INT2_ISR 134C        ??_Application_initialize 004F  
                      _PIE1bits 0F9D                        i2u141_40 1026                        i2u141_41 1022  
                      i2u150_40 10B4                        i2u142_40 1034                        i2u150_41 10B0  
                      i2u142_41 1030                        i2u151_40 10C6                        i2u143_40 1046  
                      i2u151_41 10C2                        i2u143_41 1042                        i2u160_40 115A  
                      i2u152_40 10D4                        i2u144_40 1054                        i2u160_41 1156  
                      i2u152_41 10D0                        i2u144_41 1050                        i2u161_40 1172  
                      i2u153_40 10E6                        i2u145_40 1066                        i2u161_41 116E  
                      i2u153_41 10E2                        i2u145_41 1062                        i2u170_40 1222  
                      i2u162_40 1182                        i2u154_40 10F4                        i2u146_40 1074  
                      i2u170_41 121E                        i2u162_41 117E                        i2u154_41 10F0  
                      i2u146_41 1070                        i2u171_40 123A                        i2u163_40 119A  
                      i2u155_40 1106                        i2u147_40 1086                        i2u171_41 1236  
                      i2u163_41 1196                        i2u155_41 1102                        i2u147_41 1082  
                      i2u172_40 124A                        i2u164_40 11AA                        i2u156_40 1114  
                      i2u148_40 1094                        i2u172_41 1246                        i2u164_41 11A6  
                      i2u156_41 1110                        i2u148_41 1090                        i2u165_40 11C2  
                      i2u157_40 1122                        i2u149_40 10A6                        i2u165_41 11BE  
                      i2u157_41 111E                        i2u149_41 10A2                        i2u166_40 11D2  
                      i2u158_40 1132                        i2u166_41 11CE                        i2u158_41 112E  
                      i2u167_40 11EA                        i2u159_40 114A                        i2u167_41 11E6  
                      i2u159_41 1146                        i2u168_40 11FA                        i2u168_41 11F6  
                      i2u169_40 1212                        i2u169_41 120E                        _PIR1bits 0F9E  
        _Interrupt_Manager_High 0008                      _ADCON0bits 0FC2                      _ADCON1bits 0FC1  
                    _ADCON2bits 0FC0                     _INTCON2bits 0FF1                     _INTCON3bits 0FF0  
                     copy_data0 126C            _ecu_layer_initialize 135C                      _EECON1bits 0FA6  
                      __Hrparam 0000                        __Lrparam 0000              __end_of_btn_values 1011  
            led_intialize@F3482 002A                        __ptext10 1300                        __ptext11 134C  
                      __ptext12 1350                        __ptext13 1354                        __ptext14 1358  
      _Timer1_Interrupt_Handler 0005           ?_ecu_layer_initialize 004E                        isa$xinst 0000  
                      int$flags 004F                      _INTCONbits 0FF2                    _pre_work_out 0007  
                      intlevel2 0000          led_toggle_status@F3497 0027                      _TIMER0_ISR 1332  
                    _TIMER1_ISR 1326                      _TIMER2_ISR 133E      _RB4_Interrupt_Handler_High 0019  
        _Application_initialize 1346      _RB7_Interrupt_Handler_High 000D                  _port_registers 002B  
     _RB4_Interrupt_Handler_Low 0017       _RB7_Interrupt_Handler_Low 000B          ??_ecu_layer_initialize 004F  
        _INT1_Interrupt_Handler 001D  
