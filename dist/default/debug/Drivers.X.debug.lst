

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 08 18:25:11 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 23/03/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4620 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   00126E                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _port_registers
    71   00126E  80                 	db	128
    72   00126F  0F                 	db	15
    73   001270  81                 	db	129
    74   001271  0F                 	db	15
    75   001272  82                 	db	130
    76   001273  0F                 	db	15
    77   001274  83                 	db	131
    78   001275  0F                 	db	15
    79   001276  84                 	db	132
    80   001277  0F                 	db	15
    81                           
    82                           ;initializer for _lat_registers
    83   001278  89                 	db	137
    84   001279  0F                 	db	15
    85   00127A  8A                 	db	138
    86   00127B  0F                 	db	15
    87   00127C  8B                 	db	139
    88   00127D  0F                 	db	15
    89   00127E  8C                 	db	140
    90   00127F  0F                 	db	15
    91   001280  8D                 	db	141
    92   001281  0F                 	db	15
    93                           
    94                           ;initializer for _tris_registers
    95   001282  92                 	db	146
    96   001283  0F                 	db	15
    97   001284  93                 	db	147
    98   001285  0F                 	db	15
    99   001286  94                 	db	148
   100   001287  0F                 	db	15
   101   001288  95                 	db	149
   102   001289  0F                 	db	15
   103   00128A  96                 	db	150
   104   00128B  0F                 	db	15
   105                           
   106                           ;initializer for _ret
   107   00128C  01                 	db	1
   108                           
   109                           ;initializer for _RB7_f
   110   00128D  01                 	db	1
   111                           
   112                           ;initializer for _RB6_f
   113   00128E  01                 	db	1
   114                           
   115                           ;initializer for _RB5_f
   116   00128F  01                 	db	1
   117                           
   118                           ;initializer for _RB4_f
   119   001290  01                 	db	1
   120                           
   121                           	psect	smallconst
   122   001000                     __psmallconst:
   123                           	callstack 0
   124   001000  00                 	db	0
   125   001001                     _btn_values:
   126                           	callstack 0
   127   001001  37                 	db	55
   128   001002  38                 	db	56
   129   001003  39                 	db	57
   130   001004  2F                 	db	47
   131   001005  34                 	db	52
   132   001006  35                 	db	53
   133   001007  36                 	db	54
   134   001008  2A                 	db	42
   135   001009  31                 	db	49
   136   00100A  32                 	db	50
   137   00100B  33                 	db	51
   138   00100C  2D                 	db	45
   139   00100D  23                 	db	35
   140   00100E  30                 	db	48
   141   00100F  3D                 	db	61
   142   001010  2B                 	db	43
   143   001011                     __end_of_btn_values:
   144                           	callstack 0
   145   000000                     _TMR1L	set	4046
   146   000000                     _TMR1H	set	4047
   147   000000                     _TMR0L	set	4054
   148   000000                     _TMR0H	set	4055
   149   000000                     _INTCON2bits	set	4081
   150   000000                     _EECON2	set	4007
   151   000000                     _ADCON1bits	set	4033
   152   000000                     _ADRESL	set	4035
   153   000000                     _ADRESH	set	4036
   154   000000                     _INTCONbits	set	4082
   155   000000                     _TRISD	set	3989
   156   000000                     _TRISC	set	3988
   157   000000                     _TRISB	set	3987
   158   000000                     _TRISE	set	3990
   159   000000                     _PORTBbits	set	3969
   160   000000                     _PIE1bits	set	3997
   161   000000                     _ADCON2bits	set	4032
   162   000000                     _ADCON0bits	set	4034
   163   000000                     _PORTE	set	3972
   164   000000                     _PORTD	set	3971
   165   000000                     _PORTC	set	3970
   166   000000                     _PORTB	set	3969
   167   000000                     _PORTA	set	3968
   168   000000                     _LATA	set	3977
   169   000000                     _TRISA	set	3986
   170   000000                     _EECON1bits	set	4006
   171   000000                     _EEDATA	set	4008
   172   000000                     _EEADR	set	4009
   173   000000                     _EEADRH	set	4010
   174   000000                     _PIR1bits	set	3998
   175   000000                     _T1CONbits	set	4045
   176   000000                     _T0CONbits	set	4053
   177   000000                     _INTCON3bits	set	4080
   178   000000                     _LATE	set	3981
   179   000000                     _LATD	set	3980
   180   000000                     _LATC	set	3979
   181   000000                     _LATB	set	3978
   182   001011                     STR_1:
   183   001011  25                 	db	37
   184   001012  69                 	db	105	;'i'
   185   001013  00                 	db	0
   186   001014  00                 	db	0	; dummy byte at the end
   187   000000                     
   188                           ; #config settings
   189                           
   190                           	psect	cinit
   191   001238                     __pcinit:
   192                           	callstack 0
   193   001238                     start_initialization:
   194                           	callstack 0
   195   001238                     __initialization:
   196                           	callstack 0
   197                           
   198                           ; Initialize objects allocated to COMRAM (35 bytes)
   199                           ; load TBLPTR registers with __pidataCOMRAM
   200   001238  0E6E               	movlw	low __pidataCOMRAM
   201   00123A  6EF6               	movwf	tblptrl,c
   202   00123C  0E12               	movlw	high __pidataCOMRAM
   203   00123E  6EF7               	movwf	tblptrh,c
   204   001240  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   205   001242  6EF8               	movwf	tblptru,c
   206   001244  EE00  F028         	lfsr	0,__pdataCOMRAM
   207   001248  EE10 F023          	lfsr	1,35
   208   00124C                     copy_data0:
   209   00124C  0009               	tblrd		*+
   210   00124E  CFF5 FFEE          	movff	tablat,postinc0
   211   001252  50E5               	movf	postdec1,w,c
   212   001254  50E1               	movf	fsr1l,w,c
   213   001256  E1FA               	bnz	copy_data0
   214                           
   215                           ; Clear objects allocated to COMRAM (39 bytes)
   216   001258  EE00  F001         	lfsr	0,__pbssCOMRAM
   217   00125C  0E27               	movlw	39
   218   00125E                     clear_0:
   219   00125E  6AEE               	clrf	postinc0,c
   220   001260  06E8               	decf	wreg,f,c
   221   001262  E1FD               	bnz	clear_0
   222   001264                     end_of_initialization:
   223                           	callstack 0
   224   001264                     __end_of__initialization:
   225                           	callstack 0
   226   001264  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   227   001266  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   228   001268  0100               	movlb	0
   229   00126A  EF7D  F009         	goto	_main	;jump to C main() function
   230                           
   231                           	psect	bssCOMRAM
   232   000001                     __pbssCOMRAM:
   233                           	callstack 0
   234   000001                     _pre_work_out@hal_timer1$F2115:
   235                           	callstack 0
   236   000001                     	ds	2
   237   000003                     _Timer1_Interrupt_Handler:
   238                           	callstack 0
   239   000003                     	ds	2
   240   000005                     _pre_work_out:
   241                           	callstack 0
   242   000005                     	ds	2
   243   000007                     _Timer0_Interrupt_Handler:
   244                           	callstack 0
   245   000007                     	ds	2
   246   000009                     _RB7_Interrupt_Handler_Low:
   247                           	callstack 0
   248   000009                     	ds	2
   249   00000B                     _RB7_Interrupt_Handler_High:
   250                           	callstack 0
   251   00000B                     	ds	2
   252   00000D                     _RB6_Interrupt_Handler_Low:
   253                           	callstack 0
   254   00000D                     	ds	2
   255   00000F                     _RB6_Interrupt_Handler_High:
   256                           	callstack 0
   257   00000F                     	ds	2
   258   000011                     _RB5_Interrupt_Handler_Low:
   259                           	callstack 0
   260   000011                     	ds	2
   261   000013                     _RB5_Interrupt_Handler_High:
   262                           	callstack 0
   263   000013                     	ds	2
   264   000015                     _RB4_Interrupt_Handler_Low:
   265                           	callstack 0
   266   000015                     	ds	2
   267   000017                     _RB4_Interrupt_Handler_High:
   268                           	callstack 0
   269   000017                     	ds	2
   270   000019                     _INT2_Interrupt_Handler:
   271                           	callstack 0
   272   000019                     	ds	2
   273   00001B                     _INT1_Interrupt_Handler:
   274                           	callstack 0
   275   00001B                     	ds	2
   276   00001D                     _INT0_Interrupt_Handler:
   277                           	callstack 0
   278   00001D                     	ds	2
   279   00001F                     __ADC_Interrupt_Handler:
   280                           	callstack 0
   281   00001F                     	ds	2
   282   000021                     Relay_off@F3490:
   283                           	callstack 0
   284   000021                     	ds	1
   285   000022                     Relay_on@F3485:
   286                           	callstack 0
   287   000022                     	ds	1
   288   000023                     Relay_initialize@F3480:
   289                           	callstack 0
   290   000023                     	ds	1
   291   000024                     led_toggle_status@F3497:
   292                           	callstack 0
   293   000024                     	ds	1
   294   000025                     led_turn_off@F3492:
   295                           	callstack 0
   296   000025                     	ds	1
   297   000026                     led_turn_on@F3487:
   298                           	callstack 0
   299   000026                     	ds	1
   300   000027                     led_intialize@F3482:
   301                           	callstack 0
   302   000027                     	ds	1
   303                           
   304                           	psect	dataCOMRAM
   305   000028                     __pdataCOMRAM:
   306                           	callstack 0
   307   000028                     _port_registers:
   308                           	callstack 0
   309   000028                     	ds	10
   310   000032                     _lat_registers:
   311                           	callstack 0
   312   000032                     	ds	10
   313   00003C                     _tris_registers:
   314                           	callstack 0
   315   00003C                     	ds	10
   316   000046                     _ret:
   317                           	callstack 0
   318   000046                     	ds	1
   319   000047                     _RB7_f:
   320                           	callstack 0
   321   000047                     	ds	1
   322   000048                     _RB6_f:
   323                           	callstack 0
   324   000048                     	ds	1
   325   000049                     _RB5_f:
   326                           	callstack 0
   327   000049                     	ds	1
   328   00004A                     _RB4_f:
   329                           	callstack 0
   330   00004A                     	ds	1
   331                           
   332                           	psect	cstackCOMRAM
   333   00004B                     __pcstackCOMRAM:
   334                           	callstack 0
   335   00004B                     RB4_ISR@source:
   336                           	callstack 0
   337   00004B                     RB5_ISR@source:
   338                           	callstack 0
   339   00004B                     RB6_ISR@source:
   340                           	callstack 0
   341   00004B                     RB7_ISR@source:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0x0
   345   00004B                     	ds	1
   346   00004C                     
   347                           ; 1 bytes @ 0x1
   348 ;;
   349 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   350 ;;
   351 ;; *************** function _main *****************
   352 ;; Defined at:
   353 ;;		line 18 in file "app.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  2  962[None  ] int 
   360 ;; Registers used:
   361 ;;		wreg, status,2, cstack
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;Total ram usage:        0 bytes
   372 ;; Hardware stack levels required when called: 4
   373 ;; This function calls:
   374 ;;		_Application_initialize
   375 ;; This function is called by:
   376 ;;		Startup code after reset
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text0
   381   0012FA                     __ptext0:
   382                           	callstack 0
   383   0012FA                     _main:
   384                           	callstack 27
   385   0012FA                     
   386                           ;app.c: 20:     Application_initialize();
   387   0012FA  EC8F  F009         	call	_Application_initialize	;wreg free
   388   0012FE                     l963:
   389   0012FE  EF7F  F009         	goto	l963
   390   001302  EF07  F000         	goto	start
   391   001306                     __end_of_main:
   392                           	callstack 0
   393                           
   394 ;; *************** function _Application_initialize *****************
   395 ;; Defined at:
   396 ;;		line 29 in file "app.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, status,2, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;Total ram usage:        0 bytes
   415 ;; Hardware stack levels used: 1
   416 ;; Hardware stack levels required when called: 3
   417 ;; This function calls:
   418 ;;		_ecu_layer_initialize
   419 ;; This function is called by:
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	text1
   425   00131E                     __ptext1:
   426                           	callstack 0
   427   00131E                     _Application_initialize:
   428                           	callstack 27
   429   00131E                     
   430                           ;app.c: 31:     ecu_layer_initialize();
   431   00131E  EC9A  F009         	call	_ecu_layer_initialize	;wreg free
   432   001322  0012               	return		;funcret
   433   001324                     __end_of_Application_initialize:
   434                           	callstack 0
   435                           
   436 ;; *************** function _ecu_layer_initialize *****************
   437 ;; Defined at:
   438 ;;		line 11 in file "ECU_LAYER/ecu_layer_init.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;  ret             1    0        unsigned char 
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, status,2
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   456 ;;Total ram usage:        0 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; Hardware stack levels required when called: 2
   459 ;; This function calls:
   460 ;;		Nothing
   461 ;; This function is called by:
   462 ;;		_Application_initialize
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text2
   467   001334                     __ptext2:
   468                           	callstack 0
   469   001334                     _ecu_layer_initialize:
   470                           	callstack 27
   471   001334  0012               	return		;funcret
   472   001336                     __end_of_ecu_layer_initialize:
   473                           	callstack 0
   474                           
   475 ;; *************** function _Interrupt_Manager_High *****************
   476 ;; Defined at:
   477 ;;		line 29 in file "MCAL_LAYER/Interrupt/mcal_interrupt_manager.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used: 1
   497 ;; Hardware stack levels required when called: 1
   498 ;; This function calls:
   499 ;;		_ADC_ISR
   500 ;;		_INT0_ISR
   501 ;;		_INT1_ISR
   502 ;;		_INT2_ISR
   503 ;;		_RB4_ISR
   504 ;;		_RB5_ISR
   505 ;;		_RB6_ISR
   506 ;;		_RB7_ISR
   507 ;;		_TIMER0_ISR
   508 ;;		_TIMER1_ISR
   509 ;; This function is called by:
   510 ;;		Interrupt level 2
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	intcode
   515   000008                     __pintcode:
   516                           	callstack 0
   517   000008                     _Interrupt_Manager_High:
   518                           	callstack 27
   519                           
   520                           ;incstack = 0
   521   000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   522   00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
   523                           
   524                           	psect	intcode_body
   525   001016                     __pintcode_body:
   526                           	callstack 27
   527   001016                     int_func:
   528                           	callstack 27
   529   001016  0006               	pop		; remove dummy address from shadow register refresh
   530   001018                     
   531                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 31:     if ((INTCONbits.INT0IE == 1) && 
      +                          (INTCONbits.INT0IF == 1)) {
   532   001018  A8F2               	btfss	242,4,c	;volatile
   533   00101A  EF11  F008         	goto	i2u141_41
   534   00101E  EF13  F008         	goto	i2u141_40
   535   001022                     i2u141_41:
   536   001022  EF1C  F008         	goto	i2l3040
   537   001026                     i2u141_40:
   538   001026  A2F2               	btfss	242,1,c	;volatile
   539   001028  EF18  F008         	goto	i2u142_41
   540   00102C  EF1A  F008         	goto	i2u142_40
   541   001030                     i2u142_41:
   542   001030  EF1C  F008         	goto	i2l3040
   543   001034                     i2u142_40:
   544   001034                     
   545                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 32:         INT0_ISR();
   546   001034  EC96  F009         	call	_INT0_ISR	;wreg free
   547   001038                     i2l3040:
   548                           
   549                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 35:     if ((INTCON3bits.INT1IE == 1) &&
      +                           (INTCON3bits.INT1IF == 1)) {
   550   001038  A6F0               	btfss	240,3,c	;volatile
   551   00103A  EF21  F008         	goto	i2u143_41
   552   00103E  EF23  F008         	goto	i2u143_40
   553   001042                     i2u143_41:
   554   001042  EF2C  F008         	goto	i2l3046
   555   001046                     i2u143_40:
   556   001046  A0F0               	btfss	240,0,c	;volatile
   557   001048  EF28  F008         	goto	i2u144_41
   558   00104C  EF2A  F008         	goto	i2u144_40
   559   001050                     i2u144_41:
   560   001050  EF2C  F008         	goto	i2l3046
   561   001054                     i2u144_40:
   562   001054                     
   563                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 36:         INT1_ISR();
   564   001054  EC94  F009         	call	_INT1_ISR	;wreg free
   565   001058                     i2l3046:
   566                           
   567                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 39:     if ((INTCON3bits.INT2IE == 1) &&
      +                           (INTCON3bits.INT2IF == 1)) {
   568   001058  A8F0               	btfss	240,4,c	;volatile
   569   00105A  EF31  F008         	goto	i2u145_41
   570   00105E  EF33  F008         	goto	i2u145_40
   571   001062                     i2u145_41:
   572   001062  EF3C  F008         	goto	i2l3052
   573   001066                     i2u145_40:
   574   001066  A2F0               	btfss	240,1,c	;volatile
   575   001068  EF38  F008         	goto	i2u146_41
   576   00106C  EF3A  F008         	goto	i2u146_40
   577   001070                     i2u146_41:
   578   001070  EF3C  F008         	goto	i2l3052
   579   001074                     i2u146_40:
   580   001074                     
   581                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 40:         INT2_ISR();
   582   001074  EC92  F009         	call	_INT2_ISR	;wreg free
   583   001078                     i2l3052:
   584                           
   585                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 42:     if (1 == PIE1bits.ADIE && 1 == P
      +                          IR1bits.ADIF) {
   586   001078  AC9D               	btfss	157,6,c	;volatile
   587   00107A  EF41  F008         	goto	i2u147_41
   588   00107E  EF43  F008         	goto	i2u147_40
   589   001082                     i2u147_41:
   590   001082  EF4C  F008         	goto	i2l3058
   591   001086                     i2u147_40:
   592   001086  AC9E               	btfss	158,6,c	;volatile
   593   001088  EF48  F008         	goto	i2u148_41
   594   00108C  EF4A  F008         	goto	i2u148_40
   595   001090                     i2u148_41:
   596   001090  EF4C  F008         	goto	i2l3058
   597   001094                     i2u148_40:
   598   001094                     
   599                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 43:         ADC_ISR();
   600   001094  EC98  F009         	call	_ADC_ISR	;wreg free
   601   001098                     i2l3058:
   602                           
   603                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 45:     if (1 == INTCONbits.TMR0IE && 1 
      +                          == INTCONbits.TMR0IF) {
   604   001098  AAF2               	btfss	242,5,c	;volatile
   605   00109A  EF51  F008         	goto	i2u149_41
   606   00109E  EF53  F008         	goto	i2u149_40
   607   0010A2                     i2u149_41:
   608   0010A2  EF5C  F008         	goto	i2l3064
   609   0010A6                     i2u149_40:
   610   0010A6  A4F2               	btfss	242,2,c	;volatile
   611   0010A8  EF58  F008         	goto	i2u150_41
   612   0010AC  EF5A  F008         	goto	i2u150_40
   613   0010B0                     i2u150_41:
   614   0010B0  EF5C  F008         	goto	i2l3064
   615   0010B4                     i2u150_40:
   616   0010B4                     
   617                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 46:         TIMER0_ISR();
   618   0010B4  EC89  F009         	call	_TIMER0_ISR	;wreg free
   619   0010B8                     i2l3064:
   620                           
   621                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 48:     if (1 == PIE1bits.TMR1IE && 1 ==
      +                           PIR1bits.TMR1IF) {
   622   0010B8  A09D               	btfss	157,0,c	;volatile
   623   0010BA  EF61  F008         	goto	i2u151_41
   624   0010BE  EF63  F008         	goto	i2u151_40
   625   0010C2                     i2u151_41:
   626   0010C2  EF6C  F008         	goto	i2l3070
   627   0010C6                     i2u151_40:
   628   0010C6  A09E               	btfss	158,0,c	;volatile
   629   0010C8  EF68  F008         	goto	i2u152_41
   630   0010CC  EF6A  F008         	goto	i2u152_40
   631   0010D0                     i2u152_41:
   632   0010D0  EF6C  F008         	goto	i2l3070
   633   0010D4                     i2u152_40:
   634   0010D4                     
   635                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 49:         TIMER1_ISR();
   636   0010D4  EC83  F009         	call	_TIMER1_ISR	;wreg free
   637   0010D8                     i2l3070:
   638                           
   639                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 52:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1)) {
   640   0010D8  A6F2               	btfss	242,3,c	;volatile
   641   0010DA  EF71  F008         	goto	i2u153_41
   642   0010DE  EF73  F008         	goto	i2u153_40
   643   0010E2                     i2u153_41:
   644   0010E2  EF1A  F009         	goto	i2l836
   645   0010E6                     i2u153_40:
   646   0010E6  A0F2               	btfss	242,0,c	;volatile
   647   0010E8  EF78  F008         	goto	i2u154_41
   648   0010EC  EF7A  F008         	goto	i2u154_40
   649   0010F0                     i2u154_41:
   650   0010F0  EF1A  F009         	goto	i2l836
   651   0010F4                     i2u154_40:
   652   0010F4                     
   653                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 56:         if ((PORTBbits.RB4 == GPIO_H
      +                          IGH) && RB4_f == 1) {
   654   0010F4  A881               	btfss	129,4,c	;volatile
   655   0010F6  EF7F  F008         	goto	i2u155_41
   656   0010FA  EF81  F008         	goto	i2u155_40
   657   0010FE                     i2u155_41:
   658   0010FE  EF8E  F008         	goto	i2l3082
   659   001102                     i2u155_40:
   660   001102  044A               	decf	_RB4_f^0,w,c	;volatile
   661   001104  A4D8               	btfss	status,2,c
   662   001106  EF87  F008         	goto	i2u156_41
   663   00110A  EF89  F008         	goto	i2u156_40
   664   00110E                     i2u156_41:
   665   00110E  EF8E  F008         	goto	i2l3082
   666   001112                     i2u156_40:
   667   001112                     
   668                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 57:             RB4_f = 0;
   669   001112  0E00               	movlw	0
   670   001114  6E4A               	movwf	_RB4_f^0,c	;volatile
   671   001116                     
   672                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 58:             RB4_ISR(0);
   673   001116  0E00               	movlw	0
   674   001118  EC70  F009         	call	_RB4_ISR
   675   00111C                     i2l3082:
   676                           
   677                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 60:         if ((PORTBbits.RB4 == GPIO_L
      +                          OW) && RB4_f == 0) {
   678   00111C  B881               	btfsc	129,4,c	;volatile
   679   00111E  EF93  F008         	goto	i2u157_41
   680   001122  EF95  F008         	goto	i2u157_40
   681   001126                     i2u157_41:
   682   001126  EFA2  F008         	goto	i2l3090
   683   00112A                     i2u157_40:
   684   00112A  504A               	movf	_RB4_f^0,w,c	;volatile
   685   00112C  A4D8               	btfss	status,2,c
   686   00112E  EF9B  F008         	goto	i2u158_41
   687   001132  EF9D  F008         	goto	i2u158_40
   688   001136                     i2u158_41:
   689   001136  EFA2  F008         	goto	i2l3090
   690   00113A                     i2u158_40:
   691   00113A                     
   692                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 61:             RB4_f = 1;
   693   00113A  0E01               	movlw	1
   694   00113C  6E4A               	movwf	_RB4_f^0,c	;volatile
   695   00113E                     
   696                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 62:             RB4_ISR(1);
   697   00113E  0E01               	movlw	1
   698   001140  EC70  F009         	call	_RB4_ISR
   699   001144                     i2l3090:
   700                           
   701                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 65:         if ((PORTBbits.RB5 == GPIO_H
      +                          IGH) && RB5_f == 1) {
   702   001144  AA81               	btfss	129,5,c	;volatile
   703   001146  EFA7  F008         	goto	i2u159_41
   704   00114A  EFA9  F008         	goto	i2u159_40
   705   00114E                     i2u159_41:
   706   00114E  EFB6  F008         	goto	i2l3098
   707   001152                     i2u159_40:
   708   001152  0449               	decf	_RB5_f^0,w,c	;volatile
   709   001154  A4D8               	btfss	status,2,c
   710   001156  EFAF  F008         	goto	i2u160_41
   711   00115A  EFB1  F008         	goto	i2u160_40
   712   00115E                     i2u160_41:
   713   00115E  EFB6  F008         	goto	i2l3098
   714   001162                     i2u160_40:
   715   001162                     
   716                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 66:             RB5_f = 0;
   717   001162  0E00               	movlw	0
   718   001164  6E49               	movwf	_RB5_f^0,c	;volatile
   719   001166                     
   720                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 67:             RB5_ISR(0);
   721   001166  0E00               	movlw	0
   722   001168  EC63  F009         	call	_RB5_ISR
   723   00116C                     i2l3098:
   724                           
   725                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 69:         if ((PORTBbits.RB5 == GPIO_L
      +                          OW) && RB5_f == 0) {
   726   00116C  BA81               	btfsc	129,5,c	;volatile
   727   00116E  EFBB  F008         	goto	i2u161_41
   728   001172  EFBD  F008         	goto	i2u161_40
   729   001176                     i2u161_41:
   730   001176  EFCA  F008         	goto	i2l3106
   731   00117A                     i2u161_40:
   732   00117A  5049               	movf	_RB5_f^0,w,c	;volatile
   733   00117C  A4D8               	btfss	status,2,c
   734   00117E  EFC3  F008         	goto	i2u162_41
   735   001182  EFC5  F008         	goto	i2u162_40
   736   001186                     i2u162_41:
   737   001186  EFCA  F008         	goto	i2l3106
   738   00118A                     i2u162_40:
   739   00118A                     
   740                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 70:             RB5_f = 1;
   741   00118A  0E01               	movlw	1
   742   00118C  6E49               	movwf	_RB5_f^0,c	;volatile
   743   00118E                     
   744                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 71:             RB5_ISR(1);
   745   00118E  0E01               	movlw	1
   746   001190  EC63  F009         	call	_RB5_ISR
   747   001194                     i2l3106:
   748                           
   749                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 74:         if ((PORTBbits.RB6 == GPIO_H
      +                          IGH) && RB6_f == 1) {
   750   001194  AC81               	btfss	129,6,c	;volatile
   751   001196  EFCF  F008         	goto	i2u163_41
   752   00119A  EFD1  F008         	goto	i2u163_40
   753   00119E                     i2u163_41:
   754   00119E  EFDE  F008         	goto	i2l3114
   755   0011A2                     i2u163_40:
   756   0011A2  0448               	decf	_RB6_f^0,w,c	;volatile
   757   0011A4  A4D8               	btfss	status,2,c
   758   0011A6  EFD7  F008         	goto	i2u164_41
   759   0011AA  EFD9  F008         	goto	i2u164_40
   760   0011AE                     i2u164_41:
   761   0011AE  EFDE  F008         	goto	i2l3114
   762   0011B2                     i2u164_40:
   763   0011B2                     
   764                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 75:             RB6_f = 0;
   765   0011B2  0E00               	movlw	0
   766   0011B4  6E48               	movwf	_RB6_f^0,c	;volatile
   767   0011B6                     
   768                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 76:             RB6_ISR(0);
   769   0011B6  0E00               	movlw	0
   770   0011B8  EC56  F009         	call	_RB6_ISR
   771   0011BC                     i2l3114:
   772                           
   773                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 78:         if ((PORTBbits.RB6 == GPIO_L
      +                          OW) && RB6_f == 0) {
   774   0011BC  BC81               	btfsc	129,6,c	;volatile
   775   0011BE  EFE3  F008         	goto	i2u165_41
   776   0011C2  EFE5  F008         	goto	i2u165_40
   777   0011C6                     i2u165_41:
   778   0011C6  EFF2  F008         	goto	i2l3122
   779   0011CA                     i2u165_40:
   780   0011CA  5048               	movf	_RB6_f^0,w,c	;volatile
   781   0011CC  A4D8               	btfss	status,2,c
   782   0011CE  EFEB  F008         	goto	i2u166_41
   783   0011D2  EFED  F008         	goto	i2u166_40
   784   0011D6                     i2u166_41:
   785   0011D6  EFF2  F008         	goto	i2l3122
   786   0011DA                     i2u166_40:
   787   0011DA                     
   788                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 79:             RB6_f = 1;
   789   0011DA  0E01               	movlw	1
   790   0011DC  6E48               	movwf	_RB6_f^0,c	;volatile
   791   0011DE                     
   792                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 80:             RB6_ISR(1);
   793   0011DE  0E01               	movlw	1
   794   0011E0  EC56  F009         	call	_RB6_ISR
   795   0011E4                     i2l3122:
   796                           
   797                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 83:         if ((PORTBbits.RB7 == GPIO_H
      +                          IGH) && RB7_f == 1) {
   798   0011E4  AE81               	btfss	129,7,c	;volatile
   799   0011E6  EFF7  F008         	goto	i2u167_41
   800   0011EA  EFF9  F008         	goto	i2u167_40
   801   0011EE                     i2u167_41:
   802   0011EE  EF06  F009         	goto	i2l3130
   803   0011F2                     i2u167_40:
   804   0011F2  0447               	decf	_RB7_f^0,w,c	;volatile
   805   0011F4  A4D8               	btfss	status,2,c
   806   0011F6  EFFF  F008         	goto	i2u168_41
   807   0011FA  EF01  F009         	goto	i2u168_40
   808   0011FE                     i2u168_41:
   809   0011FE  EF06  F009         	goto	i2l3130
   810   001202                     i2u168_40:
   811   001202                     
   812                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 84:             RB7_f = 0;
   813   001202  0E00               	movlw	0
   814   001204  6E47               	movwf	_RB7_f^0,c	;volatile
   815   001206                     
   816                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 85:             RB7_ISR(0);
   817   001206  0E00               	movlw	0
   818   001208  EC49  F009         	call	_RB7_ISR
   819   00120C                     i2l3130:
   820                           
   821                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 87:         if ((PORTBbits.RB7 == GPIO_L
      +                          OW) && RB7_f == 0) {
   822   00120C  BE81               	btfsc	129,7,c	;volatile
   823   00120E  EF0B  F009         	goto	i2u169_41
   824   001212  EF0D  F009         	goto	i2u169_40
   825   001216                     i2u169_41:
   826   001216  EF1A  F009         	goto	i2l836
   827   00121A                     i2u169_40:
   828   00121A  5047               	movf	_RB7_f^0,w,c	;volatile
   829   00121C  A4D8               	btfss	status,2,c
   830   00121E  EF13  F009         	goto	i2u170_41
   831   001222  EF15  F009         	goto	i2u170_40
   832   001226                     i2u170_41:
   833   001226  EF1A  F009         	goto	i2l836
   834   00122A                     i2u170_40:
   835   00122A                     
   836                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 88:             RB7_f = 1;
   837   00122A  0E01               	movlw	1
   838   00122C  6E47               	movwf	_RB7_f^0,c	;volatile
   839   00122E                     
   840                           ;MCAL_LAYER/Interrupt/mcal_interrupt_manager.c: 89:             RB7_ISR(1);
   841   00122E  0E01               	movlw	1
   842   001230  EC49  F009         	call	_RB7_ISR
   843   001234                     i2l836:
   844   001234  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   845   001236  0011               	retfie		f
   846   001238                     __end_of_Interrupt_Manager_High:
   847                           	callstack 0
   848                           
   849 ;; *************** function _TIMER1_ISR *****************
   850 ;; Defined at:
   851 ;;		line 144 in file "MCAL_LAYER/Timer/hal_timer1.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, status,2
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;Total ram usage:        0 bytes
   870 ;; Hardware stack levels used: 1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_Interrupt_Manager_High
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text4
   879   001306                     __ptext4:
   880                           	callstack 0
   881   001306                     _TIMER1_ISR:
   882                           	callstack 27
   883   001306                     
   884                           ;MCAL_LAYER/Timer/hal_timer1.c: 146:     (PIR1bits.TMR1IF = 0);
   885   001306  909E               	bcf	158,0,c	;volatile
   886   001308                     
   887                           ;MCAL_LAYER/Timer/hal_timer1.c: 147:     TMR1H = (pre_work_out) >> 8;
   888   001308  5002               	movf	(_pre_work_out@hal_timer1$F2115+1)^0,w,c
   889   00130A  6ECF               	movwf	207,c	;volatile
   890   00130C                     
   891                           ;MCAL_LAYER/Timer/hal_timer1.c: 148:     TMR1L = (uint8) (pre_work_out);
   892   00130C  C001  FFCE         	movff	_pre_work_out@hal_timer1$F2115,4046	;volatile
   893   001310  0012               	return		;funcret
   894   001312                     __end_of_TIMER1_ISR:
   895                           	callstack 0
   896                           
   897 ;; *************** function _TIMER0_ISR *****************
   898 ;; Defined at:
   899 ;;		line 137 in file "MCAL_LAYER/Timer/hal_timer0.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, status,2
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_Interrupt_Manager_High
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text5
   927   001312                     __ptext5:
   928                           	callstack 0
   929   001312                     _TIMER0_ISR:
   930                           	callstack 27
   931   001312                     
   932                           ;MCAL_LAYER/Timer/hal_timer0.c: 139:     (INTCONbits.TMR0IF = 0);
   933   001312  94F2               	bcf	242,2,c	;volatile
   934   001314                     
   935                           ;MCAL_LAYER/Timer/hal_timer0.c: 140:     TMR0H = (pre_work_out) >> 8;
   936   001314  5006               	movf	(_pre_work_out+1)^0,w,c
   937   001316  6ED7               	movwf	215,c	;volatile
   938   001318                     
   939                           ;MCAL_LAYER/Timer/hal_timer0.c: 141:     TMR0L = (uint8) (pre_work_out);
   940   001318  C005  FFD6         	movff	_pre_work_out,4054	;volatile
   941   00131C  0012               	return		;funcret
   942   00131E                     __end_of_TIMER0_ISR:
   943                           	callstack 0
   944                           
   945 ;; *************** function _RB7_ISR *****************
   946 ;; Defined at:
   947 ;;		line 514 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  source          1    wreg     unsigned char 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  source          1    0[COMRAM] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;Total ram usage:        1 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_Interrupt_Manager_High
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text6
   975   001292                     __ptext6:
   976                           	callstack 0
   977   001292                     _RB7_ISR:
   978                           	callstack 27
   979                           
   980                           ;incstack = 0
   981                           ;RB7_ISR@source stored from wreg
   982   001292  6E4B               	movwf	RB7_ISR@source^0,c
   983   001294                     
   984                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 515:     (INTCONbits.RBIF = 1);
   985   001294  80F2               	bsf	242,0,c	;volatile
   986   001296                     
   987                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 517:     if (0 == source) {
   988   001296  504B               	movf	RB7_ISR@source^0,w,c
   989   001298  A4D8               	btfss	status,2,c
   990   00129A  EF51  F009         	goto	i2u45_41
   991   00129E  EF53  F009         	goto	i2u45_40
   992   0012A2                     i2u45_41:
   993   0012A2  EF55  F009         	goto	i2l2046
   994   0012A6                     i2u45_40:
   995   0012A6  EF55  F009         	goto	i2l778
   996   0012AA                     i2l2046:
   997   0012AA                     i2l778:
   998   0012AA  0012               	return		;funcret
   999   0012AC                     __end_of_RB7_ISR:
  1000                           	callstack 0
  1001                           
  1002 ;; *************** function _RB6_ISR *****************
  1003 ;; Defined at:
  1004 ;;		line 500 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  source          1    wreg     unsigned char 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  source          1    0[COMRAM] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;Total ram usage:        1 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_Interrupt_Manager_High
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text7
  1032   0012AC                     __ptext7:
  1033                           	callstack 0
  1034   0012AC                     _RB6_ISR:
  1035                           	callstack 27
  1036                           
  1037                           ;incstack = 0
  1038                           ;RB6_ISR@source stored from wreg
  1039   0012AC  6E4B               	movwf	RB6_ISR@source^0,c
  1040   0012AE                     
  1041                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 501:     (INTCONbits.RBIF = 1);
  1042   0012AE  80F2               	bsf	242,0,c	;volatile
  1043   0012B0                     
  1044                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 503:     if (0 == source) {
  1045   0012B0  504B               	movf	RB6_ISR@source^0,w,c
  1046   0012B2  A4D8               	btfss	status,2,c
  1047   0012B4  EF5E  F009         	goto	i2u44_41
  1048   0012B8  EF60  F009         	goto	i2u44_40
  1049   0012BC                     i2u44_41:
  1050   0012BC  EF62  F009         	goto	i2l2036
  1051   0012C0                     i2u44_40:
  1052   0012C0  EF62  F009         	goto	i2l770
  1053   0012C4                     i2l2036:
  1054   0012C4                     i2l770:
  1055   0012C4  0012               	return		;funcret
  1056   0012C6                     __end_of_RB6_ISR:
  1057                           	callstack 0
  1058                           
  1059 ;; *************** function _RB5_ISR *****************
  1060 ;; Defined at:
  1061 ;;		line 486 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  source          1    wreg     unsigned char 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  source          1    0[COMRAM] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;Total ram usage:        1 bytes
  1080 ;; Hardware stack levels used: 1
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_Interrupt_Manager_High
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text8
  1089   0012C6                     __ptext8:
  1090                           	callstack 0
  1091   0012C6                     _RB5_ISR:
  1092                           	callstack 27
  1093                           
  1094                           ;incstack = 0
  1095                           ;RB5_ISR@source stored from wreg
  1096   0012C6  6E4B               	movwf	RB5_ISR@source^0,c
  1097   0012C8                     
  1098                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 487:     (INTCONbits.RBIF = 1);
  1099   0012C8  80F2               	bsf	242,0,c	;volatile
  1100   0012CA                     
  1101                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 489:     if (0 == source) {
  1102   0012CA  504B               	movf	RB5_ISR@source^0,w,c
  1103   0012CC  A4D8               	btfss	status,2,c
  1104   0012CE  EF6B  F009         	goto	i2u43_41
  1105   0012D2  EF6D  F009         	goto	i2u43_40
  1106   0012D6                     i2u43_41:
  1107   0012D6  EF6F  F009         	goto	i2l2026
  1108   0012DA                     i2u43_40:
  1109   0012DA  EF6F  F009         	goto	i2l762
  1110   0012DE                     i2l2026:
  1111   0012DE                     i2l762:
  1112   0012DE  0012               	return		;funcret
  1113   0012E0                     __end_of_RB5_ISR:
  1114                           	callstack 0
  1115                           
  1116 ;; *************** function _RB4_ISR *****************
  1117 ;; Defined at:
  1118 ;;		line 472 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  source          1    wreg     unsigned char 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  source          1    0[COMRAM] unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;Total ram usage:        1 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_Interrupt_Manager_High
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text9
  1146   0012E0                     __ptext9:
  1147                           	callstack 0
  1148   0012E0                     _RB4_ISR:
  1149                           	callstack 27
  1150                           
  1151                           ;incstack = 0
  1152                           ;RB4_ISR@source stored from wreg
  1153   0012E0  6E4B               	movwf	RB4_ISR@source^0,c
  1154   0012E2                     
  1155                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 473:     (INTCONbits.RBIF = 1);
  1156   0012E2  80F2               	bsf	242,0,c	;volatile
  1157   0012E4                     
  1158                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 475:     if (0 == source) {
  1159   0012E4  504B               	movf	RB4_ISR@source^0,w,c
  1160   0012E6  A4D8               	btfss	status,2,c
  1161   0012E8  EF78  F009         	goto	i2u42_41
  1162   0012EC  EF7A  F009         	goto	i2u42_40
  1163   0012F0                     i2u42_41:
  1164   0012F0  EF7C  F009         	goto	i2l2016
  1165   0012F4                     i2u42_40:
  1166   0012F4  EF7C  F009         	goto	i2l754
  1167   0012F8                     i2l2016:
  1168   0012F8                     i2l754:
  1169   0012F8  0012               	return		;funcret
  1170   0012FA                     __end_of_RB4_ISR:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function _INT2_ISR *****************
  1174 ;; Defined at:
  1175 ;;		line 466 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		None
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;Total ram usage:        0 bytes
  1194 ;; Hardware stack levels used: 1
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_Interrupt_Manager_High
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text10
  1203   001324                     __ptext10:
  1204                           	callstack 0
  1205   001324                     _INT2_ISR:
  1206                           	callstack 27
  1207   001324                     
  1208                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 467:     (INTCON3bits.INT2IF = 0);
  1209   001324  92F0               	bcf	240,1,c	;volatile
  1210   001326  0012               	return		;funcret
  1211   001328                     __end_of_INT2_ISR:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _INT1_ISR *****************
  1215 ;; Defined at:
  1216 ;;		line 460 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		None
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;Total ram usage:        0 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_Interrupt_Manager_High
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text11
  1244   001328                     __ptext11:
  1245                           	callstack 0
  1246   001328                     _INT1_ISR:
  1247                           	callstack 27
  1248   001328                     
  1249                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 461:     (INTCON3bits.INT1IF = 0);
  1250   001328  90F0               	bcf	240,0,c	;volatile
  1251   00132A  0012               	return		;funcret
  1252   00132C                     __end_of_INT1_ISR:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _INT0_ISR *****************
  1256 ;; Defined at:
  1257 ;;		line 454 in file "MCAL_LAYER/Interrupt/mcal_external_interrupt.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		None
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;Total ram usage:        0 bytes
  1276 ;; Hardware stack levels used: 1
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_Interrupt_Manager_High
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text12
  1285   00132C                     __ptext12:
  1286                           	callstack 0
  1287   00132C                     _INT0_ISR:
  1288                           	callstack 27
  1289   00132C                     
  1290                           ;MCAL_LAYER/Interrupt/mcal_external_interrupt.c: 455:     (INTCONbits.INT0IF = 0);
  1291   00132C  92F2               	bcf	242,1,c	;volatile
  1292   00132E  0012               	return		;funcret
  1293   001330                     __end_of_INT0_ISR:
  1294                           	callstack 0
  1295                           
  1296 ;; *************** function _ADC_ISR *****************
  1297 ;; Defined at:
  1298 ;;		line 315 in file "MCAL_LAYER/ADC/hal_adc.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		None
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used: 1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_Interrupt_Manager_High
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text13
  1326   001330                     __ptext13:
  1327                           	callstack 0
  1328   001330                     _ADC_ISR:
  1329                           	callstack 27
  1330   001330                     
  1331                           ;MCAL_LAYER/ADC/hal_adc.c: 316:     (PIR1bits.ADIF = 0);
  1332   001330  9C9E               	bcf	158,6,c	;volatile
  1333   001332  0012               	return		;funcret
  1334   001334                     __end_of_ADC_ISR:
  1335                           	callstack 0
  1336                           
  1337                           	psect	rparam
  1338   000000                     
  1339                           	psect	temp
  1340   00004C                     btemp:
  1341                           	callstack 0
  1342   00004C                     	ds	1
  1343   000000                     int$flags	set	btemp
  1344   000000                     wtemp8	set	btemp+1
  1345   000000                     ttemp5	set	btemp+1
  1346   000000                     ttemp6	set	btemp+4
  1347   000000                     ttemp7	set	btemp+8
  1348                           
  1349                           	psect	config
  1350                           
  1351                           ; Padding undefined space
  1352   300000                     	org	3145728
  1353   300000  FF                 	db	255
  1354                           
  1355                           ;Config register CONFIG1H @ 0x300001
  1356                           ;	Oscillator Selection bits
  1357                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  1358                           ;	Fail-Safe Clock Monitor Enable bit
  1359                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1360                           ;	Internal/External Oscillator Switchover bit
  1361                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1362   300001                     	org	3145729
  1363   300001  07                 	db	7
  1364                           
  1365                           ;Config register CONFIG2L @ 0x300002
  1366                           ;	Power-up Timer Enable bit
  1367                           ;	PWRT = OFF, PWRT disabled
  1368                           ;	Brown-out Reset Enable bits
  1369                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1370                           ;	Brown Out Reset Voltage bits
  1371                           ;	BORV = 3, Minimum setting
  1372   300002                     	org	3145730
  1373   300002  1F                 	db	31
  1374                           
  1375                           ;Config register CONFIG2H @ 0x300003
  1376                           ;	Watchdog Timer Enable bit
  1377                           ;	WDT = ON, WDT enabled
  1378                           ;	Watchdog Timer Postscale Select bits
  1379                           ;	WDTPS = 32768, 1:32768
  1380   300003                     	org	3145731
  1381   300003  1F                 	db	31
  1382                           
  1383                           ; Padding undefined space
  1384   300004                     	org	3145732
  1385   300004  FF                 	db	255
  1386                           
  1387                           ;Config register CONFIG3H @ 0x300005
  1388                           ;	CCP2 MUX bit
  1389                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1390                           ;	PORTB A/D Enable bit
  1391                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1392                           ;	Low-Power Timer1 Oscillator Enable bit
  1393                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1394                           ;	MCLR Pin Enable bit
  1395                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1396   300005                     	org	3145733
  1397   300005  81                 	db	129
  1398                           
  1399                           ;Config register CONFIG4L @ 0x300006
  1400                           ;	Stack Full/Underflow Reset Enable bit
  1401                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1402                           ;	Single-Supply ICSP Enable bit
  1403                           ;	LVP = ON, Single-Supply ICSP enabled
  1404                           ;	Extended Instruction Set Enable bit
  1405                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1406                           ;	Background Debugger Enable bit
  1407                           ;	DEBUG = 0x1, unprogrammed default
  1408   300006                     	org	3145734
  1409   300006  85                 	db	133
  1410                           
  1411                           ; Padding undefined space
  1412   300007                     	org	3145735
  1413   300007  FF                 	db	255
  1414                           
  1415                           ;Config register CONFIG5L @ 0x300008
  1416                           ;	Code Protection bit
  1417                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1418                           ;	Code Protection bit
  1419                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1420                           ;	Code Protection bit
  1421                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1422                           ;	Code Protection bit
  1423                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1424   300008                     	org	3145736
  1425   300008  0F                 	db	15
  1426                           
  1427                           ;Config register CONFIG5H @ 0x300009
  1428                           ;	Boot Block Code Protection bit
  1429                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1430                           ;	Data EEPROM Code Protection bit
  1431                           ;	CPD = OFF, Data EEPROM not code-protected
  1432   300009                     	org	3145737
  1433   300009  C0                 	db	192
  1434                           
  1435                           ;Config register CONFIG6L @ 0x30000A
  1436                           ;	Write Protection bit
  1437                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1438                           ;	Write Protection bit
  1439                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1440                           ;	Write Protection bit
  1441                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1442                           ;	Write Protection bit
  1443                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1444   30000A                     	org	3145738
  1445   30000A  0F                 	db	15
  1446                           
  1447                           ;Config register CONFIG6H @ 0x30000B
  1448                           ;	Configuration Register Write Protection bit
  1449                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1450                           ;	Boot Block Write Protection bit
  1451                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1452                           ;	Data EEPROM Write Protection bit
  1453                           ;	WRTD = OFF, Data EEPROM not write-protected
  1454   30000B                     	org	3145739
  1455   30000B  E0                 	db	224
  1456                           
  1457                           ;Config register CONFIG7L @ 0x30000C
  1458                           ;	Table Read Protection bit
  1459                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1460                           ;	Table Read Protection bit
  1461                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1462                           ;	Table Read Protection bit
  1463                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1464                           ;	Table Read Protection bit
  1465                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1466   30000C                     	org	3145740
  1467   30000C  0F                 	db	15
  1468                           
  1469                           ;Config register CONFIG7H @ 0x30000D
  1470                           ;	Boot Block Table Read Protection bit
  1471                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1472   30000D                     	org	3145741
  1473   30000D  40                 	db	64
  1474                           tosu	equ	0xFFF
  1475                           tosh	equ	0xFFE
  1476                           tosl	equ	0xFFD
  1477                           stkptr	equ	0xFFC
  1478                           pclatu	equ	0xFFB
  1479                           pclath	equ	0xFFA
  1480                           pcl	equ	0xFF9
  1481                           tblptru	equ	0xFF8
  1482                           tblptrh	equ	0xFF7
  1483                           tblptrl	equ	0xFF6
  1484                           tablat	equ	0xFF5
  1485                           prodh	equ	0xFF4
  1486                           prodl	equ	0xFF3
  1487                           indf0	equ	0xFEF
  1488                           postinc0	equ	0xFEE
  1489                           postdec0	equ	0xFED
  1490                           preinc0	equ	0xFEC
  1491                           plusw0	equ	0xFEB
  1492                           fsr0h	equ	0xFEA
  1493                           fsr0l	equ	0xFE9
  1494                           wreg	equ	0xFE8
  1495                           indf1	equ	0xFE7
  1496                           postinc1	equ	0xFE6
  1497                           postdec1	equ	0xFE5
  1498                           preinc1	equ	0xFE4
  1499                           plusw1	equ	0xFE3
  1500                           fsr1h	equ	0xFE2
  1501                           fsr1l	equ	0xFE1
  1502                           bsr	equ	0xFE0
  1503                           indf2	equ	0xFDF
  1504                           postinc2	equ	0xFDE
  1505                           postdec2	equ	0xFDD
  1506                           preinc2	equ	0xFDC
  1507                           plusw2	equ	0xFDB
  1508                           fsr2h	equ	0xFDA
  1509                           fsr2l	equ	0xFD9
  1510                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        35
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      1      75
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Result@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    _ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    adc_select_result_format@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    adc_select_voltage_ref@adc$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@obj$External_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@obj$External_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_Set_Interrupt_Handler@obj$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_Interrupt_Handler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_Interrupt_Handler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1278$External_CallBack	PTR FTN()void  size(2) Largest target is 0

    S1311$External_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    S1311$External_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    S1815$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S1985$Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S2621$buffer	PTR unsigned char  size(2) Largest target is 0

    S2621$source	PTR const unsigned char  size(2) Largest target is 0

    S663$ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    Timer0_Init@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0_Mode_Config@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Reg_Size_Config@timer$Timer0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@timer$Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer1_Mode_Config@timer$Timer1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupt_Manager_High in COMRAM

    _Interrupt_Manager_High->_RB4_ISR
    _Interrupt_Manager_High->_RB5_ISR
    _Interrupt_Manager_High->_RB6_ISR
    _Interrupt_Manager_High->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt_Manager_High in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt_Manager_High in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_Manager_High in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_Manager_High in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_Manager_High in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_Manager_High in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_Manager_High in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_Manager_High in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_Manager_High in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_Manager_High in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_Manager_High in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_Manager_High in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_Manager_High in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_Manager_High in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_Manager_High in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_Manager_High in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
             _Application_initialize
 ---------------------------------------------------------------------------------
 (1) _Application_initialize                               0     0      0       0
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Interrupt_Manager_High                               0     0      0     120
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                         _TIMER0_ISR
                         _TIMER1_ISR
 ---------------------------------------------------------------------------------
 (4) _TIMER1_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TIMER0_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_initialize
     _ecu_layer_initialize

 _Interrupt_Manager_High (ROOT)
   _ADC_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TIMER0_ISR
   _TIMER1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      1      4B       1       59.5%
BITBIGSFRhlhlhh     18      0       0      38        0.0%
BITBIGSFRllhh       15      0       0      41        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRhlhlll      8      0       0      40        0.0%
BITBIGSFRllhll       7      0       0      42        0.0%
BITBIGSFRlllhh       6      0       0      43        0.0%
BITBIGSFRhlhllh      5      0       0      39        0.0%
BITBIGSFRllllh       4      0       0      44        0.0%
BITBIGSFRlllll       4      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B      20        0.0%
DATA                 0      0      4B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 08 18:25:11 2024

       ?_Interrupt_Manager_High 004B                             l320 1334                             l963 12FE  
                           l964 12FE                             l969 1322                 __end_of_ADC_ISR 1334  
                           _ret 0046                             wreg 0FE8                 __end_of_RB4_ISR 12FA  
               __end_of_RB5_ISR 12E0                 __end_of_RB6_ISR 12C6                 __end_of_RB7_ISR 12AC  
                          l2066 131E                            l3308 12FA                            l1764 1334  
                          STR_1 1011                            _LATA 0F89                            _LATB 0F8A  
                          _LATC 0F8B                            _LATD 0F8C                            _LATE 0F8D  
                          _main 12FA                            fsr1l 0FE1                            btemp 004C  
                          start 000E  __end_of_Interrupt_Manager_High 1238                    ___param_bank 0000  
                   ?_TIMER0_ISR 004B                     ?_TIMER1_ISR 004B                __end_of_INT0_ISR 1330  
              __end_of_INT1_ISR 132C                __end_of_INT2_ISR 1328   _pre_work_out@hal_timer1$F2115 0001  
                 Relay_on@F3485 0022                           ?_main 004B                           _EEADR 0FA9  
                         _RB4_f 004A                           _RB5_f 0049                           i2l444 1332  
                         _RB6_f 0048                           _RB7_f 0047                           i2l742 132A  
                         i2l738 132E                           i2l746 1326                           i2l754 12F8  
                         i2l762 12DE                           i2l770 12C4                           i2l836 1234  
                         i2l778 12AA                           i2l949 1310                           i2l878 131C  
                         _TMR0H 0FD7                           _TMR1H 0FCF                           _TMR0L 0FD6  
                         _TMR1L 0FCE                           _PORTA 0F80                           _PORTB 0F81  
                         _PORTC 0F82                           _PORTD 0F83                           _PORTE 0F84  
                         _TRISA 0F92                           _TRISB 0F93                           _TRISC 0F94  
                         _TRISD 0F95                           _TRISE 0F96                           tablat 0FF5  
                         ttemp5 004D                           ttemp6 0050                           ttemp7 0054  
                         status 0FD8                           wtemp8 004D                 __initialization 1238  
                  __end_of_main 1306                       ??_ADC_ISR 004B                   _lat_registers 0032  
                        ??_main 004C                   __activetblptr 0003                led_turn_on@F3487 0026  
                     ??_RB4_ISR 004B                       ??_RB5_ISR 004B                       ??_RB6_ISR 004B  
                     ??_RB7_ISR 004B                          _ADRESH 0FC4                          _EEADRH 0FAA  
                        _ADRESL 0FC3                          _EEDATA 0FA8                          _EECON2 0FA7  
                        i2l2002 1328                          i2l2010 12E2                          i2l2012 12E4  
                        i2l2020 12C8                          i2l2006 1324                          i2l2022 12CA  
                        i2l2030 12AE                          i2l2016 12F8                          i2l2032 12B0  
                        i2l2040 1294                          i2l2026 12DE                          i2l2042 1296  
                        i2l2050 1312                          i2l2036 12C4                          i2l2052 1314  
                        i2l2060 1308                          i2l3100 117A                          i2l2046 12AA  
                        i2l2054 1318                          i2l2062 130C                          i2l3110 11B2  
                        i2l3102 118A                          i2l3120 11DE                          i2l3112 11B6  
                        i2l3104 118E                          i2l3040 1038                          i2l2058 1306  
                        i2l3130 120C                          i2l3122 11E4                          i2l3114 11BC  
                        i2l3106 1194                          i2l3050 1074                          i2l3042 1046  
                        i2l3034 1018                          i2l3132 121A                          i2l3124 11F2  
                        i2l3116 11CA                          i2l3108 11A2                          i2l3060 10A6  
                        i2l3052 1078                          i2l3044 1054                          i2l3036 1026  
                        i2l3134 122A                          i2l3126 1202                          i2l3118 11DA  
                        i2l3070 10D8                          i2l3062 10B4                          i2l3054 1086  
                        i2l3046 1058                          i2l3038 1034                          i2l3136 122E  
                        i2l3128 1206                          i2l3080 1116                          i2l3072 10E6  
                        i2l3064 10B8                          i2l3056 1094                          i2l3048 1066  
                        i2l3090 1144                          i2l3082 111C                          i2l3074 10F4  
                        i2l3066 10C6                          i2l3058 1098                          i2l3092 1152  
                        i2l3084 112A                          i2l3076 1102                          i2l3068 10D4  
                        i2l3094 1162                          i2l3086 113A                          i2l3078 1112  
                        i2l3096 1166                          i2l3088 113E                          i2l3098 116C  
                        i2l1958 1330                          i2l1998 132C                  Relay_off@F3490 0021  
       ?_Application_initialize 004B                          clear_0 125E                          isa$std 0001  
                  __pdataCOMRAM 0028                    __mediumconst 0000                          tblptrh 0FF7  
                        tblptrl 0FF6                          tblptru 0FF8                      __accesstop 0080  
       __end_of__initialization 1264                       ?_INT0_ISR 004B                       ?_INT1_ISR 004B  
                     ?_INT2_ISR 004B                   ___rparam_used 0001                  __pcstackCOMRAM 004B  
__end_of_Application_initialize 1324                   RB4_ISR@source 004B      _RB6_Interrupt_Handler_High 000F  
                 RB5_ISR@source 004B       _RB5_Interrupt_Handler_Low 0011                      ??_INT0_ISR 004B  
                    ??_INT1_ISR 004B                      ??_INT2_ISR 004B          _INT2_Interrupt_Handler 0019  
                 RB6_ISR@source 004B               led_turn_off@F3492 0025                    ??_TIMER0_ISR 004B  
                  ??_TIMER1_ISR 004B                         _ADC_ISR 1330                         _RB4_ISR 12E0  
                       _RB5_ISR 12C6                         _RB6_ISR 12AC                         _RB7_ISR 1292  
                       i2u42_40 12F4                         i2u42_41 12F0                         i2u43_40 12DA  
                       i2u43_41 12D6                         i2u44_40 12C0                         i2u44_41 12BC  
                       i2u45_40 12A6                         i2u45_41 12A2                   RB7_ISR@source 004B  
                    _btn_values 1001                  _tris_registers 003C              __end_of_TIMER0_ISR 131E  
            __end_of_TIMER1_ISR 1312                         __Hparam 0000                         __Lparam 0000  
                  __psmallconst 1000                         __pcinit 1238                         __ramtop 1000  
                       __ptext0 12FA                         __ptext1 131E                         __ptext2 1334  
                       __ptext4 1306                         __ptext5 1312                         __ptext6 1292  
                       __ptext7 12AC                         __ptext8 12C6                         __ptext9 12E0  
                     _T0CONbits 0FD5                       _T1CONbits 0FCD                  __pintcode_body 1016  
          end_of_initialization 1264                         int_func 1016                         postdec1 0FE5  
                       postinc0 0FEE                       _PORTBbits 0F81        _Timer0_Interrupt_Handler 0007  
      ??_Interrupt_Manager_High 004C                   __pidataCOMRAM 126E             start_initialization 1238  
                      ?_ADC_ISR 004B      _RB5_Interrupt_Handler_High 0013    __end_of_ecu_layer_initialize 1336  
                      ?_RB4_ISR 004B                        ?_RB5_ISR 004B                        ?_RB6_ISR 004B  
                      ?_RB7_ISR 004B                     __pbssCOMRAM 0001       _RB6_Interrupt_Handler_Low 000D  
        _INT0_Interrupt_Handler 001D           Relay_initialize@F3480 0023          __ADC_Interrupt_Handler 001F  
                     __pintcode 0008                     __smallconst 1000                        _INT0_ISR 132C  
                      _INT1_ISR 1328                        _INT2_ISR 1324        ??_Application_initialize 004C  
                      _PIE1bits 0F9D                        i2u141_40 1026                        i2u141_41 1022  
                      i2u150_40 10B4                        i2u142_40 1034                        i2u150_41 10B0  
                      i2u142_41 1030                        i2u151_40 10C6                        i2u143_40 1046  
                      i2u151_41 10C2                        i2u143_41 1042                        i2u160_40 1162  
                      i2u152_40 10D4                        i2u144_40 1054                        i2u160_41 115E  
                      i2u152_41 10D0                        i2u144_41 1050                        i2u161_40 117A  
                      i2u153_40 10E6                        i2u145_40 1066                        i2u161_41 1176  
                      i2u153_41 10E2                        i2u145_41 1062                        i2u170_40 122A  
                      i2u162_40 118A                        i2u154_40 10F4                        i2u146_40 1074  
                      i2u170_41 1226                        i2u162_41 1186                        i2u154_41 10F0  
                      i2u146_41 1070                        i2u163_40 11A2                        i2u155_40 1102  
                      i2u147_40 1086                        i2u163_41 119E                        i2u155_41 10FE  
                      i2u147_41 1082                        i2u164_40 11B2                        i2u156_40 1112  
                      i2u148_40 1094                        i2u164_41 11AE                        i2u156_41 110E  
                      i2u148_41 1090                        i2u165_40 11CA                        i2u157_40 112A  
                      i2u149_40 10A6                        i2u165_41 11C6                        i2u157_41 1126  
                      i2u149_41 10A2                        i2u166_40 11DA                        i2u158_40 113A  
                      i2u166_41 11D6                        i2u158_41 1136                        i2u167_40 11F2  
                      i2u159_40 1152                        i2u167_41 11EE                        i2u159_41 114E  
                      i2u168_40 1202                        i2u168_41 11FE                        i2u169_40 121A  
                      i2u169_41 1216                        _PIR1bits 0F9E          _Interrupt_Manager_High 0008  
                    _ADCON0bits 0FC2                      _ADCON1bits 0FC1                      _ADCON2bits 0FC0  
                   _INTCON2bits 0FF1                     _INTCON3bits 0FF0                       copy_data0 124C  
          _ecu_layer_initialize 1334                      _EECON1bits 0FA6                        __Hrparam 0000  
                      __Lrparam 0000              __end_of_btn_values 1011              led_intialize@F3482 0027  
                      __ptext10 1324                        __ptext11 1328                        __ptext12 132C  
                      __ptext13 1330        _Timer1_Interrupt_Handler 0003           ?_ecu_layer_initialize 004B  
                      isa$xinst 0000                        int$flags 004C                      _INTCONbits 0FF2  
                  _pre_work_out 0005                        intlevel2 0000          led_toggle_status@F3497 0024  
                    _TIMER0_ISR 1312                      _TIMER1_ISR 1306      _RB4_Interrupt_Handler_High 0017  
        _Application_initialize 131E      _RB7_Interrupt_Handler_High 000B                  _port_registers 0028  
     _RB4_Interrupt_Handler_Low 0015       _RB7_Interrupt_Handler_Low 0009          ??_ecu_layer_initialize 004C  
        _INT1_Interrupt_Handler 001B  
